<?xml version="1.0" ?>
<root>
  <title>SVMおよびTransductiveSVMを用いた製品スペック情報の抽出</title>
  <author>嶋田和孝林晃司遠藤勉</author>
  <jabstract>ネットワークの普及により，今までは紙面で伝えられていた情報の電子化が進んでいる．本稿では，それら電子化された情報の一つである，製品のスペック情報の抽出について議論する．現在，製品情報を収集し，利用しているポータルサイトが数多く存在するため，膨大なWebページの中から製品のスペック情報を的確に抽出することは，そのようなポータルサイトの自動構築のために大きな意義を持つ．製品のスペック情報は，殆どの場合，表形式で記述されている．Web上の表はHTMLの+&lt;+TABLE+&gt;+タグを用いて記述されるが，+&lt;+TABLE+&gt;+タグは表を記述する以外にも，レイアウトを整えたりする場合に頻繁に用いられる．ある特定の領域においては，+&lt;+TABLE+&gt;+の70%がレイアウト目的で使われているとの報告もある．そのため，HTML文書中の+&lt;+TABLE+&gt;+タグが表なのか，それとも他の目的で使用されているのかを判別する必要がある．提案手法では，SupportVectorMachines(SVM)を用いて，Webページ中に存在する表領域が製品スペックかどうかの判定を行う．TransductiveSVMを用いて，訓練データの削減についても考察する．パソコン，デジタルカメラ，プリンタの3種類の製品について，実験を行い，それぞれの製品について高い再現率と適合率を得た．訓練データが少ない場合，TransductiveSVMを用いた手法の方が，通常のSVMと比べ，精度が改善されることを確認した．</jabstract>
  <jkeywords>製品スペック，表抽出，分類，TransductiveSVM</jkeywords>
  <section title="はじめに">近年のWroldWideWeb(WWW)の急速な普及により，世界中から発信された膨大な電子化文書へのアクセスが可能になった．しかしながら，そのような膨大な情報源から，必要な情報のみを的確に得ることは困難を極める．的確な情報を得るために，テキストを対象とした文書分類や情報の抽出などの様々な技術が注目され，研究されている．しかしながら，Web上に存在するのはテキスト情報だけではなく，表や画像など様々な表現形式が使用されている．ここで，表形式で記述された情報について着目する．従来の情報検索システムなどでは，表はテキストとして扱われることが多かった．表は属性と属性値によって構造化された情報であり，その特性を考えると，表をテキストとして扱うのではなく，テキスト部分と切り離し，表として認識し，利用することが情報検索システムなどの精度向上に繋がる．また表は情報間の関係を記述するのに適した表現形式であり，Web上に存在する文書から表を抽出することは，WebMiningや質疑応答システム，要約処理などのための重要なタスクの一つである．本稿では，電子化された情報の一つである，製品のスペック情報の抽出について議論する．一般に，パソコンやデジタルカメラ，プリンタなどの製品の機能や装備などのスペック情報は表形式で記述される．本稿ではこれらの表形式で記述されたスペック情報を性能表と呼ぶことにする．その例を図に示す．性能表を扱う理由としては，ポータルサイトの存在現在，Web上には，数多くの製品情報に関するポータルサイトやオンラインショッピングサイトが存在する．これらのサイトで，ユーザが製品を比較する際に最も重要な情報の一つが性能表である．多くの製品は頻繁に最新機種が発表され，その度に性能表を人手で収集するのはコストがかかる．膨大なWebページの中から製品のスペック情報を的確に抽出することは，そのようなポータルサイトの自動構築のために大きな意義を持つ．製品情報のデータベース化性能表は表形式で記述されているので，表領域が正しく特定されれば，属性と属性値の切り分けや対応付けなどの解析が比較的容易で，製品データベースの自動獲得が可能になる．これらのデータを利用し，ユーザの要求に合致した製品を選択するシステムなどの構築が可能になる．などが挙げられる．Web上での表の記述に関しては，いくつか問題点がある．その一つが，+&lt;+TABLE+&gt;+タグの一般的な使用方法である．Web上の表はHTMLの+&lt;+TABLE+&gt;+タグを用いて記述されるが，+&lt;+TABLE+&gt;+タグは表を記述する以外にも，レイアウトを整えたりする場合に頻繁に用いられる．ある特定の領域においては，+&lt;+TABLE+&gt;+の70%がレイアウト目的で使われているとの報告もある．そのため，HTML文書中の+&lt;+TABLE+&gt;+タグが表なのか，それとも他の目的で使用されているのかを判別する必要がある．また，実際のWeb文書では，+&lt;+TABLE+&gt;+の入れ子構造が頻繁に見られる．性能表抽出のタスクでは，入れ子構造になった+&lt;+TABLE+&gt;+の中で，どこまでが性能表を表しているかという表領域を特定する必要がある．提案手法では，(1)フィルタリング，(2)表領域抽出，の2つのプロセスによってWeb文書群から性能表を獲得することを試みる．処理の流れを図に示す．ここで，フィルタリングとは，製品メーカのサイトからHTMLダウンローダで獲得したWeb文書群を対象とし，その中から性能表を含む文書を抽出することを指す．フィルタリング処理では，文書分類などのタスクで高い精度を収めているSupportVectorMachines(SVM)を用いる．また，少ない訓練データでもSVMと比較して高い精度を得ることができるといわれているTransductiveSVM(TSVM)とSVMを比較する．一方，表領域抽出とは，フィルタリング処理で得られた文書中から，性能表の領域のみを抽出することを意味する．表領域抽出処理では，フィルタリングの際にSVMおよびTSVMのための素性として選ばれた語をキーワードとし，それらを基に表領域を特定する．以下では，まず，2節で，本稿で扱う性能表抽出のタスクに最も関連のある表認識などの関連研究について説明する．3節では，フィルタリングに用いるSVMとTSVMについて述べ，学習に用いる素性選択の手法について説明する．続いて，4節で，各Web文書から表領域を特定する手法について述べ，5節で提案手法の有効性を検証し，6節でまとめる．</section>
  <section title="関連研究">本節では，本稿で扱う性能表抽出のタスクに最も関連のある表認識・抽出などについての先行研究について述べる．表やレイアウト構造を持つ文書からの構造解析および情報抽出に関する研究は，古くからなされている．しかしながら，従来の研究では，画像中の表領域の認識，箇条書きやプレインテキストで書かれた表の認識などが主な研究対象だった．一方で，近年，HTMLで記述された文書を対象とした表認識や表抽出に関する研究がなされている．Chenらは，HTML文書中の表の認識手法について提案したが，表認識のためのルールが人手で作成されており，汎用性や拡張性に問題がある．Itaiらは，表を対象としたHTML文書からの情報抽出とその統合について報告している．しかし，表領域の抽出手法については十分に議論されていない．Wangらは，決定木やSVMなどを用いて表抽出を試みている．しかし，これらの手法は，学習のために十分な訓練データが必要となる．Yoshidaらは，EMアルゴリズムを用いることで，この問題を解消しているが，精度は，Wangらの手法の方が高い．本稿では，文書分類で高い精度を収めているSVMを性能表抽出のタスクに適用し，少ない訓練データでも比較的高い精度が得られるといわれるTSVMとSVMの精度を比較する．上に述べた従来のHTMLからの表抽出に関する研究は，一般的な表を抽出することを目的としていることが多い．すなわち，+&lt;+TABLE+&gt;+タグで記述された領域が表であるか否かのみを判定することである．このような一般的な表抽出タスクでは，その+&lt;+TABLE+&gt;+タグ中にどのような内容が記述されているかを対象としないため，言語情報よりも構造情報(例えば，縦および横のセルの一貫性など)を重視する．一方で，本タスクは表という構造情報を利用しながら，「ある特定の内容が記述された表」を抽出することを目的としている．内容にまで踏みいった抽出を行うには，構造情報だけではなく，言語情報も重要な手がかりとなる．本タスクが従来の表抽出と大きく異なる点は，上記の理由から，言語情報を重視した抽出処理を行うことである．先行研究において，Yoshidaらは表抽出ののちに表のクラスタリングを行なっている．しかし，一般に1つの文書中に膨大な数の+&lt;+TABLE+&gt;+タグが存在するため，機械学習などのための訓練データとして，全ての表にその表の内容が何であるかというラベルを付ける作業が高コストとなる．この問題点を解消するために，本研究では文書をフィルタリングしたのちに特定の表を抽出するという手法を取る．この手法により，正例および負例のラベル付けは，+&lt;+TABLE+&gt;+タグ単位ではなく，ページ単位となり，人手によるコストを最小限に抑え，実用的な精度を得ることができるという利点がある．</section>
  <section title="フィルタリング">本節では，フィルタリング処理について述べる．フィルタリングとは，製品メーカのサイトからHTMLダウンローダで獲得したWeb文書群から，性能表を含む文書を抽出することを指す．フィルタリング処理では，SVMおよびTSVMを用いる．</section>
  <subsection title="Support Vector Machines">SVMはVapnikらが考案したOptimalSeparatingHyperplaneを起源とする，超平面による特徴空間の分割法であり，現在，二値分類問題を解決するための最も優秀な学習モデルの一つとして知られている．SVMは訓練サンプル集合からマージン最大化と呼ばれる戦略を用いて，線形識別関数のパラメータを学習する．ここで，は入力ベクトルである．とbがマージン最大化戦略の際に学習されるパラメータであり，f()+1,-1となる．図にSVMの学習モデルを示す．＋は正のサンプル，−は負のサンプルである．図中の実線はy=f()=0となる点の集合であり，分離超平面(hyperplane)と呼ばれる．サンプルは，この超平面を境界として2つのクラスに分類される．すなわち，識別関数は分離超平面によって入力素性空間を二分する．また，超平面に対して最近傍のサンプル間の距離をマージンと呼び，|+b|/||||で表す．図中の2つの破線上にある，分類を決定づける事例をサポートベクタと呼ぶ．訓練データが線形分離可能な場合，およびbは複数存在することから，以下のような制約を与える．この制約により，距離は1/||||となり，結論として識別関数は[subject~~to:^n_i=1:y_i[_i+b]1]となる．本研究では，線形カーネルを利用した．</subsection>
  <subsection title="Transductive SVM">一般に，高精度の分類器生成には多量の訓練サンプルを必要とする．しかし，十分な量の訓練データを人手によってラベリングするのは非常に高コストな作業といえる．そこで，少量の訓練データで高精度の分類器を生成する手法が期待される．Vapnikが提案した理論を基にJoachimsによって具体化されたTransductiveSVM(TSVM)は，Transductive法と呼ばれる，与えられたラベル無しデータの分布に注目し，ラベル無しデータの誤分類の最小化を目的とする学習方法をSVMに適用し，拡張したもので，学習時にラベル無しデータの分布を考慮する事で分類精度を上げる手法である．以下にTSVMのアルゴリズムを示す．図は，TSVMの学習過程の例である．図中の＋と−は，通常のSVMが分離超平面を生成する際に使用した正のサンプルと負のサンプルを表す(すなわち図における＋および−と同じ意味を持つ)．ここで，およびはそれぞれ最初のSVMによる分離超平面によって正例および負例と判断されたラベル無しデータを表す．例では，マージン内にあるとがアルゴリズム中のStep4の部分で入れ換えられ，再学習の結果，マージンが最大化された新しい分離超平面が得られる過程を示している．TSVMにおいても，通常のSVMと同様に線形カーネルを使用した．線形分離可能な場合，TSVMの識別関数および制約条件は下式に拡張される．[subject~~to:^n_i=1:y_i[_i+b]1][*6em^n_i=1:y_i^*[_i^*+b]1]ここで，_j^*およびy_j^*は，それぞれ仮クラスが与えられたラベル無データにおける入力ベクトルおよび仮クラスである．</subsection>
  <subsection title="素性選択">続いて，SVMおよびTSVMのための素性選択について述べる．本研究では，以下の条件を全て満たすものを素性候補とした．これらの条件に基づき，素性となる候補をWeb文書から抽出する．条件(1)では表中の要素を属性および属性値に切り分ける必要がある．ここでは，一般に殆どの性能表は第1列目(最左列)に属性が現れ，それより右側の列に属性値が存在するという経験則から，最左列の要素を属性だと解釈する．表の属性部分を素性に使い，属性値を素性として用いない理由は，製品の属性(例えば，パソコンならCPUやメモリなど)は，新しい機種が発売されても変更されにくいのに対し，属性値(例えば，CPUでいえば，800MHz，2GHzなど)は，その値や表現に揺れが生じやすいためである．素性候補の抽出は，以下の手順で行われる．HTML文書から+&lt;+TABLE+&gt;+タグで記述された領域を抽出する．+&lt;+TABLE+&gt;+タグ中の各+&lt;+TR+&gt;+タグ中の初めの+&lt;+TD+&gt;+タグの内容を抽出する(図)．得られた文字列が25文字以内であれば，形態素解析を行い，素性候補を抽出する．25文字という制約は経験的に定められた．続いて，素性候補について重み付けを行い，素性を選択する．本稿では，(1)正規化tfidf,(2)ベイズの定理の2種類を用いて，その精度を比較，考察する．ここで，性能表を含んでいる文書中の+&lt;+TABLE+&gt;+タグ内で顕著に生起する語と，性能表を含んでいない文書中の+&lt;+TABLE+&gt;+タグ内で顕著に生起する語を素性とする．以下に各手法での素性選択の流れを示す．</subsection>
  <section title="表領域抽出">本節では，表領域抽出処理について述べる．表領域抽出処理とは，フィルタリング処理によって得られた性能表を含んでいる文書から性能表の領域を特定する処理を指す．一般に，1つのHTML文書中には複数の+&lt;+TABLE+&gt;+タグが存在するため，それらの中から特定の表のみを抽出する処理が必要となる．</section>
  <subsection title="スコアリング">まず，文書内の全ての+&lt;+TABLE+&gt;+タグについて，それぞれにユニークなIDとその+&lt;+TABLE+&gt;+タグの深さに関する情報を付加する．深さは1から始まり，+&lt;+TABLE+&gt;+タグが入れ子構造になれば，その値は大きくなる．例を図に示す．次に，各+&lt;+TABLE+&gt;+_idについてスコアリングを行う．スコアリングには，前節で素性として選ばれた語tとその値ws^real_tを用いる．各+&lt;+TABLE+&gt;+_idの最左列の要素について，以下の式でスコアを計算する．ここで，W_listは各+&lt;+TABLE+&gt;+_idの最左列のセル中に存在する単語のリストを表し，sは，+&lt;+TABLE+&gt;+_idの最左列の要素に生起したキーワードtの総数を表す．このScore_idが最大になる+&lt;+TABLE+&gt;+_idを性能表であると見なし，抽出する．また，1つの文書に複数の性能表が含まれていることもある．そこで，Scoreが最大になる+&lt;+TABLE+&gt;+にマッチしたキーワードの45がマッチする+&lt;+TABLE+&gt;+も性能表だとして抽出する．</subsection>
  <subsection title="特殊な構造への処理">性能表が必ずしも1つの+&lt;+TABLE+&gt;+タグで構成されているとは限らない．実際に複数の表が入れ子構造になった性能表や複数の+&lt;+TABLE+&gt;+タグで分割されている性能表が多く存在する．前者の例は，図でid=5およびid=6がまとまって1つの性能表である場合であり，後者の例はid=1とid=5が1つの性能表である場合である．入れ子構造になった+&lt;+TABLE+&gt;+タグの場合，ある+&lt;+TABLE+&gt;+_idが性能表と見なされたとすると，その+&lt;+TABLE+&gt;+より深さの深い+&lt;+TABLE+&gt;+は，性能表の一部だとして抽出する．さらに特殊な入れ子構造の例として，ブラウジングの際の視覚効果を狙い，+&lt;+TABLE+&gt;+タグ中の各+&lt;TD&gt;...&lt;/TD&gt;+内の要素が単一の+&lt;+TABLE+&gt;+タグで構成されている場合がある．このような場合は入れ子構造になっている+&lt;+TABLE+&gt;+タグ部分を通常の単一セルと見なして処理する．図に例を示す．続いて，1つの性能表が複数の+&lt;+TABLE+&gt;+タグによって構成されている場合の処理について述べる．まず，次の条件を満たす+&lt;+TABLE+&gt;+_idを抽出する．+&lt;+TABLE+&gt;+タグの深さが等しい．同じ親を持つ+&lt;+TABLE+&gt;+タグである．図でいえば，id=1とid=5のペア，id=2とid=4のペアがこれにあたる．次に抽出された+&lt;+TABLE+&gt;+タグ群について，次の項目をチェックする．これらの項目のうち，2つ以上の項目に，抽出された+&lt;+TABLE+&gt;+群がマッチする場合は，それらを1つの+&lt;+TABLE+&gt;+として捉え，スコアリングの際に，それぞれのスコアの和をその+&lt;+TABLE+&gt;+のスコアとする．</subsection>
  <section title="実験">本節では，提案したフィルタリングおよび表領域抽出処理に関する評価実験について述べる．実験対象となる製品は，パソコン，デジタルカメラおよびプリンタの3種類とした．28の製品メーカサイトからHTMLダウンローダを用いて獲得したHTML文書群を評価実験の対象とした．総データ数は86737文書であり，それら文書の製品ごとの内訳を表に示す．但し，性能表を含んでいない文書群中には，別の製品の性能表が含まれている．例えば，デジタルカメラの場合は，性能表を含んでいない文書にフィルムカメラやビデオカメラなどの性能表が含まれていることがある．</section>
  <subsection title="フィルタリングに関する実験">まず，フィルタリング処理について評価する．実装には，SVM^lightを使用した．評価の基準として，適合率，再現率，F値を用いる．それぞれの値は以下の式で算出される．*-0.3cmフィルタリング処理では，訓練データ数を100文書，300文書，500文書，1000文書とした，4つの場合について評価した．それぞれの訓練データは全データからランダムに5セットずつ抽出され，適合率および再現率は5セットの実験結果の平均値とした．評価データは，ダウンローダによって獲得された全データから，サンプリングされた訓練データを除いたもので，訓練データと評価用のデータは重複しない．TSVMのためのラベル無しデータとしては，評価データからサンプリングした1000文書を用いた．ラベル無しデータと評価データは重複している．素性選択としてベイズの定理を用いた場合の実験結果を表に，正規化tfidfを用いた場合の実験結果を表に示す．図にベイズの定理もしくは正規化tfidfによって素性として選択された単語の例を示す．単語とともに記述されている数値は，それぞれの手法によって算出された，性能表を含む文書群(D_real)もしくは性能表を含まない文書群(D_no)における，その単語の重みを表す．例えば，図中の正規化tfidfの例では，メモリやスロットという単語はD_realで顕著に出現し，方法やロードなどはD_noで顕著に出現したことを表している．この値を基にSVMのための素性が選択された．フィルタリング処理で抽出された文書の例を示す．図は，デジタルカメラを対象とした場合の正解例である．表の最左列に細分化された多くの属性が存在するため，訓練データから抽出された素性とマッチする．このように最左列に多く属性が存在する場合は，正しく分類される．一方で，図は同じくデジタルカメラを対象とした場合の失敗例である．この失敗例は，ある製品で撮影した写真の画像サンプルに関する文書であり，この文書には性能表が含まれていない．しかし，文書中にあるいくつかの+&lt;+TABLE+&gt;+中の最左列に訓練データで抽出した素性がマッチしてしまい，誤抽出となった．図は，性能表を含んでいるにもかかわらず，フィルタリングで獲得できなかった例である．この文書に含まれる性能表は，属性部分が細かく分類されておらず，属性値の欄に箇条書きで細分化された属性が記述されている．提案手法では，分類器のための素性を表の最左列に限定しているため，このような性能表は正しく獲得できない場合がある．ベイズの定理と正規化tfidfによって選ばれた素性を比較すると，多くの場合，正規化tfidfの方が高いF値を収めた．製品種別で比較すると，デジタルカメラの精度が低くなる傾向があり，プリンタもパソコンに比べると精度が落ちる．この理由としては，(1)パソコンの性能表は比較的大きな表であることが多く，有効なキーワードが得やすいこと，(2)デジタルカメラのメーカは，フィルムカメラやビデオカメラも扱っていることが多く，プリンタの場合にもコピー機やスキャナのような対象となる性能表によく似たノイズが同じサイト内に存在すること，などが挙げられる．しかしながら，このように非常に似た性能表が混在しているにもかかわらず，比較的高いF値を得ることができている．SVMとTSVMについて比較すると，ベイズの定理を用いて素性を選択した場合は殆どの実験でSVMに比べ，TSVMの方が高いF値を得た．正規化tfidfを用いた場合は，TSVMのF値の方が低くなることが多いが，両方の素性とも，訓練データが少ない場合は，TSVMのF値がSVMのF値を上回る傾向がみられた．これは，訓練データが少ない場合のTSVMの有効性を示している．TSVMがSVMのF値を上回っている殆どの場合では，再現率が大幅に向上している．これは，TSVMが正例と負例の分布に基づいて再学習を行うためである．今回の実験では，ラベル無しデータの正例と負例の分布については，訓練データ中の正例と負例の分布を用いたが，ここに全データから算出された正例と負例の比を適用すると実験結果は表のようになる．TSVMで使用する正例と負例の比が正確であれば，少数の訓練データの場合，さらなる精度向上に繋がることが確認できた．実験結果より，本タスクでは，訓練データが少ない場合においてTSVMが有効に機能することが確認された．続いて，素性選択に使用した条件について考察する．節で示したように，素性は表の最左列のみを使用している．この条件の有効性を検証するために，素性選択に最左列という条件を除いた場合の結果を表に示す．訓練および評価データは最左列に限定したものと同じものを使用しており，素性選択の手法には，正規化tfidfを用いた．表は，通常のSVMに関する実験結果である．一部で，表中の全ての要素を素性選択に用いた場合の方が良いF値を得ることがあるが，平均で3〜4%程度，最大で約13%，素性選択を最左列に限定した方が良いという実験結果が得られた．素性選択を最左列に限定しない場合にF値が落ちる原因は，1つの文書に含まれる+&lt;+TABLE+&gt;+タグが多いことが考えられる．我々が用いた実験データでは，1つの文書に30個程度の+&lt;+TABLE+&gt;+タグが存在する．最左列という条件を除くと，性能表を含む文書中の関係のない+&lt;+TABLE+&gt;+タグの中身まで素性候補としてしまう可能性が高くなり，それが精度に影響するものと考えられる．実験結果より，素性選択に関する条件の有効性も確認できた．</subsection>
  <subsection title="表領域抽出に関する実験">続いて，表領域抽出処理について実験する．ここでは，SVMおよびTSVMの素性選択に使用した，性能表を含む文書群(D_real)中で高い重みを持つ単語tをキーワードとし，その値ws^real_tを用いる．それらのキーワードによって，性能表を含む文書からどれだけの性能表の領域を正しく特定できるかを評価する．すなわち，実験データは，表の各製品の「性能表を含んでいる文書」に含まれる文書となる．実験には，フィルタリング処理で最もF値が良かった実験結果の素性をキーワードとして用いた．実験結果を表に示す．正解率は以下の式で算出される．表中で，部分成功とは，ある製品の性能表が複数の並列した+&lt;+TABLE+&gt;+タグで構成されており(例えば，図のid=1とid=5が1つの性能表である場合)，その内のどれかが欠けている場合を指す．過抽出は，正解領域だけでなく，別の+&lt;+TABLE+&gt;+タグも併せて抽出した場合を表しており，誤抽出は，性能表ではない+&lt;+TABLE+&gt;+タグを抽出した場合である．実験結果より，パソコンの場合は非常に高い精度で表領域を特定できることがわかる．パソコンの性能表の領域抽出の精度が高い理由としては，一般にパソコンの性能表が(1)比較的大きな表であること，(2)性能表が複数の並列した+&lt;+TABLE+&gt;+タグで記述されることが少ないこと，などが挙げられる．それと比較すると，デジタルカメラとプリンタの表領域抽出精度は若干落ちる．デジタルカメラやプリンタは，(3)性能表を含む文書中に存在する+&lt;+TABLE+&gt;+タグの数がパソコンに比べて若干多いこと，(4)複数の並列した+&lt;+TABLE+&gt;+タグで一つの性能表が記述されることが多いこと，などが精度が劣る原因である．プリンタの場合で，誤抽出が多く見られるのは，(3)が大きな原因だと考えられる．(4)に対しては，表領域抽出処理で，各+&lt;+TABLE+&gt;+の構造的な類似度を用いて結合処理を行っているが，並列する+&lt;+TABLE+&gt;+間に書式の異なる+&lt;+TABLE+&gt;+や性能表と関係のない+&lt;+TABLE+&gt;+が挿入されると，条件を満たさなくなり，+&lt;+TABLE+&gt;+が結合されない．その例を図に示す．図(b)の例では，3つの+&lt;+TABLE+&gt;+は同じ深さで存在するが，[スキャナ付属品]の表が[スキャナ部分]と[プリンタ部分]の表の構造(セルの数とセルの幅，対応するセルへの背景色)と異なるため，結合されず，最もスコアが高い+&lt;+TABLE+&gt;+のみが抽出されることになる．誤抽出や結合に失敗する場合の対処法として，スコアがある閾値以上の+&lt;+TABLE+&gt;+のみを性能表として抽出するという手法が考えられるが，一般的な閾値を見つけることは難しい．また，現在我々が対象としているデータは，負例(D_no)に比べて，正例(D_Real)の数が極端に少ないため，サンプリングする訓練データの数によっては，十分な正例が得られず，必ずしも十分なキーワードが得られるとは限らない．その結果，設定した閾値によっては多くの性能表が棄却される場合もある．精度向上のためには，訓練データ中の正例の数をいかに多く獲得するかが課題となる．性能表には製品ごとやメーカごとに，その書式や使われている用語にある程度一貫性がある場合が多い．精度向上のための別の手法としては，抽出処理に利用するキーワードを全データから獲得するのではなく，メーカごとに獲得し，それらを用いて表領域抽出処理を行うことなども今後の課題として考えられる．また，この実験とは別に，各製品に対して5分割交差検定を行った．すなわち，全データを5分割し，そのうち4つを性能表抽出のためのキーワード抽出処理の訓練データとし，残りの1つを評価データとした．実験結果を表に示す．5分割にして実験を行ったことにより，フィルタリングに使用した素性の場合に比べ，訓練データの数が多くなるため，有効なキーワードが獲得できた結果，全体的に誤抽出の数が減少した．部分成功の数が増加したのは，フィルタリングに使用した素性ではキーワード不足で誤抽出となっていたものが，キーワードの増加によって抽出され，部分成功になったためである．続いて，特殊な構造を持った文書について考察する．+&lt;TD&gt;...&lt;/TD&gt;+内の要素が単一の+&lt;+TABLE+&gt;+タグで構成されている場合(以下，単一セルと呼ぶ)と複数の+&lt;+TABLE+&gt;+によって1つの性能表が構成されている場合(以下，複数テーブルと呼ぶ)の内訳と全体に占める割合を表に示す．パソコンの場合は，単一セル，複数テーブルが存在する文書は正例中の1%以下だが，プリンタの場合は13%の文書が，例え，抽出のための十分なキーワードを獲得できていたとしても，特殊構造への処理を行わないと根本的に抽出できないことになる．デジタルカメラの場合は単一セルと複数テーブルに重複があり，それを考慮すると，17%の文書(42文書)が同じく根本的に抽出できないことになる．特殊構造への処理を行わなかった場合と行った場合の正解率を表に示す．実験では，表の実験で使用したキーワードを利用した．パソコンについては，単一セルと複数テーブルの数が全体に対して少ないため，正解率の上昇は1%以下であった．一方で，特殊構造に対する処理を行わなかった場合，デジタルカメラの正解率は0.800，プリンタの場合は0.833となった．すなわち，提案手法による特殊構造への処理は，プリンタの場合で5%程度，デジタルカメラの場合は約10%の正解率の向上に繋がっている．特殊構造への対応にはいくつかの課題が残るが，この実験結果より，提案手法の有効性は確認できた．本研究では，フィルタリングで性能表を含んでいる文書を絞り込み，続いて性能表を抽出するという流れを取った．提案手法以外にも，まず従来の表抽出の研究に基づき，一般的な表抽出を実行し，その表から特定の内容を含んだ表を抽出するという手法も考えられる．しかし，この手法を用いる場合，訓練データの獲得のために，全ての+&lt;+TABLE+&gt;+タグを人手でチェックし，正例もしくは負例のラベル付けをする必要がある．我々の使用した実験データでは，1つの文書中に30前後の+&lt;+TABLE+&gt;+タグが存在する．すなわち，膨大な数の+&lt;+TABLE+&gt;+タグへのチェックが必要になり，実用面を考えればコストが高い．一方で，提案手法は，そのページに性能表が含まれているかもしくは含まれていないかのチェックをするだけで良いという利点がある．また，表抽出処理では，フィルタリング処理で用いたSVMのような機械学習のアルゴリズムを使用しなかった．これは，上記の表抽出を行い，内容を分類するという手法における問題点と同様に，性能表の正確な領域を膨大な+&lt;+TABLE+&gt;+タグをチェックしながら，人手で正例のラベルを付けることが，高コストなためである．このように提案手法には，訓練データの作成に関して，実用的な面での大きな利点がある．</subsection>
  <section title="おわりに">本稿では，Webから製品のスペック情報を記述した表(性能表)の抽出方法について述べた．提案手法は，Webからの製品データベースの自動獲得や，オンラインショッピングサイトの自動構築などのために有効である．提案手法では，(1)フィルタリング，(2)表領域抽出，の2つのプロセスによってWeb文書群から性能表を獲得することを試みた．フィルタリングでは，SVMとTSVMを用い，その精度を検証した．訓練データが少ない場合，TSVMが有効に機能することを確認した．TSVMの精度を向上させるには，ラベル無しデータ中の正例と負例の正確な比を推定することが有効である．少ない訓練データで，いかにラベル無しデータの正例と負例の分布を推測するかが今後の課題の一つとなる．表領域抽出処理では，パソコンの場合で，非常に高い抽出正解率を得た．デジタルカメラとプリンタの場合においても90%程度の精度を得ている．並列した複数の+&lt;+TABLE+&gt;+タグからなる性能表をより正確に抽出するためには，訓練データ中の正例をいかに多く獲得できるかや，構造的類似度に関する新たな尺度の導入が課題となる．2つのプロセスにおいて，現在は一括して素性選択やキーワード抽出を行っているが，メーカや製品ごとの表の記述方法の一貫性などを利用することで，より高い抽出精度が得られる可能性がある．その実装と評価は，今後の課題の一つである．両プロセスとも90%程度の精度を得ており，実験結果から本手法の有効性と実用性を確認できた．</section>
</root>
