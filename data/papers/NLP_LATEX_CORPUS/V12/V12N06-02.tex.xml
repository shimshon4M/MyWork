<?xml version="1.0" ?>
<root>
  <title>メーリングリストを利用した質問応答システムのための知識獲得</title>
  <author>渡辺靖彦横溝一哉西村涼岡田至弘</author>
  <jabstract>本研究では最初に，方法や対処法を問う質問(how型の質問)に質問応答システムが答えるための知識を，メーリングリストに投稿されたメールから獲得する方法について述べる．方法や対処法を問う質問に答えるための知識(「こんな場合にはこうする」など)は，メーリングリストに投稿されたメールから質問や説明の中心になる文(重要文)を取り出すことによって獲得する．次に，メーリングリストに投稿されたメールから獲得した知識を用いる質問応答システムについて報告する．作成したシステムは自然な文で表現されたユーザの質問を受けつけ，その構文的な構造と単語の重要度を手がかりに質問文とメールから取り出した重要文とを照合してユーザの質問に答える．作成したシステムの回答と全文検索システムの検索結果を比較し，メーリングリストに投稿されたメールから方法や対処法を問う質問に答えるための知識を獲得できることを示す．</jabstract>
  <jkeywords>質問応答，メーリングリスト，重要文抽出</jkeywords>
  <section title="はじめに">自由に閲覧することができる電子化文書の数が膨大になるにつれ，その中からユーザが必要とする情報を効率的に探し出すことが困難になってきている．このため，ユーザからの質問に対して明確な回答を自動的に提示する質問応答(QA)技術が注目されている．質問応答に用いる知識を人工言語で記述したUCなどの質問応答システムでは，十分な記述力をもつ人工言語の設計のむずかしさ，知識ベースの高い作成コストといった問題があった．そこで，大量の電子化文書が利用可能になった1990年代からは，自然言語で記述された文書を質問応答システムの知識として利用しようとする研究が行われている．近年では，TRECやNTCIRといった評価型ワークショップも行われ，新聞記事やWWW文書などを知識として用いる質問応答システムの研究もさかんである．しかし，これらの研究の多くは事実を問う質問(what型の質問)を対象としていて，方法や対処法を問う質問(how型の質問)を扱うものはなどまだ少ない．これは，事実を問う質問に答えるための知識に比べ，方法や対処法を問う質問に答えるための知識(「こんな場合にはこうする」など)を獲得することがむずかしいからである．日笠らや清田らは，方法や対処法を問う質問に答えるための知識としてFAQ文書やサポート文書が利用できることを示した．しかしこれらの研究では，FAQ文書やサポート文書がもつ文書構造を利用することを前提としていた．FAQ文書やサポート文書以外の，より多くの文書を知識として利用するためには，文書構造以外の手がかりを利用する方法について研究しなければならない．そこで本研究では最初に，方法や対処法を問う質問(how型の質問)に質問応答システムが答えるための知識を，メーリングリストに投稿されたメールからその質問や説明の中心になる文(重要文)を取り出すことによって獲得する方法について述べる．次に，メーリングリストに投稿されたメールから獲得した知識を用いる質問応答システムについて報告する．作成したシステムは自然な文で表現されたユーザの質問を受けつけ，その構文的な構造と単語の重要度を手がかりに質問文とメールから取り出した重要文とを照合してユーザの質問に答える．最後に，作成したシステムの回答と全文検索システムの検索結果を比較し，メーリングリストに投稿されたメールから方法や対処法を問う質問に答えるための知識を獲得できることを示す．</section>
  <section title="方法や対処法を問う質問に答える 質問応答システムで用いる知識">清田らは，パーソナルコンピュータの利用者を対象にした質問応答システムを作成していて，そこで入力される質問を以下の3種類に分類している．what型(事実を問うもの)how型(方法を問うもの)symptom型(症状を示し，その対処法を問うもの)自然言語文書を知識として利用する質問応答システムではwhat型の質問を取り扱うものが多く，how型とsymptom型の質問を扱うものは少ない．これは，方法や対処法を問うhow型やsymptom型の質問に答えるためには，「こんな場合(条件)にはこうする(説明)」といった，条件と説明を組み合わせた知識が必要だからである．こうした知識を自然言語で記述された文書から取り出すのは，事実を問うwhat型の質問に答えるための知識を取り出すのに比べてむずかしい．日笠らや清田らは，方法や対処法を問う質問に答えるための知識として，FAQ文書やサポート文書が利用できることを示した．しかしこれらの研究では，FAQ文書やサポート文書がもつ文書構造を利用することを前提としていた．FAQ文書やサポート文書以外の，もっと多くの文書から「こんな場合(条件)にはこうする(説明)」という知識を獲得するためには，文書構造以外の手がかりを用いる方法を検討する必要がある．例えば，メーリングリストや電子掲示板にはさまざまな分野における質問と回答がくりかえし行われるものがあり，そこでは「こんな場合にはこうする」という情報が活発に交換されている．こうしたメディアでやりとりされている電子化文書から，方法や対処法を問う質問に答えるための知識を獲得する方法について検討することは重要である．大量の電子化文書から知識を獲得する場合，取り出した知識が正しいかどうかという問題もある．質問応答システムの知識として利用することを前提に作成した文書であるならば，あるいはFAQ文書やサポート文書のようなものならば，誤った情報がふくまれるおそれは少ない．しかし，インターネットで公開されている大量の電子化文書を質問応答システムの知識として利用する場合，それらの中に誤った情報や矛盾した内容がふくまれるおそれは十分にある．したがって，それらの文書から取り出した知識が正しいかどうかについての情報も重要である．質問に直接答えるための知識(例えば，how型の質問に対する「こんな場合にはこうする」という知識)以外にも，質問応答システムにとって重要な知識がある．例えば質問応答システムでは，ユーザの質問の不明確さやあいまいさが問題になる．こうした質問には，システムがユーザに問い返しを行うことが有効である．このため，どのような問い返しを行うのかについての知識を用意することは重要である．</section>
  <section title="メーリングリストに投稿されたメールからの重要文の抽出"/>
  <subsection title="メーリングリストに投稿されたメール">メーリングリストには質問と回答のメールが繰り返し投稿されるものがある．たとえば，Vinelinuxに関心のある人たちが情報を交換しているメーリングリスト(VineUsersML)では質問と回答のメールがさかんに投稿されている．われわれはこうしたメーリングリストに投稿されたメールから質問応答システムで用いる知識を獲得することを考えた．その有利さを以下に示す．特定のドメインについての質問と回答の例を集めやすいあいまいな質問に対する問い返しの例も集めやすい情報のすばやい更新が期待できる回答内容の確認が行われる回答内容に誤りがあると，その誤りが指摘されることが多いVineUsersMLに投稿されるメールを調査すると，以下の4種類に分けることができた．メーリングリストに投稿されたメールがこれら4種類のどのメールであるのかは，メール間の参照関係と投稿者のメールアドレスを利用すれば自動的に判定することができる．例えば，図のQ1は参照するメールがないので質問メール，DA1とDA2は質問メールであるQ1を参照しているので直接回答メール，そしてQR1は直接回答メールDA1を参照していて，投稿者のメールアドレスが質問メールQ1のものと同じであるので質問者回答メールであると判定できる．VineUsersMLなどのメーリングリストに投稿されたメールではさまざまな形式で質問や回答が表現されていて，FAQ文書やサポート文書のような一定の文書構造がない．しかし，質問・説明の中心になる文があった．図に示すメールの例では破線で囲まれた文が質問・説明の中心になる文である．こうした文を重要文とよぶことにする．われわれは，メーリングリストに投稿されたメールから重要文を取り出すことで，方法や対処法を問う質問(how型の質問)に質問応答システムが答えるための知識を獲得できるのではないかと考えた．すなわち，メーリングリストに投稿されたメールを対象に，質問メールと直接回答メールから取り出した重要文を用いて	「この場合にはこうする」という知識を獲得する．質問者返信メールから取り出した重要文を用いて	「この場合にはこうする」という知識の正しさについての情報を獲得	する．質問メールと直接回答メールから取り出した重要文を用いて，	あいまいな質問とそれに対する問い返しの例を獲得する．VineLinuxMLに投稿されたメールを調査すると，質問メール，直接回答メール，質問者返信メールの重要文には次のような特徴があった．質問メールの重要文はsubjectに含まれる名詞および未定義語を	含むことが多い．	これは，質問メールの重要文もsubjectも，	そのメールの質問内容のよい要約になっていることが多いからである．それぞれのメールの重要文は，	そのメールに直接返信しているメールで引用されることが多い．	図では，	質問メールと直接回答メールの重要文がそれぞれ	直接回答メールと質問者返信メールで引用されている．それぞれのメールの重要文には典型的な表現がある．	例えば質問メールの重要文には以下に示すような典型的な表現があった．		文末に「ません」「しょうか」「います」「ました」がある．		(例)Bluefishで日本語フォントの表示ができません．			文中に「困って」「トラブって」「ご指導」「？」がある．		(例)数日前から一般ユーザログインで		xstartできなくて困っています．			行頭に＃がない．		行頭の＃は，その行の記述については無視することを		要請する記号である．		(例)＃とても初歩な質問でスミマセン	それぞれのメールの重要文は，本文のはじめに近い位置にあらわれることが多い．	ただし，直接回答メールや質問者返信メールの重要文は，	それらのメールが返信しているメールの重要文を引用している場合には，	その引用している重要文の後にあらわれることが多い．	図の	直接回答メールの例では，	先頭の4行が引用文で，	そこでは質問メールの重要文が引用されている．	この引用のあとに，直接回答メールの重要文(破線で囲まれた文)がある．</subsection>
  <subsection title="メーリングリストに投稿されたメールからの重要文の抽出処理">メーリングリストに投稿されたメールから重要文を抽出する処理の概要を図に示す．前処理を行ってメールから取り出した文に対し4つの規則を適用して重要度を計算する．最も重要度が高い文を重要文として各メールから1文ずつ取り出す．</subsection>
  <subsubsection title="前処理">メールの各文の重要度を評価する前に，以下の前処理を行う．メーリングリストに投稿されたメールを対象に，	メール間の参照関係および投稿者のメールアドレスを利用して，		質問メール	直接回答メール	質問者返信メール		を取り出す．	取り出したメールの本文を形態素解析する．	ただし，以下のものは形態素解析を行う前に取り除く．		＃ではじまる行	引用記号(例:＞)ではじまる行	()で囲まれている文字列		図の	直接回答メールの例では，先頭の4行を引用部分として取り除き，	残りの2文について形態素解析を行う．	また，「実行するとSegmentationfault（coredumped）	してしまいます」という文の場合は，	「（coredumped）」の部分をとりのぞいてから形態素解析を行う．	形態素解析にはJUMANを用いる．形態素解析を行った文が，	そのメールに直接返信しているメールで何回引用されているか記述する．質問メールのsubjectを形態素解析し，	その結果から名詞と未定義語を取り出す．</subsubsection>
  <subsubsection title="重要度の計算">質問メール，直接回答メール，および質問者返信メールから取り出した文に対し，以下の4つの規則を順に適用して重要度を計算する．そして，それぞれのメールから最も重要度が高い文を重要文として取り出す．規則1，2，4は，新聞記事などを対象にして用いられている重要文抽出手法をメールに適用したものである．一方，規則3は，引用が多用されるメールから重要文を抽出するための規則である．</subsubsection>
  <subsection title="重要文抽出の実験結果と検討">本研究では，VineUsersMLおよびperl質問箱というメーリングリストに投稿されたメールを対象に実験を行った．VineUsersMLに投稿されたメール50846通には，質問メール(8964通)直接回答メール(13094通)質問者返信メール(4276通)が含まれていた．この中から，返信がある質問メール127通を無作為に取り出し，それらの直接回答メール(184通)と質問者回答メール(75通)も取り出した．同様に，perl質問箱に投稿されたメール6086通から返信がある質問メール36通を無作為に取り出し，それらの直接回答メール(58通)と質問者回答メール(20通)も取り出した．それらに対する重要文抽出の結果を表に示す．重要文抽出に失敗した理由を以下に示す．表に示した	手がかり表現を含まない重要文があった．重要文ではない文で表	に示した手がかり表現を含む文があった．質問あるいは回答の中心になる文が複数の文で構成されていて，	それらのうち1文しか取り出せなかった．重要文中に誤字・脱字があった．つぎに，重要文抽出の結果が「こんな場合にはこうする」という条件と説明の知識として適切であるかどうか，文のつながりが正しいかどうかその知識が問題解決に有効かどうかという点に注意して検討を行った．例えば，以下の例では質問メール(質問A)の重要文と直接回答メール(直接回答A--1)の重要文とでは正しく文がつながっている．一方，(質問A)と(直接回答A--2)の重要文の間では文のつながりがない．しかし，(質問A)と(直接回答A--1)の知識は問題解決に役立つとして，この質問メールと回答メールからは有効な知識が獲得できたと判定した．(質問A)veditは，存在しないファイルをひらこうとするとコアはきますか├(直接回答A-1)はい，コアダンプします└(直接回答A-2)将来，GNOMEはインストール後すぐつかえるのですか？verbatimVineUsersMLから取り出した127個の質問メールとそれらの直接回答メールを調べると，92例で有効な知識の獲得に成功し，35例で失敗した．一方，perl質問箱から取り出した36個の質問メールとそれらの直接回答メールを調べると，23例で有効な知識の獲得に成功し，13例で失敗した．知識の獲得に失敗した原因を以下に示す．質問メールからの重要文抽出に失敗した(VineUsersML:21例，perl質問箱:8例)直接回答メールからの重要文抽出に失敗した(VineUsersML:14例，perl質問箱:5例)質問メールからの重要文抽出に失敗したことが原因で知識の獲得に失敗した例はそれほど深刻ではない．誤って抽出した文の多くは質問文ではなく，質問応答システムでユーザの質問とマッチする可能性が低いからである．一方，直接回答メールからの重要文抽出に失敗したことが原因で知識の獲得に失敗した例はより深刻である．質問メールから取り出した文は質問文として適切で，質問応答システムでユーザの質問とマッチする可能性が高いからである．その場合，直接回答メールから誤って抽出した，回答や問い返しとして不適切な文がユーザに示されるおそれがある．図に，VineUsersMLに投稿されたメールからの重要文抽出によって獲得した「こんな場合にはこうする」という知識の例を示す．図の質問メール(質問1)には，2つの直接回答メール(直接回答1--1)と(直接回答1--2)があった．どちらのメールでも質問者にsndconfigを使うことをすすめているが，(直接回答1--1)はその内容が質問者返信メール(質問者返信1--1)によって保証されている．方法や対処法を問う質問に対する回答候補は複数個ある場合が多く，この場合のように質問者返信メールによる情報内容の保証があると，ユーザが情報をしぼりこむのに役立つ．図の質問メール(質問2)と(質問3)からは，質問としてはあいまいで不完全な文が重要文として取り出されている．(質問2)のメールでは，ハードディスクのパーティションの設定についての質問が行われていた．しかし，この質問メールでの質問そのものがあいまいであったため，そこから取り出した重要文もまたあいまいな内容になっていた．具体的には，質問者がどんなプログラムを利用してハードディスクのパーティションの設定したのかについての情報が欠けていた．これに対して，(直接回答2--1)の回答者は，質問者が利用したプログラムがdiskdruidであるかどうか問い返している．この例を知識として用いれば，(質問2)に類似するあいまいな質問に対して質問応答システムは，ユーザにdiskdruidを利用したのかどうか問い返すことができる．実験では，このようなあいまいな質問に対する問い返しの例がVineUsersMLで15例，perl質問箱で3例あった．(質問3)では，gtk+についての質問が行われていた．この質問メールでの質問にはあいまいさはなかったが，質問の中心になる文が複数あった．そのうち1文だけを重要文として取り出したため，何について質問しているのかという情報(この場合は，gtk+)が失われていた．しかし，(直接回答3--1)から取り出した重要文がこの失われた情報を補っている．そこで，この例では(質問3)からの重要文抽出には失敗と判定したが，(質問3)と(直接回答3--1)から抽出した重要文を組み合わせた知識については正しいと判定した．実験では，このような例がVineUsersMLで10例，perl質問箱で1例あった．(質問4)の質問に対する(直接回答4--1)の回答は(質問4)の質問者にとっては適切な内容ではなかった．(質問4)の質問者は(直接回答4--1)の回答内容を試し，問題が解決しなかったことを(質問者返信4--1)で報告している．実験では，このように回答の誤り・不適切さを指摘する例がVineUsersMLで4例あった．(質問5)と(質問6)では，分野に依存しない質問が行われている．したがって，これらの例はわれわれの方法が分野に依存したものではないことを示している．ただし，(質問6)に対する(直接回答6--1)の回答はあまり丁寧な文ではない．このような例を利用してシステムが回答すると，ユーザにそのシステムを利用しようとする意欲を失わせるおそれがある．また，(質問5)と(質問6)にはそれぞれ照応表現が含まれていて，その先行詞が取り出されていない．こうした文は，質問応答システムがユーザの質問文と照合するのに失敗するおそれがある．</subsection>
  <section title="メーリングリストに投稿されたメールを利用した質問応答システム">メーリングリストに投稿されたメールを利用して，how型の質問に答える質問応答システムについて述べる．このシステムは自然な文で表現したユーザの質問を受けつけ，VineUsersMLに投稿されたメールからユーザの質問に類似する重要文をもつ質問メールをさがし，その回答メールの重要文とともに回答としてユーザに示す．</section>
  <subsection title="システムの概要">作成したシステムの概要を図に示す．システムを構成するモジュールの機能と内容を以下に示す．インターフェイスにはWebブラウザを用いた．</subsection>
  <subsection title="自然な文で表現された質問文と質問のメールから取り出した重要文の類似度">ユーザの質問文と質問メールの重要文との類似度を，文の構文的な構造と単語の重要度にもとづいて定義する．質問メールM_iから取り出した重要文S_iに含まれる自立語tの重要度w_WORD(t,M_i)を以下のように定義する．[w_WORD(t,M_i)=tf(t,S_i)Ndf(t)]tf(t,S_i)は重要文S_iにおける自立語tの出現頻度，Nは重要文をとりだすことのできた質問メールの総数，df(t)は自立語tを重要文に含む質問メールの総数である．また，質問メールM_iから取り出した重要文S_iの係り受け構造木を構成する枝lの重要度w_LINK(l,M_i)を以下のように定義する．w_LINK(l,M_i)&amp;=&amp;w_WORD(modfier(l),M_i)+w_WORD(head(l),M_i)eqnarray*modfier(l)とhead(l)はそれぞれ枝lによって係る文節の自立語，係られる文節の自立語を表わす．質問メールM_iから取り出した重要文S_iに含まれる自立語のうち，質問文Qにその自立語そのものかその同義語が含まれているものの重要度の和をSCORE_WORD(Q,M_i)とする．また，質問メールM_iから取り出した重要文S_iの係り受け構造木を構成する枝のうち，質問文Qの係り受け構造木にもあらわれるものの重要度の和をSCORE_LINK(Q,M_i)とする．このとき，ユーザの質問文Qと質問メールM_iから取り出した重要文S_iの類似度SCORE(Q,M_i)をSCORE_WORD(Q,M_i)とSCORE_LINK(Q,M_i)の和とする．</subsection>
  <subsection title="自然な文で表現されたユーザの質問に対する応答">	節で定義した類似度にもとづいて，自然な文で表現されたユーザの質問に対し，メーリングリストに投稿されたメールを利用して回答する実験を行った．実験にはVineUsersMLに投稿された50846通のメールを用いた．これらのメールには，質問メール(8964通)直接回答メール(13094通)質問者回答メール(4276通)が含まれていて，それらから重要文を取り出した．実験に用いる自然な文で表現された質問は，VineUsersMLに類似したメーリングリストLinuxUsersMLに実際に投稿された質問を用いた．図に実験に用いた32個の質問を示す．提案手法の結果は，質問文に含まれる名詞と未定義語を検索のキーとする全文検索の結果と以下の3つの方法で比較した．表はそれぞれの評価について，(a)適切な質問メールとその回答のメールを検索できた問題の数，(b)検索された適切な質問メールとその回答のメールの組の数を示す．評価1で，提案手法で適切な応答が得られたのは，質問2，6，7，8，13，14，15，19，24．一方，全文検索で適切な検索結果が得られたのは，質問2，5，7，19，32．質問2，7と19は提案手法でも全文検索でも適切な結果が得られたが，それらは異なるメールであった．これは，ユーザの質問に答えられる内容の質問メールとその回答のメールの組が複数存在することがあるからである．質問4「ハードディスクのパーティションの修復」についてはどちらの方法でも適切な質問のメールは検索できなかった．この質問に対する全文検索の結果に「ファイルを救出したい」という質問のメールがあった．このメールおよびその回答のメールではファイルの救出方法が扱われていてパーティションの修復方法は直接扱っていないが，質問4の目的が「ファイルの救出」であるならば適切な回答であるといえる．このようにユーザの質問とその目的にずれがあるときは，そのギャップをうめる工夫が必要である．こうしたギャップをうめるのに，対話処理は有効であると考えられる．評価2および3では提案手法の結果が全文検索の結果よりよい．全文検索よりも多くの質問にこたえているし，ユーザの質問に関連する質問メールをより多く見つけ出している．また，作成したシステムの回答結果は，図のように重要文を用いて表現されているので，全文検索の場合にくらべてその回答内容をユーザは把握しやすい．</subsection>
  <subsection title="システムの質問応答例">図は，質問14「トラフィックのモニタリングする方法はありませんでしょうか」に対するシステムの応答を示す．この質問に対してシステムは2つの答え(質問メールとその回答メールから取り出した重要文)をユーザに示している．いずれの答えも適切な内容で，そのうち応答結果が1位のものを以下に示す．(質問B)vine-linuxで使える，トラフィックを測定するツールってないでしょうか？├(直接回答B-1)snmp+mrtgとはではダメですか？├(直接回答B-2)見た目は・・こちらをどうぞ│http://web.wt.net/~billw/gkrellm/gkrellm.html└(直接回答B-3)ネットワーク接続中にちょっとトラフィックを確認するぐらいならば└(質問者返信B-1)みなさん，いろいろ情報ありがとうございました．verbatim表示されている重要文を選択すると，その重要文を取り出したメールが表示され，ユーザは詳しい情報を知ることができる(図)．作成したシステムは，ユーザの質問に対して(直接回答B-1)や図の(直接回答2-1)のように問い返しを行うことができる．この問い返しによって，ユーザは自分の質問で不足している情報に気づき，より具体的であいまいさのない質問をつくることができる．また，その問い返し文を取り出したメールから問題を解く手がかりや答えそのものを取り出せることもある．獲得した知識による問い返しについて，われわれは以下の取組みを現在行っている．作成したシステムでは	回答候補の順位づけにユーザの質問文と質問メールの重要文との	類似度のみを用いている．	そこで，直接回答メールや質問者回答メールから取り出した重要文の情報も利用して，	ユーザの質問にふさわしい内容の回答(例えば問い返しなど)を優先して	ユーザに示す方法を検討している．作成したシステムは対話処理を行えないので，	システムの問い返しに対するユーザの返事は	新たな質問として扱われる．	そこで，獲得した知識を用いてユーザとシステムが対話を行う方法について	検討している．(直接回答B-2)には照応表現(「こちら」)がある．この例のように，質問メールとその回答のメールから取り出した重要文には，照応・省略表現が含まれることがある．作成したシステムはユーザの質問文とメールから取り出した重要文とを照合して質問に答えているので，こうした照応・省略表現による情報の欠落に弱い．本研究では照応解析を行わずに，大量のメールから知識を獲得することでこの問題に対応しようと考えた．大量のメールから知識を獲得すれば，照応・省略表現を含まない「こんな場合にはこうする」という情報を十分に獲得できるのではないかと考えたからである．VineUsersMLに投稿されたおよそ5万通のメールから獲得した知識を用いた今回の実験では，照応解析を行わなくても全文検索よりよい結果を得ることができた．</subsection>
  <section title="おわりに">作成したシステムでは，回答候補の順位づけにユーザの質問文と質問メールの重要文との類似度のみを用いている．現在，直接回答メールや質問者回答メールから取り出した重要文の情報も利用して，ユーザの質問にふさわしい内容の回答を優先してユーザに示す方法を検討している．また，今回獲得した知識を用いてユーザとシステムが対話を行う方法についても検討している．</section>
</root>
