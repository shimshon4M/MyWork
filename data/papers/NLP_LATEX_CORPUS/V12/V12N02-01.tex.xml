<?xml version="1.0" ?>
<root>
  <title>機械学習とルールベースの組み合わせによる自動職業コーディング</title>
  <author>高橋和子高村大也奥村学</author>
  <section title="はじめに">社会調査において,職業は性別や年齢と同様に重要な属性の一つである.従って,カテゴリとしては最も詳細な職業小分類コード（以下,職業コードと呼ぶ）を用いることが多い.しかし,約200個あるコードをすべて調査票に提示して被調査者に選んでもらう方法は,カテゴリ数が通常用いられる選択肢の数をはるかに超えていて被調査者に負担がかかることや,カテゴリの定義内容が日常的に理解されているものと異なる場合があるために,調査票に選択肢として職業コードを提示せず,被調査者から自由回答で記述してもらったデータを分析者側で分類するのが一般的である.これは職業コーディングとよばれ,統計処理に職業のデータが用いられるための不可欠な作業である.職業コーディングはデータの分析に先だって迅速かつ正確に行われる必要があるが,これまで人手（コーダ）により行われてきたため,サンプル数が多い場合にはコーダの負担が大きく,また,コーダが熟練者でない場合には,コーディングの結果に一貫性が欠如しやすいという問題が存在した.この問題を軽減するために,職業の定義文や専門家の知識をまとめてルールセットを作成しておき,回答とのマッチングをとって自動的に職業コードを決定するルールベースによるシステムが開発された.このシステムはこれまでにJGSS（日本版GeneralSocialSurveys）において,2回の予備調査と2000年調査と2001年調査についてコーディング済みデータの公開を行っている.を始めとする5つの調査で利用され,正解率は約60〜70%程度であったが,コーダの負担を軽減し,結果における一貫性の保証という点で,当初の目的を達成できたといえる.しかし,次のような問題が残されていた.まず,職業に関するデータ（以下,職業データと呼ぶ）は,単一の回答ではなく,自由回答である「仕事の内容」を中心に,「従業先事業の種類」（自由回答），「従業上の地位」,「役職」，「従業先事業の規模」（以上は選択肢）を含む一連の回答群から構成されており,これらを総合的に判断して分類先が決められる.従って,そこで用いられる知識をすべてルールとして表現することは非常に困難である.次に,このシステムは,自由回答とルールをいずれも格フレームの形式で表現するが,この形式で表現できない回答もあり,回答の内容をうまく理解できない場合がある.さらに,職業データの中で最も重要な「仕事の内容」に出現する用語や表現の仕方は時代と共に変化しており,ルールベース手法であるこのシステムにおいては,ルールセットやシソーラスのメンテナンスの手間が絶えず必要になる.ここで,システムがコーダの代替としての機能を十分に果たすためには,少なくともコーダと同程度の正解率を示す必要がある.によれば,6つの職業コーディングにおいて,データやコーダの熟練度に違いはあるが,68.8〜80.0%の正解率であったことから,システムにおいても80%を一つの目標値とみなすことができよう.そこで,これらの問題を回避し,また正解率の向上を目指すための方法として,文書分類の分野で適用される機械学習手法を検討した結果,高い分類性能を示すことが知られているサポートベクターマシン（SupportVectorMachine,SVM）を職業コーディングに対して適用することにした.しかし,ルールには,職業コードの定義だけでなく,専門家のもつヒューリスティックな知識が蓄積されている.今回は既にルールベースによるシステムが存在し,その結果が利用できる状況にあることから,ルールベース手法の活用を考え,両者の有効な組み合わせ方についての調査も行う.本稿では,これについて報告を行う.本稿の貢献は,以下の通りである.まず,SVMに基づく,従来より精度の良い自動職業コーディングシステムを開発した.次に,職業コーディングという,各回答が1語から1文程度の非常に短い「テキスト」の分類タスクにおいて,SVMが有効であることを示せた.さらに,自動職業コーディングという分類タスクにおいて,ルールベースと機械学習を効果的に統合する手法を示した.ところで,これらの手法を実際に職業コーディングに適用する際,訓練データとして過去の事例が利用できない場合には,新たにコーディングを行って,学習のために「正解」付きの事例を用意する必要がある.また,過去にコーディング済みの事例がある場合でも,新しくコーディングを行ったものを訓練データにフィードバックできれば,分類性能が向上する可能性が考えられる.いずれの場合においても,コーダの負担軽減の点からは,新たに行うコーディングの量はできるだけ少ないことが望まれる.そこで,本稿では,このような場合に行うコーディングの量を正解率との関係から調査する.以下,次節で関連研究について述べた後,3節で職業コーディングについて説明する.4節でルールベース手法による方法,5節でSVMによる方法および,SVMとルールベース手法との組み合わせ方について述べる.6節で実験結果の報告と考察を行い,最後にまとめと今後の課題を述べる.</section>
  <section title="関連研究">ここでは自由回答の分類に対する機械学習を用いた研究および,人手によるルールと機械学習による方法を組み合わせた研究について述べる.まず,自由回答の分類に対する機械学習による方法に関しては,被調査者の意図に注目した分類を目的とする文献がある.文献では,文字単位のn-gramを素性とし,最大エントロピー法（MaximumEntropymethod,ME法）による分類実験を行っている.その結果,約8割弱の正解率で意図（メタ,賛成,反対,要望,提案,事実,疑問）の分類が行えたことおよび,その結果から意図の分類に効果的な表現を発見したことが報告されている.文献では,文が要求意図を表すかどうかを判定するタスクにおいて,単語の1-gram,2-gram,3-gramを素性としてME法とSVMを適用した結果,いずれも約9割程度の正解率を示したことが報告されている.また,文献では,ここ数ヶ月間に感じた「怒り」や「不快感」の様子とその状況を記述した自由回答をあらかじめ用意したカテゴリにコーディングすることを目的に,辞書ベースの手法と教師付き学習による自動コーディングを比較し,圧倒的に後者の方が性能がよいことを報告している.ここで,辞書ベースの手法とは,各カテゴリに特徴的な単語を人手によって集めることによりカテゴリごとに辞書を作成し,各辞書から作られるベクトルと回答から作られるベクトルの類似度を測ることにより分類を行う手法である.教師付き学習とはナイーブベイズ法と多値分類のSVMである.人手により作成したルールに基づく方法と機械学習による方法の組み合わせに関しては,文献がある.文献では,韓国語のチャンキングにおいて,まず人手でルールを作成し,このルールに対するエラーリストも事前に作成しておく.分類の際は,事例のチャンクタイプ（名詞句,動詞句,副詞句,独立句の4種類）をまずルールで決めた後,このエラーリストの中の最も近い事例との類似度を調べ,その値が閾値以上のものに対しては,memory-basedlearningにより決め直すという方法を提案している.提案手法を用いた場合は,ルールだけの場合より約2%,memory-basedlearningの場合より約3%F値が上昇したことが報告されている.この研究においては,ルールに基づく方法と機械学習による方法の組み合わせは,両者の結果がシーケンシャルに利用されることを意味しており,各手法における処理自体は独立に行われる.また,文献では,より信頼できる日本語ゼロ代名詞の解決のために,ヒューリスティックなルールをランク付けして機械学習（SVM）と組み合わせる方法を提案している.すなわち,先行詞となり得る複数の候補にランク付けしたルール（6種類）を適用し,辞書順にソートしておく.SVMを上位の候補から順に適用していき,正例が出現した時点でその候補を先行詞と決定する.一般の新聞記事および社説を対象として実験を行った結果,ME法やSVMはルールによる方法に劣るが,上記のような組み合わせ方により,ルールによる方法を上回ることが報告されている.</section>
  <section title="職業コーディング">職業コーディングとは,社会調査において自由回答で収集される「仕事の内容」を中心とする一連の職業データを,分析者が総合的に判断して,職業小分類コードを付ける作業をいう.職業データを構成するものは調査により多少異なるが,通常,「仕事の内容」,「従業先事業の種類」（以上は自由回答）,「従業上の地位」，「役職」，「従業先事業の規模」（以上は選択肢）の5種類の回答である.職業データにおける自由回答は短いものが多く,例えば,JGSSの場合,平均で「仕事の内容」が約3語,「従業先事業の種類」が約2語程度の長さで,「医者」や「看護師」など1語のものも多い.職業コードの数は,社会調査で一般的に用いられるSSM職業小分類コードの場合,国勢調査で用いられる職業小分類コードを部分的に統合し193個（分類不能や不明を含む）であるが,このカテゴリの多さが職業コーディング作業を煩雑にする大きな原因である.職業コーディングの例として,例えば,次のような職業データに対しては,職業コード「563」（運輸事務員）が付けられる.判断の根拠になるものは,基本的には「仕事の内容」である.しかし,管理職や自営関係の職業においては,「従業上の地位」や「役職」,「従業先事業の規模」を参照する必要があり,「仕事の内容」が全く同じ場合でも,これらの選択肢の内容が異なっていれば,別の職業コードに決定される可能性がある.決定方法は,「仕事の内容」と選択肢の組み合わせ方により,原則が定められているが,実際には,必ずしも原則通りに決められるわけではない.例えば,管理職は,原則的に「役職」が課長相当以上かつ「従業先事業の規模」が30人以上であることが要件であるが,これに該当しない場合も「仕事の内容」が「管理」とのみ記述されており,これ以外の仕事をしていないと考えられる場合には,管理職とすることもある.逆に,管理職の原則に合致していても,「仕事の内容」に管理以外の内容が記述されており,そちらの方が主であると考えられる場合には,管理職にしないこともある.従って,原則をルールとして生成しても,有効に機能しない場合があるという問題がある.職業コーディングを行う目的は,データ分析の際に,職業という属性をコードで扱えるようにするためである.従って,職業コーディングはすべての分析に先だって迅速に行われなければならない.しかし,一方で職業は基本的で重要な属性であり,正確さが要求されるために,例えば,SSM調査やJGSSのように大規模な調査では,同一のデータに対して,最低3回のコーディングが行われる.すなわち,1回目と2回目はコーダ（一般コーダ）を変えて行われ,3回目に専門家コーダが両者のコーディング結果を参考にしながら,最終的な判断を下す.このように,コーディングの回数が多いことは,職業コーディングにおいて最大の問題である作業量の問題を引き起こす.作業量の問題は,対象となる職業データの種類が多い場合により深刻な問題となる.例えば,JGSSでは,被調査者1人に対して,「本人現職」以外に,「本人最後職」（本人が最後に就いていた職業）,「本人初職」,「配偶者職」（配偶者の現職）,「父職」（本人が15才時の父親の職業）の5種類の職業コーディングを行う必要がある.SSM調査では,これに加え,さらに初職から現職に至るまでの職業の履歴をすべて収集し,職業コーディングの対象とする.ここで注意する点として,SSM調査やJGSSのように長期にわたる調査においては,期間中に専門家コーダの交代があったり,新種の職業が登場した場合に,調査年度により正解に違いが生じる可能性があることである実際,JGSSで特に管理職関係の判断において,調査年度による差が認められる.また,例えば介護ヘルパーやケアマネージャの職業コードはJGSS-2000とJGSS-2002で異なっており,JGSS-2001は両者が混在する.従って,複数年にわたる調査において年度ごとに結果が出される場合,厳密には同質のデータセットであるとはいえない.</section>
  <section title="ルールベース手法">本稿においてルールベース手法とは,職業の定義を格フレームの形式により記述したルールを作成し,これに基づいて職業コーディングを自動的に行うシステム（以下,システムと略す）をいう.ここでは,ルールとのマッチングを取りやすくするために,自由回答の表現も格フレームの形式に変換される.以下で,システムの処理概要を説明する.「仕事の内容」に対して形態素解析を行った後,職業コーディングにおいては不要であると判断される語を削除する.職業コーディングにおいては,品詞が「形容詞」,「副詞」,「接頭辞」,「接尾辞」であったり,「等」,「ほか」,「関係」などの語（約100個）は重要な意味を持たないため,不要語とした.「仕事の内容」から述語相当語（以下,述語と呼ぶ）を抽出する.ここでは構文解析を行わず,単純に回答の末尾にある語を述語とした.不要語を削除すると,末尾語の品詞は,例えば1995年SSM調査データにおける無作為抽出サンプル（約1,000）においては,動詞（6%）,サ変名詞（51%）,普通名詞（39%）であった.従って,システムにおいては,動詞だけでなくサ変名詞や普通名詞（例えば「医師」「薬剤師」など）も述語として扱われる.抽出した述語の直前に助詞（「を」や「で」）があればそれを手がかりにして,述語の目的となる名詞や場所を示す名詞を抽出する.述語をシソーラスにより拡張する.述語シソーラスは,『分類語彙表』の「体の部」と「用の部」に収められた各語に対して,分類番号の小数部とグループ番号を組み合わせたコード（述語コード）を作り,「語,よみ,述語コード」からなる構成とした.これにより,品詞が異なっても述語コードが等しい語同士は,同じ分類であるとみなすことができる.ここまでの処理は「従業先事業の種類」に対しても行い,「仕事の内容」の情報が不足する場合にはこの情報も利用する.拡張した述語により,職業コードに関する定義文や知識を次の形式のルールとしてまとめた「職業用ルールセット」を検索する.ルールα：＜述語,格,名詞＞＜職業コード＞「職業用ルールセット」に回答とマッチするルールがあれば,その職業コードを付ける.その際,回答の名詞も,述語と同様にシソーラスにより拡張される.また,回答に「職業用ルールセット」が要求する名詞が不足する場合については,「従業先事業の種類」の回答も調べ,述語コードが同じ場合にはこの名詞により補う.職業データの他の情報（「従業上の地位」,「役職」,「従業先事業の規模」）のチェックを行って,最終的な職業コードを決定する.ここで適用されるのは,次のようなルールである.この結果,先に決定された職業コードが変わる場合もある.ルールβ：＜職業コード,従業上の地位,役職,従業先事業の規模＞＜職業コード＞例を示す.前述した職業データの例において,まず,「仕事の内容」から述語：手配格：ヲ名詞：配車の三つ組みが抽出される.次に,「手配」が述語シソーラスにより拡張されて述語コード「38510」が付けられる.このコードにより「職業用ルールセット」が検索された結果,ルールαのうちの一つである次のルール＜38510,ヲ,配車＞＜563＞とマッチし,職業コード「563」が付けられる.この例では,たまたま三つ組中の名詞と同じ語がルールαに存在するため,シソーラスによる名詞の拡張を行う必要がない.また,「従業上の地位」や「役職」などでルールβとマッチするものがないために,職業コードは変化せず,最終的に「563」と決定される.システムには2種類のルールがあるが,ルールベース手法においては,これらのルールを充実させることが重要である.また,回答の情報をできる限り活かすためには,シソーラスの充実も重要である.しかし,職業においては,新語や新しい表現の仕方が次々に出現する状況にあるため,ルールベース手法においては,ルールセットおよびシソーラスの継続的なメンテナンス作業が必要であり,手間がかかる.さらに,このシステムはルールを格フレームの形式で表現するために,この形式で表現できない回答に対しては,ルールをうまく適用できないという問題もある.表に,これまでにシステムが適用された調査における結果を示す.ここで,JGSS-2002以外は,ルールベース手法が複数個の結果を出力した場合,その中に正解を含んでいれば正解としたため,正解率が後述するSVMの計算方法によるものより高めになることに注意が必要である.表において,調査A,調査Bはそれぞれ福祉社会学,階層移動の研究者が中心となって行った調査で,いずれもJGSSと異なり1回限りのものであるが,職業データについては基本的にJGSSと同様の形式により収集されている.特に,調査Aは全く同じ回答形式である.調査Bは,調査票の設計段階でルールベース手法の適用が予定されていたために,回答欄を多少工夫した点,および選択肢である「従業上の地位」と「役職」が別々の質問となっている点が異なるが,これらはシステムの処理面における差はない.「職業データの種類数」は,「本人現職」や「本人初職」など1人の回答者に対して収集される職業データの種類数で,例えば,調査Bにおける7種類は,「本人現職」,「本人初職」,「本人職歴１」（初職の次の職）,「本人職歴２」（本人職歴１の次の職）,「配偶者職」,「父職」,「母職」である.これより,1サンプル中で複数の職業データが収集される場合には,職業コーディングが処理するデータ数は,サンプル数×職業データの種類数（「のべサンプル数」）となるが,無職や学生などの非該当も含まれるために,一般には,「のべサンプル数（有職者のみ）」は「のべサンプル数」より少ない.ここで,本稿における正解率とは,正しく分類されたサンプル数を全サンプル数で割った値をいう.前述したように,システムにおいてはルールが有効に機能しない場合が存在するために,全体としての正解率は高くないが,職業コードが決定された事例に限定すると,約80%の正解率を示す.なお,調査に適用されたシステムのシソーラスやルールセットの状況は厳密には同様ではない.例えば,2001年では,述語シソーラスの述語総数は10,065語,名詞シソーラスの見出し語は180語,ルールαの個数は2,205個,ルールβはゼロであったのに対して,2003年では,述語シソーラスの述語総数は11,036語,名詞シソーラスの見出し語は315語,ルールαの個数は3,524個,ルールβの個数は27個となっている.</section>
  <section title="SVMによる方法">ルールベース手法と比較すると,機械学習手法の利点はルールを作成する必要がないことである.これは手間がかからないだけでなく,分野や対象に依存しないという汎用性の点でも評価できる.反面,一般に機械学習手法では,学習のために大量の訓練データが必要になるが,職業コーディングの場合は,その目的が調査データの分析を行うために職業データに職業コードを付与することから,過去の調査では必ず職業コーディングが行われて,正解（職業コード）が付けられたデータ（職業データ）が存在するという事情がある.例えば,JGSSにおいては,毎年,約8,000〜9,000程度の正解付きデータが産出されている.従って,職業コーディングにおいては比較的容易に大量の正解付きデータが利用できる状況にあり,訓練データを用意することについての問題は生じない.機械学習手法には,決定木学習やニューラルネットワークを始めさまざまなものが存在するが,今回,その中からSVMを選択した理由は,職業コーディングはタスクとして文書分類に近いため,文書分類における機械学習手法についての比較を行った研究を検討した結果,SVMが最も高い分類性能をもつ手法であると判断したためである.例えば,では,新聞記事の分類においてSVMと決定木学習法を比較した結果,単語数に関係なくSVMの分類性能が高いことと,単語数が多くなるほど決定木学習法の性能が低下するのに対しSVMは高くなることを示した.では,新聞記事や医学論文の要約の分類において,SVMをナイーブベイズ法,決定木学習,k-NN法と比較し,いずれにおいてもSVMの分類性能が最も高いことを示した.また,でもと同様のコーパスにより,FindSimilar（適合性フィードバックのためのRocchioの変種）,決定木学習,ナイーブベイズ法,ベイズネット,SVMを比較し,トピックのトップ10と全部のいずれの平均においても,SVMの分類性能が最も高いことを示した.さらに,では,ナイーブベイズ法,決定木学習,k-NN法,SVMなど代表的な分類器に関するこれまでの研究について,同一のコーパスを対象とするものに絞り,訓練データや評価データの設定などの条件を同一にした結果をまとめているが,ここでもSVMの分類性能が最も高いことが示されている.このような優位性から,SVMは自然言語処理の分野においても,文書分類や係り受け解析への応用で高い性能を示した.SVMが他の手法より汎化能力が高く,精度よく評価事例を分離できる理由は,学習サンプルと分類境界の間隔（マージン）を最大化するという戦略による.ここで,汎化能力が高いとは,学習に用いない未知のサンプルに対する分類性能が高いことを意味する.これを可能にするのは,サンプルを２つのクラスに分類する場合,SVMは他のクラスと最も近い位置にある学習サンプルだけに注目し,そのサンプルとの距離が最大になるように分類境界を定めるという明確な基準（マージン最大化）を持つためである.このとき,分類境界の決定に関与するサンプルをサポートベクターと呼ぶ.SVMにおける識別関数f(x)は次のように定義される.f(x)=sign(g(x))ただし,g(x)=w^tx+bここで,xは入力ベクトル,wおよびbは識別関数を決定するパラメタで,マージン最大化を実現するように決定できる.また,今回に限定していえば,SVMでは直接テキストを入力することができないものの,素性の作り方によっては,回答の部分的な利用にとどまる今回のルールベース手法と比較すると,情報を十全に活用できる可能性が考えられる.ただし,分類の性能を上げるために有効な素性の選択を実験から得られた結果により行うため,試行錯誤的に実験を重ねる必要がある.ここでは,まず,職業コーディングにSVMを適用する方法について述べた後,ルールベース手法による方法との組み合わせ方について述べる.</section>
  <subsection title="ルールベース手法との組み合わせ">前述したように,ルールベース手法により決定したものの正解率は,全体の正解率よりも約10〜15%高くなっているため（表参照）,この結果をSVMに取り入れる手法について検討する.本稿では,次の4つについて調査する.ルールベース手法が出力した職業コードを素性に追加する（add-code）ルールベース手法でマッチしたルール（2種類）を素性に追加する（add-rule）ルールベース手法で出力した職業コードおよびマッチしたルールを素性に追加する（add-code-rule）ルールベース手法が職業コードを決定できない場合にSVMによる方法の結果を利用する（seq）各手法について,前述の例により説明する.まず,add-codeは,SVMに用いられるn個の基本素性（基本素性1,,基本素性n）に,新しく素性n+1として「563」が追加される.add-ruleも同様に,新しい素性n+1として＜38510,ヲ,配車＞＜563＞というルールの番号が追加される.この例では,ルールαだけしかマッチしないが,もしルールβにもマッチするものがあれば,素性n+2としてそのルール番号も追加される.add-code-ruleは,add-codeおよびadd-ruleで追加される素性のすべて（最大3個）が新しい素性として追加される.seqはこれらと異なり,SVMの素性としては基本素性のみを用いるが,ルールベース手法の出力の状況により,SVMの結果も利用される.前述の例のように,職業コードが1個だけ出力される場合にはSVMは利用されず,ルールベース手法による結果がそのまま最終決定となるが,それ以外の場合すなわち,ルールベース手法がどのような職業コードも出力できなかったり,職業コードを複数個出力する場合には,SVMの結果が最終決定となる.4は機械学習による方法同士の組み合わせではないが,複数の手法をシーケンシャルに適用する,一種のensemblelearningであると考えることもできる.同様に,1はある分類器からの出力結果をもう一方の分類器の素性としている点で,一種のスタッキングであると考えられる.</subsection>
  <section title="実験"/>
  <subsection title="実験方法">実験は,節で述べた各手法に対して,次の2つを行う.実験１：``SVMとルールベース手法の比較''および,``SVMとルールベース手法の有効な組み合わせ方の調査''実験２：``コーディングの量による正解率の変化の調査''実験に用いたデータセットは,JGSSにより2000年から2002年まで毎年実施された調査（JGSS-2000,JGSS-2001,JGSS-2002）により収集された5種類の職業データのうち,「本人現職」,「本人最後職」,「本人初職」,「配偶者職」の4種類の職業において無職と学生を除く有職者のデータ（のべ20,066サンプル）である.年度ごとの内訳は,それぞれ,6,848サンプル,6,448サンプル,6,770サンプルである.実験１は過去の事例が利用できる場合を想定し,JGSS-2000データとJGSS-2001データを訓練データ,JGSS-2002データを評価データとする.例外的な事例への許容度を表し,値が小さいほど例外的な事例に与えられる重みを小さくするソフトマージンパラメータであるCの値は,0.1〜1.0まで10通りに変化させた.実験２の目的は,職業コーディングに実際に適用する場合に,コーダが行うべきコーディングの量を検討する準備として,訓練データ数と正解率との関係を調査することである.ここでは,これまでの調査ですでに職業コーディングが行われた事例が利用できる場合とできない場合を想定する.まず,過去の事例が利用できる場合は,実験１の訓練データにこれからコーディングを行うJGSS-2002データの一部を追加したものを訓練データとし,JGSS-2002データの残りを評価データとする.また,利用できない場合は,JGSS-2002データの一部を訓練データとし,残りを評価データとする.いずれの場合も,JGSS-2002データの分割方法は,n分割交差検定（n=2,,10）による.訓練データと評価データは,最初は訓練データ数の方が小さい場合から始め,最終的に訓練データと評価データの比が9：1になるまで変化させる.実験２は,add-code-rule,add-code,add-rule,SVMの4つの手法により,Cを各手法における最適値に設定して行う.なお,SVMのカーネル関数は線形カーネルを用いた.この理由は,JGSS-2000データとJGSS-2001データを訓練データ,JGSS-2002データを評価データとし,カーネル関数を線形,2次,3次にしてC=0.1から1.0まで10通りに値を変えて実験した結果,平均で線形,2次,3次のカーネルの順に正解率が高かったことによる.</subsection>
  <subsection title="実験１：結果と考察">SVMの正解率はC=1.0のとき71.9%である.システムの目標値である80%には達していないが,評価データであるJGSS-2002データに対するルールベース手法の結果と比較すると5.8%高い.ルールベース手法の方が低かった理由として,SVMは,各事例において,分離平面からの距離が相対的に大きなカテゴリに機械的に決定するのに対して,ルールベース手法では,コーダに対する有効な支援という目的から,はっきりしない場合には無理に職業コードを付けず,未決定のまま残しておくという方針をとったこともある.実際,JGSS-2002データセットに対して,ルールベース手法により決定できた職業コードは74.6%しかないが,この中の79.8%は正解であった（表参照）.これに対し,この事例に対するSVMの正解率は78.5%であり,ルールベース手法の方がわずかながら高い.ここで,単独のデータセットであるJGSS-2001データセットを用いて行った次の実験についても報告する.基本素性に「仕事の内容」と「従業先事業の種類」の2-gramを追加した実験同様に,基本素性に3-gramを追加した実験基本素性の単語を原形でなく読みとした実験（表記の揺れを考慮）基本素性（読み）に「仕事の内容」と「従業先事業の種類」（いずれも読み）の2-gramを追加した実験同様に,基本素性（読み）に3-gramを追加した実験実験の結果,正解率は,基本素性（読み）の実験でCの値により0.2〜0.6%程度上昇しただけで,他の実験ではいずれも上昇しなかった.また,基本素性に対して,InformationGainによる素性選択の実験も行ったが,正解率は向上しなかった.従って,以下の実験はすべて,基本素性を用い素性選択を行わない.次に,SVMとルールベース手法とを組み合わせた4つの手法についての正解率を示す（図参照）.C=1.0のとき,正解率はadd-code-rule&gt;add-code&gt;seqadd-rule&gt;SVM（&gt;ルールベース手法）の順である.この順位は,Cの値が変化しても,seqadd-ruleがadd-rule&gt;seq（C=1.0以外）となることを除きほとんど一定である.特に,SVMとルールベース手法とを組み合わせた手法はCの値に関係なく,すべてSVMより正解率が高く,有効である.この中で,add-codeとadd-ruleに注目すると,Cのすべての値において,add-ruleの方が正解率が低い.この理由は,使用されたルール数が職業コードより多いことから,素性が分散して生起し,有効に働かなかったためであると思われる.add-code-ruleは,Cの値によりadd-codeより優位な場合もあるが,全体的にはadd-codeとそれほどの差がみられない.ここで,Cの変化に対する各手法の正解率の傾向を観察すると,次の3通りに分けられる.seqはCの影響を受けないが,SVMはC=1.0のとき最大でCの値が小さくなるほど低下し,逆に,ルールベース手法と組み合わせた手法（seq以外）はいずれもC=0.2のとき最大で,Cの値が大きくなるほど低下する.このため,SVMとこれらの手法との差は,Cの値が小さくなるほど拡大する.これより,ルールベースからの情報をSVMの素性として組み入れる場合（seq以外）には,あらかじめCの値を慎重に決めることが必要であると思われる.そこで,SVM,add-code,add-ruleに対して,JGSS-2000データを訓練データ,JGSS-2001データを評価データとする実験によりチューニングを行った結果,SVMはC=0.6,add-codeはC=0.4,add-ruleはC=0.3,add-code-ruleはC=0.2で最も高い正解率が得られた.このときの正解率は,いずれの手法も図において最大値またはそれに近い値であった.これより,Cのチューニングが有効であることがわかる.次に,seqについて考察を行う.前述したように,ルールベース手法が決定できない場合に結果が利用されるSVMにおいて,訓練データとしては,全事例を用いる場合と決定できない場合の事例のみを用いる場合の2通りがあるが,全事例を用いる方が正解率が高い（表参照）.seqにおいてSVMの結果が利用されるのは,ルールベース手法がどのようなコードも出力できない（未決定コードを出力する）場合か,複数個のコードを出力するために1個に決定できない場合のいずれかである.これらは両方で全事例の約26%を占めるが,そのうちの約70%は未決定コードを出力する場合である.seqにおいて利用されるSVMの結果についての正誤状況を表に示す.全体では正誤の割合はほぼ等しく,ルールベース手法が決定できない事例のうちの約半数近く（全事例の約13%）をSVMが正しく決定する.特に,ルールベース手法は,全事例の約18%に対してはどのようなコードも出力できない（未決定コードを出力する）が,SVMはこのような場合でも,その約45%の事例（全事例の約8%）を正しく決定する.ここで,これまでにわかったことを以下にまとめる.まず,SVMの正解率は,素性として,自由回答である「仕事の内容」や「従業先事業の種類」に出現する単語（原型）と「従業上の地位と役職」の選択肢番号という非常に基本的なものを用いただけで,既存のルールベース手法より約5%高かった.しかし,素性の組み合わせをさまざまに変えても正解率は向上しなかった.さらに,InformationGainによる素性選択も有効ではなかった.そこで,ルールベース手法との組み合わせに注目し,まず,SVMの素性として,ルールベース手法が出力した結果やそこで用いられたルールを追加する方法を実験した結果,いずれの方法においても正解率の向上がみられた.特にルールベース手法の結果を素性とする方法は有効で,システムの目標値には達しないもののSVMより最大で約4%高かった.ただし,これらの方法の正解率はCの値による変化が大きいために,あらかじめCの値をチューニングしておく必要がある.また,SVMとルールベース手法の結果をシーケンシャルに用いる方法はCの値による影響がないため,Cの値のチューニングは必要ないものの,これらの方法より正解率が低い（ただし,SVMよりは高い）.</subsection>
  <subsection title="実験２：結果と考察">図に,過去の事例を利用できる場合とできない場合における訓練データのサイズと正解率の関係を示す（Cは各手法における最適値とした）.まず,訓練データのサイズが増えるにつれ正解率も高くなり,過去の事例が利用できる場合は73.2〜74.5%から78.1〜80.7%,できない場合も55.9〜63.1%から75.0〜77.1%と変化する.明らかに,すべての時点で過去の事例を利用できる場合の方が正解率が高いことから,過去の事例を利用できる場合には,今回のように多少データの性質が異なっていても,利用する方がよい.両者の差は訓練データのサイズが少ない時点ほど大きいが,新たな事例の約7割の時点で,いずれの手法においても約5%程度にまで縮まり,以後,差が広がることはない.次に,add-code-rule&gt;add-code&gt;add-rule&gt;SVMの順位は,どちらの場合においても変わらない.特に,過去の事例を利用できない場合においては,利用できる場合より各手法間の正解率の差が大きいまま一定の間隔を保ちながら変化しており,add-code-ruleやadd-code,add-ruleの優位性は明らかである.これより,過去の事例を利用できない場合においては,ルールベース手法との組み合わせが有効であることがわかる.ここで,過去の事例のみを利用する場合の正解率は,add-code-rule=74.5%,add-code=74.4%,add-rule=74.2%,SVM=71.7%であるが,この値は,過去の事例が利用できない場合において訓練データのサイズが全事例の半数の時点の正解率とほぼ等しい.従って,過去の事例が利用できない場合でも,新たな事例の約半数をコーディングすれば,フィードバックを行わない通常の場合と同等の効果がある.以上に示した値は,コーダにおける負担と正解率の観点から,コーディングすべき量の一つの目安を提示したものといえる.</subsection>
  <section title="おわりに">本稿では,職業コーディングに対して,SVMの適用を行い,既存のルールベース手法と比較した.また,SVMとルールベース手法の4種類の組み合わせによる適用を行った.その結果,SVMによる方法はルールベース手法より分類性能がよいが,両者を組み合わせる方法はさらによく,すべてSVMを上回ることがわかった.中でも,ルールベース手法が決定した職業コードを素性とする方法は最も有効であった.本稿ではシステムの目標として,コーダによるこれまでの正解率における最高値を設定したが,この値には達しなかった.しかし,ルールベース手法が,コーダの最も低い正解率よりわずかではあるが下回っていたのに対し,SVMによる方法やSVMをルールベース手法と組み合わせた方法は,いずれもこの値を上回っており,特に,ルールベース手法が決定した職業コードを素性とする方法は,中程度のスキルの初心者コーダと同等の能力を有するといえる.本稿ではさらに,訓練データとして,過去の事例だけでなく新たな事例のうちコーディングが終了したものを追加するフィードバックの実験も行い,その有効性を確認した.現在,我々は,コーダの作業負担を軽減する目的で,コーディングの作業を支援するシステムを開発中であるが,そこで最も主要な処理は,コーダが職業コードを決定する際のヒントとなるように,自動職業コーディングの結果にランキングを付けて候補として提示することである.その際,単に自動コーディングの結果を提示するだけでなく,どの程度確からしいかという情報も付与できれば,コーダの判断をより強力に支援することができる.従って,今後の課題としては,自動コーディングの結果に対する確信度の値を,SVMが出力する結果に付随する分離平面からの距離を手掛かりに検討することであるまた,コーダの負担を軽減するという点では,効果的な事例を見つけてコーディングの量を減らすことも重要である.このためには,フィードバックにおいて能動学習を取り入れることが考えられ,これも今後の課題としたい.謝辞日本版GeneralSocialSurveys（JGSS）は,大阪商業大学比較地域研究所が,文部科学省から学術フロンティア推進拠点としての指定を受けて（1999-2003年度）,東京大学社会科学研究所と共同で実施している研究プロジェクトである（研究代表：谷岡一郎・仁田道夫,代表幹事：佐藤博樹・岩井紀子,事務局長：大澤美苗）.データの入手先は,東京大学社会科学研究所附属日本社会研究情報センターSSJデータ・アーカイブである.document</section>
</root>
