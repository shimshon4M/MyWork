<?xml version="1.0" ?>
<root>
  <jtitle>カテゴリ名と記事名の意味属性分類に基づくWikipediaからの上位下位関係オントロジーの構築</jtitle>
  <jauthor>柴木優美永田昌明山本和英</jauthor>
  <jabstract>Wikipediaをis-a関係からなる大規模な汎用オントロジーへ再構成した．Wikipediaの記事にはカテゴリが付与され，そのカテゴリは他のカテゴリとリンクして階層構造を作っている．Wikipediaのカテゴリと記事をis-a関係のオントロジーとして利用するためには以下の課題がある．(1)Wikipediaの上位階層は抽象的なカテゴリで構成されており，これをそのまま利用してオントロジーを構成することは適切でない．(2)Wikipediaのカテゴリ間，及びカテゴリと記事間のリンクの意味関係は厳密に定義されていないため，is-a関係でないリンク関係が多く存在する．これに対して我々は(1)を解決するため，上位のカテゴリ階層を新しく定義し，Wikipediaの上位階層を削除して置き換えた．さらに(2)を解決するため，Wikipediaのカテゴリ間，及びカテゴリ記事間のnot-is-a関係のリンクを3つの手法により自動で判定し切り離すことで，Wikipediaのカテゴリと記事の階層をis-a関係のオントロジーとなるように整形した．本論文ではnot-is-a関係を判定するための3つの手法を適用した．これにより，``人''，``組織''，``施設''，``地名''，``地形''，``具体物''，``創作物''，``動植物''，``イベント''の9種類の意味属性を最上位カテゴリとした，1つに統一されたis-a関係のオントロジーを構築した．実験の結果，is-a関係の精度は，カテゴリ間で適合率95.3%，再現率96.6%，カテゴリ‐記事間で適合率96.2%，再現率95.6%と高精度であった．提案手法により，全カテゴリの84.5%（約34,000件），全記事の88.6%（約422,000件）をオントロジー化できた．</jabstract>
  <jkeywords>オントロジー，シソーラス，is-a関係，上位下位関係，Wikipedia</jkeywords>
  <section title="序論">近年，質問応答や要約，含意認識などで，幅広い知識の必要性が高まっている．幅広い分野の一般的知識を記述したものに汎用オントロジーがある．オントロジーとは概念の意味と概念同士の関係を定義したものであり，特定の分野に偏らず幅広い分野に対応したオントロジーを汎用オントロジーという．概念間の関係には，is-a関係（上位‐下位概念）やpart-of関係（全体‐部分関係）など様々な種類がある．固有名詞や日々生まれる新しい語彙への即時対応を目指して，即時更新性と知識量の多さに優れたオンライン百科事典であるWikipediaを利用したis-a関係の汎用オントロジーの作成が注目されている．汎用オントロジーと言われるものには少なくとも2つのタイプがある．一つは，WordNetのように，語と語の関係（synsetで表現される語義と語義の関係）を表現するものと，日本語語彙大系のように，ある語の上位概念をさまざまな粒度で表現したもの（語を階層的に分類したもの）である．前者は，上位下位関係を構成している単語対をたくさん獲得する方法であり，例えば「紅茶はお茶の一種で，紅茶にはアールグレーやダージリンがある」というような，ある単語を中心として上位概念と下位概念を表現する用語の集合を獲得する（ある単語の近傍の単語の集合を密に獲得する）目的に適している．またこのような目的のために，7.1節で述べるようにWikipediaからis-a関係の抽出の研究も行われている．本研究では後者のタイプの汎用オントロジーを目指す．このタイプの汎用オントロジーからは，葉節点にある概念（Wikipediaの記事の見出し）の上位語を，トップレベルとして設定した10個程度の上位概念まで，細かな粒度から荒い粒度まで順に，葉節点の概念を分類する用語が並んでいるような知識表現が得られる．このようなオントロジーの典型的な応用は，クエリログの解析のためにアイドルの名前を集めたり，アニメのタイトルのリストを作るといった用語リストを作ることである．特に，何らかのアプリケーションのために，「日本の今」を反映するような固有表現辞書を作る場合に有効である．Wikipediaの記事にはカテゴリが付与され，そのカテゴリは他のカテゴリとリンクして階層構造を作っている．しかしオントロジーと違い，Wikipediaのカテゴリ間，カテゴリ‐記事間のリンクの意味関係は厳密に定義されていない．そこで，Wikipediaのリンク構造からis-a関係のリンクを抽出する，以下のような研究が行われている．Wikipediaのカテゴリ間のリンクからis-a関係のリンクを抽出し，is-a関係のリンクでつながる部分的なカテゴリ階層を複数抽出する研究WordNetや日本語語彙大系のような既存のオントロジーに，Wikipediaのカテゴリや記事を接続する研究既存のオントロジーの下位に，Wikipediaから抽出した部分的なカテゴリ階層と記事を接続する研究1〜3の手法はis-a関係のリンクの抽出や既存のオントロジーの接続に文字列照合を用いるため，適合率は高いが再現率が低い．手法2では，Wikipediaのカテゴリ階層の情報が失われる．手法3はWikipediaのカテゴリ階層の情報をオントロジーに組み込めているが，上位階層に既存のオントロジーを用いているため，多くのカテゴリ階層の情報が失われる．また手法3は既存のオントロジーとWikipediaのカテゴリの接続部分を人手で判定しているため半自動の手法である．本研究では，Wikipediaの階層構造を出来るだけそのまま生かし，新たに定義した上位カテゴリ階層にWikipediaを整形した階層を接続することで1つに統一されたis-a関係のオントロジーを自動で構築する（図）．目標とするオントロジーの特徴は主に以下の2点である．Wikipediaの各記事名に対して，上位下位関係に基づく順序が付いた上位語のリストをWikipediaのカテゴリ階層から作成する．Wikipediaの記事名の全体集合を，網羅的(broadcoverage)かつ重なりなく(disjoint)分類できるような，上位下位関係に基づく階層的な分類体系をWikipediaのカテゴリ階層から作成する．本手法では初めに，Wikipediaの上位のカテゴリ階層を削除する．またカテゴリ間とカテゴ記事間のis-a関係でないリンク（以下，not-is-a関係）を高い精度で削除し，残ったリンクをis-a関係とみなすことでWikipediaをis-a関係のリンクのみでつながる階層へ整形する．次にそれらの階層を新たに定義した深さ1の上位階層の下位に接続することで，1つに統一された階層を再構成する．本研究では，(1)全概念を網羅していることを明確化するため(2)標準的な構造(3)計算機処理しやすい，という理由から，体系が統一された汎用オントロジーの構築を目指す．一般に，「人オントロジー」「組織オントロジー」など個別のオントロジーを作成してもそれらのオントロジー間の関係は並列とは限らない．また今回作成した9つで概念のどれだけを網羅しているのかも分かりにくい．我々は，（ほぼ）全概念を9種類の排他的な意味属性で網羅していることを明確化するため，一つのオントロジーとして構築した．これまでに提案されているオントロジーである日本語語彙大系なども同様の形式であり，このような構造にすることによる恣意性，特殊性はない．本研究はオントロジーのあるべき表現構造の議論を行うのが主眼ではないため，最も標準的な構造のオントロジー構築を目指した．計算機で処理する上で全体が統一された一つの構造となっているほうが便利であり，また柔軟性がある．汎用オントロジーとして構築したものの一部（例えば「人」オントロジーのみ）を利用することは可能だが，一般に逆は可能とは限らない．本研究で作成するオントロジーの利用例として質問応答システムを取り上げる．集合知によって作成された百科事典であるWikipediaは，一般的な（常識的な）知識を記述したものであり，Wikipediaの記事名の集合は，多くの人が興味を持つ「もの」と「こと」のリストと考えられる．本研究で構築するオントロジーを用いると，記事名に関して用途に応じて様々な粒度での分類や記述が可能になる．例えば質問応答システムにおいて，「ドラゴンボールとは何か?」という質問に対して，その上位語「格闘技漫画」「冒険作品」「週刊少年ジャンプの漫画作品」はいずれも回答となる．また上記項目2のように一つの統一された階層分類になっていることで，任意の2つの記事名に対して必ず共通の上位語が存在し，共通の上位語に至るまでの上位語は2つの記事名の違いを特徴付けることができる．例えば「ONEPIECEと名探偵コナンの違いは?」という質問に対して，共通の上位語である「漫画作品」と，それぞれの上位にある語「週刊少年ジャンプの漫画作品」，「週刊少年サンデーの漫画作品」を使って，「どちらも漫画作品だが，ONEPIECEは週刊少年ジャンプの漫画で，名探偵コナンは週刊少年サンデーの漫画」というような回答が可能になる．本論文では以降，章でオントロジーとWikipediaについて説明した後，3章で本研究で提案する汎用オントロジー構築手法を示す．次に章で実験条件，章で実験結果，章で考察を述べる．そして章でWikipediaからのオントロジーを構築する関連研究について紹介し，最後に章で本論文の結論を述べる．</section>
  <section title="オントロジーとWikipedia">本研究で扱うオントロジーは，対象とする世界に存在する概念とそれらの間に成立する関係を記述したものを指す．概念間の関係は様々なものがあるが，代表的なものはis-a関係（上位‐下位概念）とpart-of関係（全体‐部分関係）である．is-a関係とは，BisaA，（BはAの一つ，BはAの一種）が成り立つときのAとBの関係をいう．例えば図では「自動車は乗り物の一種」が成り立つので，乗り物と自動車はis-a関係である．このときAを上位語，Bを下位語という．part-of関係とは，BisapartofA（BはAの一部）が成り立つときのAとBの関係をいう．図では「タイヤは自動車の一部」が成り立つので，自動車とタイヤはpart-of関係である．このときAを部分語，Bを全体語という．概念を単語の集合（カテゴリ）と考えると，カテゴリには具体物（インスタンス）が分類される．本研究では，カテゴリ間とカテゴリ‐インスタンス間をis-a関係で表したオントロジーを扱う．is-a関係で表したオントロジーを用いれば，階層を用いて語彙を抽象化したり，リンクの距離から類似度を計算したりできる．これらは，検索，意味処理，情報抽出，機械学習や統計処理など様々な用途に適用可能である．幅広い分野の一般的知識を記述した汎用オントロジーの一つに日本語語彙大系がある．日本語語彙大系は，日本語約30万語を約3,000種類の意味属性で分類したオントロジーである．日本語語彙大系には，約2,700のカテゴリと約10万のインスタンス（普通名詞）からなる一般名詞の意味体系（図）が収録されている．語彙大系のカテゴリ階層は木構造になっていて，カテゴリ間，カテゴリ‐インスタンス間の関係はis-a関係で表される．また多義性があるインスタンスはいくつかのカテゴリが付与される．例えば，「モデル」は``人''と``玩具''の2つの意味があるので，2つのカテゴリ``芸人''と``遊び道具・文房具''が付与される．現状では，既存のオントロジーの大部分は，多大なコストをかけて手動で構築されている．そこで近年，半構造化されたWikipediaから（半）自動でオントロジーを構築する研究が盛んに行われている．Wikipediaは即時更新性に優れた自由に利用できるオンライン百科事典であり，Web上でXML形式のダンプデータが公開されている．記事の本文には，見出し語と説明文（本文の第一文は見出し語の定義文であることが多い），記事を分類するカテゴリが書かれている．そしてこのカテゴリは他のカテゴリとリンクして階層構造を作っている（図）．しかしオントロジーと違い，カテゴリ間の関係やカテゴリ‐記事間の関係は定義されておらず，is-a関係が最も多いがis-a関係でないものもある．例えば，カテゴリ「変光星」と，このカテゴリが付与されている記事「爆発変光星」はis-a関係にあるが，同じく「変光星」が付与されている記事「アメリカ変光星観測者協会」とはis-a関係にない．2,500件のサンプル調査の結果，is-a関係のリンクの割合はカテゴリ間で72.1%，カテゴリ‐記事間で74.7%であった．またオントロジーの最上位カテゴリと違い，Wikipediaのカテゴリ階層はis-a関係による分類を目的としておらず，ジャンルを分類するための9カテゴリ（主要カテゴリ）を最上位としている．</section>
  <section title="汎用オントロジー構築手法">Wikipediaのカテゴリと記事の階層は日本語語彙大系のような1つに統一されたオントロジーのように見えるが，前節で述べたように，上位のカテゴリ階層や，カテゴリ間，カテゴリ‐記事間のリンク関係が定義されていないため，オントロジーとは言えない．そこで本手法ではWikipediaの上位のカテゴリ階層を削除して新たに定義した上位カテゴリ階層と置き換える．さらに，カテゴリ間，カテゴリ‐記事間のis-a関係でないリンク（not-is-a関係）を自動で切り離し，is-a関係でつながる階層へと整形する．削除した上位カテゴリ階層と置き換える上位階層として，図1のように``人''，``組織''，``施設''，``地名''，``地形''，``具体物''，``創作物''，``動植物''，``イベント''の9種類の意味属性をカテゴリとする深さ1の階層を定義した．この上位カテゴリ階層の下位層として，Wikipediaを整形した階層を接続する．節で述べるように，従来の研究はis-a関係となっている2語の特徴を如何にして捉えるかに注力されてきた．これに対して我々は，is-a関係の特徴を捉えることよりも，補集合であるnot-is-a関係の特徴を捉えるほうがタスクとして容易であると考え，not-is-a関係の判別問題としてタスク設定することを提案する．両者は得られた集合の補集合を取ることで結果として同じタスクとなるが，これは両タスクの問題の困難性が同じであることを意味しない．本章では初めに，節でWikipediaのカテゴリ間，カテゴリ‐記事間のリンクがnot-is-a関係になる場合についての調査結果を述べる．次に節で，本手法で使用する上位カテゴリ階層を定義する．節〜節では，not-is-a関係であるリンクを網羅的に判定することで，is-a関係のリンクのみを残す手法を提案する．最後に節で，新たに設定した上位カテゴリ階層と，整形したWikipediaのカテゴリ階層を接続して1つの階層に再構成する手法について述べる．</section>
  <subsection title="Wikipediaのリンクとis-a関係">図のように，Wikipediaのカテゴリは主要カテゴリと呼ばれる9カテゴリを最上位としている．主要カテゴリは語彙大系の最上位カテゴリと異なり，is-a関係による分類を目的としたものではない．本手法では，Wikipediaの上位のカテゴリ階層を削除して，新たに定義する上位階層へ置き換える．上位のカテゴリは意味が抽象的な単語（例：社会，技術）となる傾向があるため，本手法では意味が抽象的な単語を削除することで上位階層の削除を行う．一方，下位の階層になるほど分類はより具体的になりis-a関係になりやすい傾向にある．しかし最下位階層でも，地名や人名，組織などの固有名詞がカテゴリ名になっている場合，「長岡市長岡まつり」，「長岡市北越銀行」のようにカテゴリと記事はis-a関係になりにくい傾向にある．以上を踏まえ，我々はWikipediaのカテゴリ間，カテゴリ‐記事間のリンクがis-a関係になりにくい場合を以下の3種類の規則にまとめた．親子が意味的に類似していない場合はnot-is-a関係とする（例）筆記用具万年筆メーカー，植物草木の神単語同士が深く関連していても，意味的に類似していない場合はis-a関係にならない．親が固有名詞の場合はnot-is-a関係とする（例）少年ジャンプONEPIECE，新潟県長岡市オントロジーは上位になるほど概念が抽象的になり共通概念が増えるが，反対に下位となるほど概念が個別化，具体化する．最も個別化した固有名詞はすべて最下位の概念に属し，基本的に下位に単語を持たない．子名の前方が親名と一致する場合はnot-is-a関係とする（例）火星火星の衛星，缶缶コーヒー日本語は修飾語が先行して被修飾語が後続する構造のみが許される言語であることから，ある二つの単語が前方一致する（かつ完全一致しない）場合，概ね一方は修飾語，他方は被修飾語として使用される．「火星」と「火星の衛星」の場合は，一方の概念は「火星」だが，他方は「火星」を修飾語として立てる被修飾語，すなわち「火星に何らかの意味関係がある別の概念」（この例の場合は「衛星」）である可能性が高くなる．このように親名の主辞が子名の主辞以外に存在するとき，子と親はis-a関係ではなくpart-of関係や話題が類似した関係にあることが多い．の上位階層の削除と，規則1の判定を行うために，幅広い分野に適用可能な9種類の意味属性（表）にカテゴリ名または記事名を分類する．どの意味属性にも分類されない単語は抽象的な単語と判定し，削除する．また規則1は親子が同じ意味属性に分類されなければ意味的に類似していないと判定する．規則2は親名が固有名詞かどうかを判定すればよい．規則3は単純な文字列照合で判定可能である．これらの方法で抽象的すぎる単語を削除，及びis-a関係でないリンクを判定したとき，どの程度is-a関係を判定できるのか人手で調査した．全カテゴリ間，全カテゴリ‐記事間のリンクから無作為抽出した各2,500件のサンプル調査の結果，9種類の意味属性でのis-a関係の精度は，カテゴリ間で適合率98.9%，再現率99.3%，カテゴリ‐記事間で適合率99.3%，再現率98.9%であった．適合率を下げる誤りは，親子が同じ意味属性かつ親名が普通名詞でもnot-is-a関係となる場合に発生する（例：血液←血球，千葉県の道路←千葉県の道の駅，日本の内閣総理大臣←内閣総理大臣夫人）．再現率を下げる誤りは，親名が固有名詞でもis-a関係が成り立つ場合（例：中東欧←東欧，沖縄県営鉄道←沖縄県営鉄道糸満線）や，子名の前方が親名と一致してもis-a関係が成り立つ場合（例：日本人←日本人の学者，映画←映画作品）に発生する．しかし，全体から見ればこれらは少数の例外とみなせるため，結果として提案した方法でnot-is-a関係のリンクを切り離せば，is-a関係を高精度で判定できることを確認した．</subsection>
  <subsection title="上位カテゴリ階層の設定">我々はWikipediaのカテゴリを調査し，独自にWikipediaの階層を下位層として網羅できるような，深さが1の上位カテゴリ階層を定義した．本手法では図1のように``人''，``組織''，設''，``地名''，``地形''，``具体物''，``創作物''，``動植物''，``イベント''の計9種類の意味属性を最上位カテゴリとして定義する．定義の際，以下の3点を考慮した．Wikipediaの記事名の集合を網羅するような上位語の集合であり，かつ，抽象的過ぎないこと．not-is-a関係の判定手法の1つ「1.親子が意味的に類似していない場合はnot-is-a関係とする」の「意味的に類似していない」を判定できる粒度であること．一般的な上位下位概念の粒度10前後の分類とほぼ対応がとれること．基本的には関根の拡張固有表現階層の第一階層である10カテゴリを参考にしている．これらのカテゴリは語彙大系のカテゴリの第四階層とほぼ対応がとれる．ただし，機械学習による分類器が作れるほどのカテゴリと記事数がないもの（例：規則，スポーツ，賞）や，語彙大系に対応付けが難しいもの（例：行為，サービス）に関しては意味属性を設定しても分類精度が落ちるため，今回は対象外とした．表に意味属性に対応する語彙大系のカテゴリと，分類される単語の例を示す．また表に提案手法で設定した意味属性と関根の拡張固有表現階層のカテゴリとの対応表を示す．2,500件のサンプル調査の結果，Wikipediaのカテゴリでは全体の86.3%，記事では90.4%がいずれかの意味属性に分類された．各意味属性別の割合を図に示す．</subsection>
  <subsection title="意味属性分類による上位カテゴリ階層の削除とnot-is-a関係の判定">本節では，上位カテゴリ階層の削除，及び節の規則1「親子が意味的に類似していない場合はnot-is-a関係になる」を判定するために，カテゴリと記事を9種類の意味属性に分類する．どの意味属性にも分類されない単語は抽象的な単語と判定し，削除する．また親子が同じ意味属性に分類されなければ意味的に類似していないと判定する．本手法では，9種類の意味属性をまたがる複数ノードへの所属は許可していない．例えば「シンデレラ」はカテゴリ「グリム童話」であるが他方でカテゴリ「文学の登場人物」でもある．よって本来は意味属性「創作物」と「人」のどちらにも分類すべき単語である．しかし本提案手法においては（SVMの出力値より）「創作物」と判定され，作成されたオントロジー上では文学の登場人物の意味は失われる．ただ，我々の観察ではこのように複数ノードに所属されるべき事例は実際にはほとんどないことから，2単語が所属する意味属性が異なる場合はほとんどnot-is-a関係ということになり，この性質を利用して高精度に判別している．よって「シンデレラ」のような事例に対しては現状で対処できず，今後の検討課題としている．一方，同じ意味属性内においては複数ノードへの所属を許している．例えば，「イチロー」は「アメリカンリーグ首位打者」であり「シアトル・マリナーズの選手」でもあるため，意味属性はどちらも「人」となる．このような状況では「アメリカンリーグ首位打者」と「シアトル・マリナーズの選手」の両カテゴリの下位単語であることを許している．この結果，作成したオントロジーは木構造とはなっていない．</subsection>
  <subsubsection title="カテゴリ分類">WikipediaのカテゴリをSVMによる分類器を用いて9種類の意味属性に分類する．本手法では，多値分類を行うためにone-vs-rest法を用いる．SVMの出力値が0以上かつ最も出力値の高い分類器にWikipediaのカテゴリを分類する．今回は，カテゴリを9種類の意味属性に分類するための9個の分類器に，「その他のカテゴリ名」を分類するための分類器を加えた計10個の分類器を作成した．提案手法では，機械学習による分類器の作成に「再分類法」を用いる．提案手法における再分類法とは，初めにあらかじめ用意した少数の学習データを用いて分類器を作成してカテゴリを分類した後，分類器の出力を学習データに加えて再び分類器を作成し，前ステップで未分類だったカテゴリを分類する手法である．本手法では，カテゴリを1件も分類できなくなるまで再分類を繰り返す．素性作成にはカテゴリ名や以下に定義する周辺の単語などを用いた．以下に使用した単語を示す．対象カテゴリ名親カテゴリ名子カテゴリ名カテゴリ中の記事の定義文からとれる上位語カテゴリと末尾の形態素が一致する記事の定義文からとれる上位語「定義文からとれる上位語」とは，記事の定義文（第一文）からパターンマッチで抽出する見出し語の上位語となる単語である．パターンマッチの例を以下に示すと隅田らSumidaの手法をもとに作成したものを使用した．．...は，[上位語]の一種である．...は，[上位語]である．...[上位語]．例えば，図の記事の定義文「爆発変光星（ばくはつへんこうせい）とは，変光星の一種．」からは，見出し語「爆発変光星」の上位語として「変光星」が抽出される．項目eは，例えばカテゴリ名が「イタリアの諸島」で，その下位に末尾の形態素が一致する記事「エオリア諸島」が存在した場合，この記事の定義文からとれる上位語「島々」を素性に使用する．記事名がカテゴリ名の末尾の形態素と一致する場合，カテゴリと記事は同じ意味属性である可能性が高い．よって，その記事の定義文からとれる上位語はカテゴリそのものの上位語を指すことが多く，カテゴリ名を抽象化できる．素性作成の際にはこれらの単語の形態素や品詞，JUMANにおけるカテゴリ名を利用した．また，カテゴリ名の末尾の文字列と最長一致する語彙大系のインスタンスに付与された，語彙大系のカテゴリ名及び表で対応づけた意味属性名を素性にした．例えばWikipediaのカテゴリ名が「若手小説家」だった場合，末尾の文字列と最長一致する語彙大系のインスタンスは「小説家」である．よって，「小説家」に付与されている語彙大系のカテゴリ``作家・詩人''を素性にする．また，``作家・詩人''に付与されている意味属性``人''も素性にする．このように「若手小説家」を，語彙大系カテゴリ``作家・詩人''や意味属性``人''に抽象化することで，高精度な分類が期待できる．a〜eの単語は普通名詞であることが多く，JUMANのカテゴリや語彙大系を利用しやすい．表に，学習に用いた素性と，図において生成される素性を示す．各素性に対し頻度を求めた後，各素性ごとに最大値が1になるように正規化した値を素性ベクトルの値とする．例えば，表の6-dの素性例は，``人''が2件，``具体物''が1件なので，素性ベクトルは人：1，具体物：0.5となる．本手法のカテゴリ分類では再現率の向上のため，直前のステップで得られた出力を学習データに加える再分類法を用いる．直前のステップまでに決定したカテゴリの意味属性をもとにした素性を設定することで，既に意味属性が決定したカテゴリの周辺カテゴリの意味属性を決定しやすくする．図の例は，対象カテゴリ「子供」の意味属性が未決で，その周辺の3つのカテゴリの意味属性は直前のステップまでに確定した状態である．対象カテゴリ「子供」と子カテゴリ「子役」は語彙大系のカテゴリ``少年・少女''に属するため，意味的に類似しているといえる．意味的に類似した「子役」の意味属性は``人''なので，「子供」の意味属性も``人''である可能性が高くなるように素性を設定する．表に，既に意味属性が決定したカテゴリをもとに設計した素性と，図において生成される素性を示す．</subsubsection>
  <subsubsection title="記事分類">カテゴリ分類の後，記事を9種類の意味属性に分類する．本手法では，SVMによる分類器を用いて記事分類をした後，どの分類器にも分類されなかった記事を，既に分類された記事情報をもとに分類する．記事のSVMによる分類器はカテゴリ分類器と同様，素性作成には記事名や以下に定義する周辺の単語，語彙大系を使用した．以下に記事分類のために使用する単語を示す．対象記事名記事の定義文からとれる上位語対象記事に付与されているカテゴリ名記事の定義文本手法のSVMによる分類器での記事分類では，精度を向上させるためにカテゴリ名と記事名の類似性を判定し，記事名とカテゴリ名が似ていれば，そのカテゴリの意味属性が優位になるように素性を設計した．例えば，図では記事「ロータリー車」とカテゴリ「鉄道車両（具体物）」は後方の文字列が両者とも語彙大系のカテゴリ``乗り物（本体（移動（陸圏）））''に文字列照合（両者は意味的に類似）するので，「ロータリー車」が「鉄道車両」と同じ具体物である可能性が高くなるように素性を設計した．記事分類のための素性を表と表に示す．表は，既に意味属性が確定しているカテゴリに着目して設定した素性である．表，表にそれぞれに，図，図を例にしたときの素性も合わせて示す．次に，SVMによる分類器で分類できなかった残りの記事を分類する．ここでは，is-a関係の記事を下位に持つことが多いカテゴリを判定し，そのカテゴリより下位にある意味属性が未確定な記事を，そのカテゴリと同じ意味属性に分類する．Wikipediaには，is-a関係の記事を下位に持つことが多いカテゴリと，カテゴリと記事がis-a関係ではない何らかの関係になっていることが多いカテゴリがある．例えば，カテゴリ「日本の俳優」は「蒼井優」や「反町隆史」などカテゴリとis-a関係になる記事のみを持つが，カテゴリ「長岡市」は「蒼柴神社」や「長岡まつり」などis-a関係でない記事を多く持つ．このようなis-a関係の記事を下位に持つことが多いカテゴリを，以降「上位概念カテゴリ」と呼ぶ．小林らKobayashi2は，is-a関係の記事の手法を用いている．の割合が閾値以上のカテゴリを上位概念カテゴリとみなし，上位概念カテゴリとその全ての下位記事をis-a関係として抽出している．本手法ではこの手法を参考にし，既に決定したカテゴリの意味属性と記事の意味属性が一致する割合を求め，この割合があらかじめ決めた閾値以上であれば，そのカテゴリを上位概念カテゴリとする．そして上位概念カテゴリとされたカテゴリに分類されている，意味属性が未確定の記事を，カテゴリと同じ意味属性に分類する．例えば図のように，カテゴリ「カクテル（具体物）」に分類されている，意味属性が決定した記事のうち，4件が``具体物''で，1件が``人''だったとする．このとき，カテゴリと同じ意味属性である``具体物''の割合は80%である．この割合が高いほど，カテゴリ「カクテル（具体物）」には具体物が分類されやすいといえる．よって，あらかじめ設定した閾値が80%以下であれば意味属性が未確定の記事を``具体物''に分類する．1つの記事に対して付与する意味属性は1つなので，記事に意味属性の異なる上位概念カテゴリが複数付与された場合は，意味属性を選択しなければならない．本手法ではまず，上記の割合が高いほうの上位概念カテゴリと同じ意味属性を記事に付与する．もし割合が同じだった場合は，カテゴリを分類したときのSVMの出力値が最も高かった上位概念カテゴリの意味属性を付与する．</subsubsection>
  <subsection title="固有名詞抽出によるnot-is-a関係の判定">本節では，節の規則2「親が固有名詞の場合はnot-is-a関係になる」を解決するために，カテゴリ名（記事が親となることはない）から固有名詞を抽出する．固有名詞を抽出するために，MeCabと英語Wikipediaのカテゴリ名・記事名を用いた2種類の手法を提案する．</subsection>
  <subsubsection title="MeCabを用いた固有名詞抽出">親名がMeCabの辞書に固有名詞として辞書登録されていれば固有名詞と判定する．</subsubsection>
  <subsubsection title="英語Wikipediaのカテゴリ名・記事名を用いた固有名詞抽出">日本語Wikipediaのカテゴリは，英語Wikipediaの同じカテゴリにリンクしていることがある．例えば，日本語カテゴリ「音楽家」は英語カテゴリ「Musicians」にリンクしている．英語表記の固有名詞の頭文字のアルファベットは大文字表記であると述べたが，カテゴリ名の頭文字は原則すべて大文字で表されるため，この基準では判定できない．ここでは，各形態素の頭文字が全て大文字であれば固有名詞である，という基準を用いる（前置詞``at,of,the,on,and,in,to''，冒頭以外に冠詞``the''を含む単語を除いて，2形態素以上ある単語に限る）．ただし，例外として意味属性が``動植物''と判定されたカテゴリは全て普通名詞とみなすことにした．なぜなら，``動植物''のカテゴリ名のほとんどがスミレ科(Violaceae)，バラ亜綱(Rosidae)など普通名詞であるが，これらの英語表記は，初めの頭文字を大文字のアルファベットとするためである．また，意味属性が``人''と判定されたカテゴリにおいて，主辞が複数形だった場合も普通名詞として扱う．ヨーロッパ系アメリカ人(EuropeanAmericans)やアメリカ合衆国上院議員(UnitedStatesSenators)のように主辞が複数形であれば，それより下位にis-a関係の単語を持つからである．このような現象は特に``人''に多いので，``人''のみにこの規則を適用する．図~に，英語Wikipediaのカテゴリ名を用いた固有名詞抽出のための決定木を示す．さらに多くのカテゴリ名を固有名詞として抽出するため，Wikipediaの記事も用いる．Wikipediaのカテゴリは通常本文を持たないが，カテゴリ名と同名の記事が分類されていることがある．その場合，カテゴリ名と記事名は同一のものを指すので，記事を解析することでカテゴリ名から固有名詞を抽出する．英語カテゴリ名と同様に，各形態素の頭文字が全て大文字であれば固有名詞である，という基準を用いる．さらに記事の本文に注目し，記事の本文中の文頭以外で記事名が使われているとき，その頭文字のアルファベットが大文字であれば固有名詞とする．図~に，英語Wikipediaの記事名を用いた固有名詞抽出のための決定木を示す．以上の2種類の手法において，いずれの出力も普通名詞でなく，いずれかの出力で固有名詞だったカテゴリ名を，固有名詞と判定する．そして，カテゴリ間，カテゴリ‐記事間において，親名が固有名詞の場合はnot-is-a関係と判定する．しかし「パリメトロ←パリメトロ2号線」や「どうぶつの森←おいでよどうぶつの森」のように，親名が固有名詞でもis-a関係が成り立つ場合がある．この場合，子カテゴリが親カテゴリの固有名詞をさらに細分化したis-a関係が成り立つ．そこで本手法では例外処理として，以下の2つの条件の場合，リンクをnot-is-a関係としないことにした．「パリメトロ←パリメトロ2号線」，「ロックマン←ロックマンX」のように，子名の前方が親名と一致した時（パリメトロ，ロックマン），一致部分を削除した部分（2号線，X）が数字または記号を含む場合はnot-is-a関係としない．「どうぶつの森←おいでよどうぶつの森」，「オールナイトニッポン←ゆずのオールナイトニッポン」のように子名の後方が親名と一致した場合はnot-is-a関係としない．</subsubsection>
  <subsection title="文字列照合によるnot-is-a関係の判定">節の規則4で，「子名の前方が親名と一致する場合はnot-is-a関係とする」とした．「火星←火星の衛星」，「缶←缶コーヒー」のように子名の前方が親名と一致するかどうかは文字列照合で判定する．ただし，前節で述べたように，「パリメトロ←パリメトロ2号線」のように，子名の前方が親名と一致した時，一致部分を削除した部分（2号線）が数字または記号を含む場合は，子名の前方が親名と一致してもnot-is-a関係としないことにする．</subsection>
  <subsection title="オントロジー階層の再構成">節〜節の手法を用いて抽象的すぎるカテゴリを削除することでWikipediaの上位階層を削除する．また節〜節の手法のいずれかでnot-is-a関係と判定さたカテゴリ間，カテゴリ‐記事間のリンクを切り離す．この状態のWikipediaは1つの階層構造ではなく，複数の階層に分離している．これら複数の階層を節で定義した上位カテゴリ階層である9種類の意味属性の下位に接続する．その際，階層の中で親を持たないカテゴリ及び記事（以下，ルートカテゴリ，ルート記事）を，同じ意味属性の最上位カテゴリの下位に接続する．図にWikipediaの階層から，is-a関係のオントロジー階層を再構成するまでの例を示す．Wikipediaのカテゴリ階層には循環がある．提案手法で抽出した部分的な階層が循環していた場合にどこでその循環を切るかという問題は容易には解決できないと考え，本研究では便宜的に下記処理を行った．すなわち，循環している階層を構成するカテゴリの内，最もID番号の小さいカテゴリを指すis-a関係のリンクをnot-is-a関係とすることで，循環のないカテゴリ階層を構築した．</subsection>
  <section title="実験条件"/>
  <subsection title="実験設定">2008年7月24日時点での日本語Wikipediaのダンプデータを使用して評価実験を行った．カテゴリ数は40,385件，記事数は475,941件，カテゴリ間のリンク数は85,353件，カテゴリ‐記事間のリンク数は1,173,894件である．</subsection>
  <subsubsection title="固有名詞抽出">全記事から無作為抽出した1,000件に対し，作業者1名が人手で固有名詞または普通名詞を付与したものを，評価データとした．MeCabによる固有名詞抽出では，MeCab0.98でIPA辞書Ver.2.7.0を用い，英語の形態素の複数形を調べるためにApplePieParser5.9を用いた．英語Wikipediaは2011年1月15日時点のダンプデータを用いた．</subsubsection>
  <subsubsection title="is-a関係の判定">全カテゴリ間，全カテゴリ‐記事間のリンクから無作為抽出した各2,500件に対し，作業者1名が人手でis-a関係か否かを判定したものを評価データとした．他の作業者1名が同じデータに正解を付与した結果，一致率はカテゴリ間で98.8%，カテゴリ‐記事間で98.8%であった．さらに，is-a関係が成り立つ単語対に対しては，意味属性を付与した．</subsubsection>
  <subsection title="比較手法">本実験では，記事分類，カテゴリ間のis-a関係判定，カテゴリ‐記事間のis-a関係判定において関連研究との比較を行う．カテゴリの意味属性分類，記事名の固有名詞抽出の関連研究は我々が知る限り存在しなかったため，関連研究との比較を行わない．本実験では関連研究を独自に実装した結果と比較を行う．</subsection>
  <subsubsection title="記事分類の比較手法">記事分類の比較手法には藤井らFujiiの手法を用いた．藤井らはWikipediaの記事を関根の拡張固有表現階層のカテゴリに分類する手法だが，本実験では本研究で設定した9種類の意味属性に分類し，提案手法との比較を行う．記事中の定義文に出現する形態素とページのカテゴリ情報を利用して学習を行い，one-vs-rest法で分類対象となるページの固有表現クラスを一意に決定する．ここでカテゴリ情報として，Wikipediaのカテゴリ階層構造の最上位のカテゴリである「主要カテゴリ」から対象記事までの最短パス上にあるカテゴリ名の末尾の形態素を素性として用いる．分類器の学習には本実験と同じTinySVM0.09を用い，学習データも本実験と同じものを用いた．</subsubsection>
  <subsubsection title="カテゴリ‐記事間のis-a関係判定の比較手法">カテゴリ‐記事間のis-a関係判定の比較手法には小林らKobayashiの手法を用いた．彼らは語彙大系のカテゴリにis-a関係となるWikipediaのカテゴリを接続し，さらに，分類されている記事をインスタンスとする手法を提案している．語彙大系の下位に構築されたカテゴリ‐記事間のis-a関係のリンクと，提案手法で判定できたカテゴリ‐記事間のis-a関係のリンクを比較する．小林らKobayashiの手法の概要を図に示す．この図は，語彙大系のカテゴリ「星」にWikipediaのカテゴリと記事の対「変光星←爆発変光星」を接続した例である．初めに，語彙大系のカテゴリのインスタンスに，末尾の文字列が照合するWikipediaのカテゴリを，下位カテゴリ候補として対応づける（「星」と「変光星」が文字列照合する）．次に，このカテゴリの下位の記事の定義文からとれる上位語が，接続先の語彙大系のカテゴリまたはそれより上位のカテゴリのインスタンスと文字列照合すれば，カテゴリ‐記事を語彙大系カテゴリの下位に接続する（記事「アメリカ変光星観測者協会」の上位語「国際非営利団体」は文字列照合しないが，上位語「爆発変光星」の「変光星」は文字列照合する）．本実験では，語彙大系のカテゴリとWikipediaのカテゴリのリンクがis-a関係であるか否か（正しいか否か）に関係なく，語彙大系に接続したWikipediaのカテゴリと記事のリンクをis-a関係とみなし，提案手法と比較する．</subsubsection>
  <subsubsection title="カテゴリ間のis-a関係判定の比較手法">カテゴリ間のis-a関係判定の比較手法には桜井らSakuraiの手法である「後方文字列照合」を用いた．「後方文字列照合」は，「空港←日本の空港」のように，子カテゴリ名の後方の文字列が親カテゴリ名であった場合，両者をis-a関係とする手法である．しかしこれでは再現率が低いので，本実験では「アジアの空港←日本の空港」のように，親カテゴリと子カテゴリの末尾の形態素が一致した場合に両者をis-a関係とみなす．末尾の形態素を得るために本実験と同じJUMANVer.~6.0を使用した．</subsubsection>
  <section title="実験結果"/>
  <subsection title="カテゴリと記事の意味属性分類">本手法では初めに，カテゴリと記事を9種類の意味属性へ分類した．カテゴリ分類精度は適合率98.0%，再現率98.1%，記事分類精度は適合率96.5%，再現率93.4%であった．Wikipediaのカテゴリ全体の84.5%（34,142件），記事全体の88.6%（421,873件）が9種類の意味属性のいずれかへ分類された．カテゴリと記事分類の意味属性別と全体の精度，分類数，全体からみた分類数の割合を表に示す．また，図，図に，意味属性別と全体の精度のグラフを示す．カテゴリ分類は記事分類より全体的に精度が高い．カテゴリ名は普通名詞が多いため，意味属性に対応づけた語彙大系のカテゴリ情報との一致を素性にすることで高い精度が得られたと考える．適合率は全ての意味属性で95%以上で，特に``人''，``地形''で適合率が99%以上と高かった．適合率を下げる誤りの約半数は，``その他''が付与されたカテゴリが，9種類の意味属性に分類されたことが原因だった．再現率に関しては``イベント''を除けば全て95%以上である．特に``地名''，``地形''，``動植物''で再現率が100%と高かった．``イベント''は種類が多様（表）なため学習が難しく，再現率が他より低くなったと考える．記事分類での適合率は，最も低い具体物で92.0%，最も高い動植物で100%であった．記事名は固有名詞が多くカテゴリに比べて精度が落ちるが，記事に付与されたカテゴリ名や記事の定義文からとれる上位語のような普通名詞を素性に使用したり，既に意味属性の確定しているカテゴリ情報を素性に用いたりすることで高精度な分類ができたと考える．``組織''と``具体物''は他より適合率が低い．他より適合率が低い``具体物''の誤りの多くは，``その他''が付与されたカテゴリが``具体物''に分類されてしまったことが主な原因であった．一方``組織''で適合率が低い主な原因は，``施設''が``組織''に分類されたことにある．``施設''と``組織''は区別が曖昧なことがあり，例えばカテゴリ「久慈ラジオ中継局」は本評価データでは``施設''を付与したが，分類器では``組織''に分類された．記事分類の再現率はカテゴリ分類の再現率より4.7ポイント低い．再現率が特に低い``動植物''と``イベント''の分類誤りを調査したところ，記事と同じ意味属性のカテゴリが1つも付与されていないことが多いことがわかった．例えば，記事「国際切手展（イベント）」に付与されたカテゴリは「切手（具体物）」「郵趣（その他）」なので，記事と同じ意味属性のカテゴリは付与されていない．評価データを調査したところ，``動植物''と``イベント''ではそれぞれ90.8%，81.5%の記事に同じ意味属性のカテゴリが付与されていたのに対し，再現率，適合率がともに高い``人''と``創作物''ではそれぞれ95.5%，98.1%と高かった．このことから，カテゴリの意味属性が記事の意味属性の決定に深く関わっているといえる．</subsection>
  <subsection title="is-a関係判定">本手法では「1.意味属性分類」「2.固有名詞判定」「3.文字列照合」の3種類の手法によりis-a関係を判定した．3手法のいずれでもnot-is-a関係と判定されなかったカテゴリ間，カテゴリ‐記事間のリンクをis-a関係とした．その結果，Wikipediaの全てのカテゴリ間で適合率95.7%，再現率81.9%，is-a関係数50,396件，カテゴリ‐記事間で適合率96.6%，再現率91.9%，is-a関係数834,474件であった．カテゴリ‐記事間よりカテゴリ間のほうが再現率が低いのは，カテゴリ‐記事間のほうが9種類の意味属性以外のis-a関係が少ないことが原因である．サンプル調査の結果，全is-a関係のうち9種類の意味属性以外のis-a関係の割合は，カテゴリ間では15.9%，カテゴリ‐記事間では4.7%であった．結果として，カテゴリ‐記事間のほうが削除されるis-a関係が少なく，カテゴリ間よりも再現率が約10ポイント高くなった．9種類の意味属性に限定したis-a関係の精度は，カテゴリ間で適合率95.3%，再現率96.6%，カテゴリ‐記事間で適合率96.2%，再現率95.6%であった．本手法では9種類の意味属性以外のis-a関係は抽出対象としていないため，全体からみれば再現率は低い（カテゴリ間で81.9%，カテゴリ‐記事間で91.9%）が，9種類の意味属性に範囲を限定すれば再現率は高かった（カテゴリ間で96.6%，カテゴリ‐記事間で95.6%）．is-a関係の意味属性別と全体の精度，is-a関係数を表に，精度のグラフを図，図に示す．カテゴリ間のis-a関係の適合率は全ての意味属性で95%以上，再現率は93%以上と，どの意味属性でも比較的高い精度が得られた．カテゴリ‐記事間では，``イベント''以外で適合率と再現率が91%以上だが，``イベント''は適合率，再現率が他と比べて大幅に低い．分類誤りを見たところ，イベントは「1.意味属性分類」の誤りが多いためにis-a関係の精度も低くなっていた．手法別の精度，各手法の有効性，誤り解析に関しての詳細は考察節で述べる．</subsection>
  <subsection title="構築したオントロジー">本手法で構築したオントロジーの各種数値を表に示す．ルートカテゴリ，ルート記事とは，最上位カテゴリ（9種類の意味属性）に直接リンクするカテゴリと記事を指す．言い換えると，Wikipedia上で上位にis-a関係の単語を持たないカテゴリと記事のことである．リーフカテゴリとは，Wikipedia上で下位にis-a関係のカテゴリを1つも持たないカテゴリを指す．今回作成したWikipediaのオントロジーのカテゴリ数は約34,000件，記事数（インスタンス数）は約422,000件である．語彙大系は普通名詞と固有名詞を合わせると，カテゴリ数約3,000件，インスタンス数約300,000件なので，本手法により大規模なオントロジーが構築できたといえる．特に，カテゴリ階層の規模は語彙大系の10倍以上である．ルートカテゴリ数とルート記事数はそれぞれ約2,000件，25,000件であった．本手法ではWikipediaのis-a関係のリンクをできるだけそのまま生かして1つに統一されたオントロジーを構築したが，それでも多量のルートカテゴリ，ルート記事が存在していた．表を見ると，``地名''，``組織''，``イベント''で分類されたカテゴリ，記事から見た，ルートカテゴリ，ルート記事数の割合が高い．地名はpart-of関係のリンクが多く，組織は関連会社や統合前の社名などがリンクすることが多いからである．また``イベント''は，そのイベントが起こる時期や場所，関連する出来事にリンクされることが多いからである．``人''，``創作物''のルート記事数の割合は他に比べて低い．``人''，``創作物''は，1つの記事に多数のカテゴリが設定されていることが多いため，上位にis-a関係のカテゴリを持つことが多いことが要因だと思われる．``地形''はルートカテゴリ，ルート記事の割合が共に低い．これは，``地形''が他の意味属性に比べてWikipedia上でis-a関係によって体系化されやすいことを示している．リーフカテゴリの深さの平均は全カテゴリ中で6.9であった．ここで言う「深さ」とは，最上位カテゴリからリーフカテゴリまでの最長ルートのリンク数を表す．例えば図のカテゴリ「洋菓子」の最長ルートは，「具体物←食品←菓子←ケーキ←洋菓子」で，深さ4である．全意味属性と各意味属性における，全リーフカテゴリ数からみた各深さでのリーフカテゴリ数の割合を図に示す．全体では深さ9のリーフカテゴリの割合が最も高く，20.9%であった．意味属性別に見ると，最も割合の高い深さは意味属性によって異なる．最も割合の高い深さが5の動植物が最も浅く，深さ10の地形が最も深かった．動植物が最も浅いのは，他の意味属性と異なり，「アジアの地形」や「日本のスポーツ選手」のように，地域別の分類（深い階層になりやすい）があまり存在せず，「爬虫類」や「テングダケ科」など分類学に基づく分類体系であることが多いためである．最後に，抽出したis-a関係のカテゴリ階層の例と，カテゴリ‐記事間のis-a関係の例をそれぞれ表，表に示す．日本語語彙大系とは全く異なるカテゴリ階層と記事（インスタンス）を獲得できたといえる．</subsection>
  <section title="考察"/>
  <subsection title="関連手法との比較"/>
  <subsubsection title="記事分類の関連手法との精度比較">関連手法である藤井らの手法と精度，記事分類数を比較した結果を表に示す．藤井らの手法より本手法のほうが適合率で4.9ポイント，再現率で11.0ポイント上回った．さらに，分類数も提案手法のほうが約32,000件多い．意味属性別と全体の精度の比較を図に示す．図より，全ての意味属性で適合率と再現率が藤井らの手法を上回っていることがわかる．``人''と``施設''では両手法ともに適合率が高く差がないが，それ以外の意味属性では提案手法のほうが5〜13ポイント高い．再現率の向上幅は適合率より大きく，組織，施設，具体物，創作物，イベントで，提案手法のほうが15〜20ポイント高くなっている．本手法の記事分類では，より有効な素性を設定できたといえる．藤井らが，記事に付与されたカテゴリから主要カテゴリまでの最短経路の全てのカテゴリ名を素性に用いているのに対し，本手法では，記事のごく周辺の単語のみを利用しているためノイズとなる素性が少ない．また提案手法では，カテゴリに付与された意味属性を用いたり，定義文からとれる上位語や語彙大系を用いて素性の単語を抽象化することで，高精度な分類ができたと考えられる．さらに提案手法ではis-a関係の記事を持ちやすいカテゴリ（上位概念カテゴリ）を判定することで高い再現率を得られたと考えられる．</subsubsection>
  <subsubsection title="is-a関係判定の関連手法との精度比較">カテゴリ間のis-a関係判定の比較手法には桜井らSakuraiの手法，カテゴリ‐記事間のis-a関係判定の比較手法には小林らKobayashiの手法を用いた．結果を表，表に示す．提案手法のカテゴリ間のis-a関係の適合率は桜井らの手法より1.9ポイント低い．これは，桜井らの手法はis-a関係を判定するための強力な文字列照合を用いているためだと考えられる．リーフカテゴリの深さを比較すると，桜井らの手法で構築したカテゴリ階層のリーフカテゴリの深さの平均が2.7だったのに対し，提案手法のリーフカテゴリの深さの平均は6.2であった．提案手法のほうが深いカテゴリを階層を構築できているといえる．一方小林ら(2008)の手法と比較すると，is-a関係の適合率は3.6ポイント高い．小林ら(2008)の手法では，「たつの市←本竜野駅」「柳井市←柳井警察署」といった，親名が地名であるis-a関係誤りがほとんどである．語彙大系において，``市''と``駅''，``警察署''は同じカテゴリ``公共機関''に属するため，小林ら(2008)の手法ではこれらをis-a関係と判定してしまい，適合率が低くなっていた．提案手法では「親名が固有名詞ならnot-is-a関係とする」という規則により，これらを正しく判定できている．再現率は，どちらの関連手法よりも，提案手法のほうが24ポイント以上高い．次に，提案手法と比較手法で抽出できたis-a関係のリンクを持つ単語対を比較する．評価データのうち，桜井らの手法のみで正しく抽出できたis-a関係は178件(178/1802=9.9%)，提案手法のみで正しく抽出できたis-a関係は613件(613/1802=34.0%)であった．提案手法のみで抽出できるis-a関係数のほうが桜井らの手法のみで抽出できるis-a関係数より圧倒的に多いといえる．桜井らの手法のみ，提案手法のみで正しく抽出できたカテゴリ間のis-a関係の例を表に示す．桜井らの手法では，文化，歴史，教育，政治など，提案手法で「抽象的すぎる単語はis-a関係になりにくい」として除外した分野でis-a関係を抽出できている．また桜井らの手法は，提案手法では分類器をつくれるほどのカテゴリ，記事数がなくて対象外とした，スポーツや賞，法律でもis-a関係を抽出できている．一方提案手法は，カテゴリ間の文字列に関係なくis-a関係を抽出できているため，桜井らの手法よりも多くのis-a関係のカテゴリ対を抽出することができた．評価データのうち，小林ら(2008)の手法のみで正しく抽出できたis-a関係は61件(61/1865=3.3%)，提案手法のみで正しく抽出できたis-a関係は506件(506/1865=27.1%)であった．提案手法のみで抽出できるis-a関係数のほうが小林ら(2008)の手法のみで抽出できるis-a関係数より圧倒的に多いといえる．小林ら(2008)の手法のみ，提案手法のみで抽出できるカテゴリ間のis-a関係の例を表に示す．桜井らの手法と同様，本手法で対象外とした分野でis-a関係を抽出できている．小林ら(2008)の手法では，カテゴリ名や，記事の定義文からとれる上位語が語彙大系のインスタンスと文字列照合しないと，is-a関係を抽出することができない．しかし提案手法では，機械学習による分類器を用いることで，アウトレットモールやベーシスト，アプリのように語彙大系に存在しない単語から成るis-a関係でも抽出可能である．以上によりis-a関係でないリンクを判定することで，より高い再現率でis-a関係を抽出する提案手法の有効性が示された．</subsubsection>
  <subsection title="カテゴリと記事の意味属性分類に関する考察"/>
  <subsubsection title="カテゴリ分類器の素性について">本手法ではカテゴリ分類の際，Wikipediaから抽出できる5種類の単語（対象カテゴリ名，親カテゴリ名，子カテゴリ名，カテゴリ中の記事の定義文からとれる上位語，カテゴリと末尾の形態素が一致する記事の定義文からとれる上位語）を素性に用いている．各単語が分類器の精度にどの程度影響を与えるかを比較するため，各単語を用いなかった場合と全ての単語を用いた場合のSVM分類器の精度（再分類を適用前）を表に示す．表より，全ての単語を用いたほうが各単語を除いた場合より精度が高いことから，各単語はSVM分類器の素性において有効であるといえる．その中でも特に親カテゴリを除いたときに精度が最も下がることから，親カテゴリが最も精度向上に貢献していることがわかる．</subsubsection>
  <subsubsection title="カテゴリ分類において再分類法を用いる効果">本手法でのカテゴリ分類では，再分類法により再現率の向上を図った．再分類前と後の精度の違いを表に，再分類試行回数ごとの精度と未抽出カテゴリ数の変化を図に示す．表，図より，適合率をあまり下げることなく（-0.3ポイント），再現率を大幅に向上させることができ（+2.7ポイント），再分類法が有効であることが示された．最初の分類器の学習データはあらかじめ人手で正解を付与した適合率100%の2,000件のデータであるが，次のステップ（1回目の再分類）では学習データは38,262件（適合率98.3%）となる．学習データの適合率が1.7ポイント低下しているが，学習データ量は約19倍になっている．結果として，未分類のカテゴリを分類可能となり，再現率が大幅に向上しF値が向上した．再分類前と後での，意味属性別と全体の精度の変化を表したグラフを図に示す．図より，全ての意味属性で，適合率をほとんど下げることなく，再現率を大幅に向上できていることが示された．特にイベント名での再現率は約10ポイントも向上している．イベント名は，表~でも示したように分類する単語の種類が多様なため，学習データを増やしていく再分類法が有効に働いたと考えられる．</subsubsection>
  <subsubsection title="記事分類器の素性について">本手法での記事分類では，カテゴリを機械学習による分類器で分類した後に，そのカテゴリがどの意味属性に分類されたかの情報を用いる素性を利用している．そこで，カテゴリが分類された意味属性の情報を用いる場合と用いない場合での分類記事数の比較（上位概念カテゴリ適用前）を表に示す．表より，カテゴリの分類結果に依存する素性を用いると，用いない場合と比べて適合率は1.0ポイント，再現率は2.6ポイント向上した．カテゴリの分類結果を用いることで，より精度高く記事を分類できたことがわかる．</subsubsection>
  <subsubsection title="記事分類において上位概念カテゴリを用いる効果">本手法での記事分類では，記事を機械学習による分類器で分類した後に，「上位概念カテゴリ」を用いることで未分類の記事を分類する手法を提案した．上位概念カテゴリ適用前と後の精度と分類記事数の比較を表に示す．表より，上位概念カテゴリを適用させると適合率は0.3ポイント下がるが再現率は1.3ポイント向上し，F値が0.5ポイント向上した．これにより新たに6,359件の記事を分類することができた．図に意味属性別と全体の精度を比較したグラフを示す．特に``組織''，``具体物''，``創作物''，``イベント''で再現率が向上している．特に``イベント''は適合率を下げることなく再現率が8.7ポイント向上した．``イベント''は多様な単語が分類されるため機械学習による分類器での分類が難しいが，上位概念カテゴリを用いることで多くの記事を分類できた．本手法では既に決定したカテゴリの意味属性と記事の意味属性が一致する割合を求め，この割合があらかじめ決めた閾値以上であれば，そのカテゴリを上位概念カテゴリとした．閾値100%で上位概念カテゴリとした場合は，適合率96.6%，再現率93.0%となり，適用する前より適合率が0.2ポイント下がり再現率が0.9ポイント上がった．一方，閾値0%で上位概念カテゴリとした場合は，適合率95.0%，再現率94.4%となり，適用する前より適合率が1.8ポイント下がり再現率が2.3ポイント上がった．なお閾値0%では，意味属性が付与されているカテゴリの全ての記事が，カテゴリと同じ意味属性に分類された状態である．評価データ2,500件において，閾値を変化させたときの適合率と再現率の関係を図に示す．図をみると，再現率が93%〜93.5%（閾値100%〜80%）の間は適合率がほぼ変わらず，再現率が93.5%を超えると再現率に比例して適合率が低下している．これは，カテゴリ名と意味属性の異なる記事（ノイズ）が多少含まれていても（20%以下），そのカテゴリの上位概念カテゴリらしさは，全くノイズがないときとあまり変わらないことを示している．</subsubsection>
  <subsection title="not-is-a関係判定手法に関する考察">本手法では3種類の手法を用いてカテゴリ間，カテゴリ‐記事間のnot-is-a関係を判定することでis-a関係のリンクを判定している．本節では手法別の精度，各手法の有効性，誤り解析に関して述べる．各手法と全ての手法を組み合わせたis-a関係判定精度を表に示す．表より，3手法において，全てをis-a関係とみなしたときよりF値が高いことから，個々の手法はis-a関係判定において有効であるといえる．また，全ての手法を組み合わせることで，個々の適合率より高い適合率でis-a関係が判定できていることがわかる．個々の手法を見れば，3手法ともis-a関係を判定するために有効だが，3手法を組み合わせるにあたり，貢献度の高い手法と低い手法があると考えた．例えば手法2で判定できるis-a関係のほとんどを手法1で判定できれば，手法2の貢献度は低いといえる．そこで表において，全ての手法を組み合わせた時と，各手法を除いたときの精度を比較した．こうすることで，除いた手法が全ての手法を組み合わせた時の精度に与える影響がわかる．例えば表の上表では，カテゴリ間において，「1.意味属性分類による手法」を適用すると，適用しなかった場合より適合率が14.1ポイント上がり，再現率が17.1ポイント下がり，F値が1.3ポイント下がることを示している．この場合F値は減少したが適合率を14.1ポイント上げているため，手法1は適合率において貢献度が高い手法である．「2.固有名詞抽出による手法」を適用した場合は，手法1ほど適合率は上がらない（+2.3ポイント）が再現率の減少が少なく（-0.2ポイント），F値が0.8ポイント向上するため，有効な手法といえる．「3.文字列照合による手法」を適用した場合は，適合率が0.5ポイント上がるが再現率が0.3ポイント下がり，F値には変化がなかった．手法3は精度の変化が小さく，他の2手法と重複しないnot-is-a関係をほとんど判定できないといえる．しかし，再現率より適合率を重視する場合は有効である．カテゴリ‐記事間における全ての手法を組み合わせた時と，各手法を除いたときの精度比較を表の下表に示す．カテゴリ‐記事間で「1.意味属性分類による手法」を適用した場合は，カテゴリ間と同程度適合率が向上するが，再現率の減少が7.2ポイントと少ないためF値が向上する．「2.固有名詞抽出による手法」を適用した場合は，カテゴリ間と同様で，手法1ほど適合率は上がらない（+1.9ポイント）が再現率の減少が少なく（-0.9ポイント），F値が0.4ポイント向上するため，有効な手法である．「3.文字列照合による手法」を適用した場合は，2,500件の評価データにおいて，他の2手法と重複しないnot-is-a関係が1件も存在しなかった．カテゴリ‐記事間において，「3.文字列照合による手法」のみで判定できるis-a関係は非常に少ないといえる．この結果は，Wikipediaにおいて，普通名詞かつ意味的に近い単語対はもとからあまりリンクしないことを示しているといえる．各手法のみで抽出できたカテゴリ間，カテゴリ‐記事間のnot-is-a関係のリンクの例を表に示す．表で示すように，手法1では様々な種類の単語対をnot-is-a関係とみなせているため，最も適合率に貢献できている．しかし手法1では，意味的に近い単語対がnot-is-a関係になる場合は判定できないため，手法2，3が必要となってくる．手法2では，地名，創作物名，組織名など固有名詞のカテゴリ名が多い意味属性で貢献度が高かった．特に多かったのは，県名←市名のようなpart-of関係，雑誌名と掲載漫画名の関係，企業名とその関連企業名の関係である．手法3のみで判定できるnot-is-a関係は少ないが，普通名詞で意味的に近い単語対のnot-is-a関係の判定の際に有効である．一方，本手法によるnot-is-a関係の判定誤りを見たところ，誤りの主な原因は以下の3種類であった．意味属性分類を誤った場合固有名詞抽出を誤った場合3種類のis-a関係判定手法の精度が100%でも判定できないis-a関係の場合各誤り原因による，適合率を下げる誤り例と再現率を下げる誤り例を表，表に示す．本手法では，「日本の内閣総理大臣（人）←内閣総理大臣夫人（人）」のように，親名が普通名詞で親子が意味的に近く，is-a関係判定手法「3.文字列照合による手法」が適用できなかった場合に，not-is-a関係をis-a関係としてしまう（表の3つ目の表）．また，「チュニジアの世界遺産（具体物）←イシュケル湖（地形）」のように，親子の意味属性が違うis-a関係をnot-is-a関係としてしまう（表の3つめの表）．しかし我々は後者の誤りは問題ないと考える．なぜなら，もし「チュニジアの世界遺産（具体物）←イシュケル湖（地形）」をis-a関係とみなしてしてしまった場合，「イシュケル湖」を上位に辿ったときに最上位カテゴリ``具体物''につながってしまうからである．オントロジーにおけるis-a関係は，先祖‐子孫でも成り立たなければならないので，ここでは両者をnot-is-a関係と判定してしまったほうが結果として適切となる．</subsection>
  <section title="関連研究"/>
  <subsection title="Wikipediaからis-a関係を抽出する研究">PonzettoandStrubePonzettoは，英語Wikipediaのカテゴリ間のリンクからis-a関係とnot-is-a関係を抽出する手法を提案している．桜井らSakuraiは，PonzettoandStrubeの手法の一部を利用した手法に独自の手法を加え，日本語Wikipediaに対し，カテゴリ階層からis-a関係のオントロジーを抽出する手法を提案している．玉川らTamagawaは桜井らの手法に加え，カテゴリ名とInfoboxテンプレートを文字列照合する手法によりさらに多くのカテゴリ間のis-a関係を抽出している．また，記事中から「分類」や「種類」といった語を含む節見出しと箇条書きの対をis-a関係として抽出している．これらの手法はis-a関係のリンクの抽出に文字列照合を用いるため，適合率は高いが再現率が低い．一方提案手法では，意味属性分類や固有名詞抽出などを用いてnot-is-a関係を判定することにより，文字列照合では抽出できないis-a関係を抽出できた．次に隅田らの研究及びその成果が利用されている鳥式改と比較を行う．隅田らは，Wikipediaの記事中の箇条書き構造を利用してis-a関係の単語対を獲得する研究を行った．彼らは初めに，節見出しとその下位の節見出し，節見出しとその下位の箇条書きをis-a関係の単語対の候補とし，SVMによる分類器でフィルタリングを行ってis-a関係の単語対を獲得している．これを2007年3月の日本語Wikipediaに適用した結果，135万対の上位下位語対を精度90%で獲得できたとしている．これに対し本手法では，（隅田らが抽出対象としたWikipediaの記事構造ではなく）Wikipediaのカテゴリ階層から抽出を行い，カテゴリ間においては95.3%の精度（再現率96.6%）で3.4万件，カテゴリ‐記事で精度96.2%（再現率95.6%）で42万件をオントロジー化することに成功した．両手法は抽出対象が異なるため直接の比較はできないが，隅田らが論文で報告しているように隅田らの手法で精度，再現率を共に95%以上にするのは不可能であり，Wikipediaからの上位下位関係抽出性能としては我々の提案手法に優位性がある．さらに，隅田らの手法で獲得した上位下位関係は局所的であり，これを階層化することでオントロジー化する（もしくは既存のオントロジーに連結する）ためには多くの手作業によるクリーニングを要するだけでなく，場合によって上位下位関係を詳細化する必要がある．一方，本手法では最初から階層化されたオントロジー構築を目指し，そのための手法を高精度で実現する手法を提案した．以上の比較から，本提案手法は隅田らの手法に対して一定の有用性を持つと考える．</subsection>
  <subsection title="既存のオントロジーのカテゴリにWikipediaのカテゴリを結合する研究">Suchaneketal.はYAGOにおいて英語Wikipediaのカテゴリを英語WordNetのクラス(synset)の下位クラスとして統合することにより，高精度なオントロジー構築を試みている．YAGOは英語WordNetに英語Wikipediaを統合する手法だが，カテゴリ名が複数形であれば概念を表すカテゴリになりやすい，というような英語依存の手法を利用しているためそのままでは日本語Wikipediaに適用できない．そのため小林らKobayashiは，YAGOとは異なる手法で，日本語語彙大系とWikipediaを統合する手法を提案している．彼らは語彙大系の意味属性に対してWikipediaのカテゴリ名と，そのカテゴリの下位記事の定義文からとれる上位語が語彙大系のインスタンスに文字列照合した場合，カテゴリ‐記事の対を語彙大系の1つ下位に接続している．小林らKobayashi2は，is-a関係の記事の手法を用いている．の割合が閾値以上のカテゴリを上位概念カテゴリとみなし，上位概念カテゴリと全ての下位記事をis-a関係として抽出している．これらの手法では，Wikipediaのカテゴリ階層の情報が失われてしまう．そこで我々は，小林らKobayashiの手法と桜井らSakuraiの手法を組み合わせ，語彙大系の下位にWikipediaから抽出した部分的な階層構造を接続した．この手法は，Wikipediaのカテゴリ階層の情報をオントロジーに組み込めている点で上記の2手法と異なる．しかし上位階層に既存のオントロジーを用いているため，Wikipediaの上位のカテゴリ階層がオントロジーに組み込めないという問題がある．またこれらのように既存のオントロジーにWikipediaを接続する手法では，is-a関係のリンクの抽出や既存のオントロジーの接続に文字列照合を用いるため，適合率は高いが再現率が低い．本手法では最上位カテゴリ（意味属性）を独自に設定し，機械学習による分類器でカテゴリと記事を意味属性に分類することで，既存のオントロジーのインスタンスに文字列照合しないWikipediaのカテゴリと記事もオントロジーに組み込めた．</subsection>
  <subsection title="既存のオントロジーのカテゴリにWikipediaの記事を分類する研究">Wikipedia中の単語を関根らの拡張固有表現階層のカテゴリに分類する研究に，渡邉らWatanabe，杉原らSugihara，藤井らFujiiの研究がある．渡邉らは，CRFを用いて，Wikipediaの記事中の箇条書き構造になっている単語を関根の拡張固有表現階層のカテゴリに分類している．杉原らSugiharaは，Wikipediaの記事の見出し語を関根の拡張固有表現階層のカテゴリに分類する手法を提案している．記事のカテゴリ情報を利用して学習を行い，one-vs-rest法で記事の固有表現クラスを一意に決定する．ここでカテゴリ情報として，Wikipediaのカテゴリ階層構造の最上位のカテゴリである「主要カテゴリ」ページから対象ページまでの最短パス上にあるカテゴリ名を素性として用いている．藤井らは，固有名詞表現抽出のための素性作成を目的とし，杉原らと同じ手法でWikipediaの記事の見出し語を関根の拡張固有表現階層のカテゴリに分類している．ただし，杉原らの設定した素性に加え，記事の第一文の形態素も用いている．これらの手法と提案手法における記事の意味属性分類を比較した結果，提案手法のほうが高精度な記事分類ができることがわかった．提案手法では，記事に付与されたカテゴリの意味属性を素性に用いたり，定義文からとれる上位語や語彙大系を用いて素性の単語を抽象化したり，is-a関係の記事を持ちやすいカテゴリ（上位概念カテゴリ）を判定したりすることで，高い適合率と再現率が実現できたためだと考えられる．</subsection>
  <subsection title="Wikipediaからオントロジーを構築するその他の研究">Bizeretal.BizerはWikipediaの記事中にあるInfobox，カテゴリなどの半構造化された情報からRDFトリプルを抽出し，DBpediaとして公開している．DBpediaは他のオントロジーであるYAGOなどと関連づけられている．桜井らSakuraiや玉川らTamagawaもInfoboxを用いてInfoboxトリプル（インスタンス‐プロパティ‐プロパティの値）を抽出する研究を行っている．中山らNakayamaは，Wikipedia中の記事間のリンク構造を解析することで単語の意味関係を抽出する手法を提案している．中山らは記事間のリンク数や間接的にリンクしている場合のリンクの距離などを用いて記事から重要文を抽出し，重要文を構文解析することで単語対とその意味関係を抽出している．提案手法では，これらの関連研究で用いたInfoboxや記事間のリンク関係は利用せず，カテゴリ間やカテゴリ‐記事間のリンクのみを利用してオントロジーを構築した．しかしこれらの知識を用いることでオントロジーを拡張したり精度を向上させたりできる可能性がある．</subsection>
  <section title="結論">本研究では，Wikipediaのカテゴリ階層と記事を利用し，``人''，``組織''，``施設''，``地名''，形''，``具体物''，``創作物''，``動植物''，``イベント''の9種類の意味属性を最上位カテゴリとした，1つに統一されたis-a関係のオントロジーを構築した．我々はカテゴリ間とカテゴリ‐記事間のis-a関係を高再現率で判定することを目的とした場合，is-a関係を判定するよりnot-is-a関係を判定するほうが容易であると考えた．そこで本手法ではカテゴリ間とカテゴリ‐記事間のnot-is-a関係のリンクを高い精度で削除し，残ったリンクをis-a関係とみなすことで，多くのカテゴリと記事を組み込んだいくつかの階層を生成した．リンクのnot-is-a関係を判定するために，以下の3つの判定手法を用いた．意味属性分類による判定固有名詞抽出による判定文字列照合による判定3手法のいずれかでnot-is-a関係と判定されなかったカテゴリ間，カテゴリ‐記事間のリンクをis-a関係とした．is-a関係のリンクでつながるカテゴリと記事の階層を1つの階層と考えると，同じ意味属性のカテゴリと記事からなる部分的な階層が複数できることになる．新たに定義した9種類の意味属性からなる深さ1の上位階層の下位に接続することで，1つに統一された階層を再構成した．3手法を組み合わせた結果，9種類の意味属性に限定したis-a関係の判定精度は，カテゴリ間で適合率95.3%，再現率96.6%，is-a関係数50,396件，カテゴリ‐記事間で適合率96.2%，再現率95.6%，is-a関係数834,474件であった．構築したオントロジーは，Wikipediaの全カテゴリの84.5%（約34,000件），全記事の88.6%（約422,000件）が組み込まれていることから，非常に大規模なWikipediaのオントロジーが構築できたといえる．一方Wikipediaの全てのカテゴリ間とカテゴリ‐記事間でのis-a関係の精度は，カテゴリ間で適合率95.7%，再現率81.9%，カテゴリ‐記事間で適合率96.6%，再現率91.9%であった．カテゴリ間のis-a関係の判定精度は，比較手法より適合率が1.9ポイント低下したが，再現率は24.2ポイント向上した．またカテゴリ‐記事間のis-a関係の判定精度は，比較手法より適合率は3.6ポイント高く，再現率も24.0ポイント高かった．上位のカテゴリに語彙大系を用いずに9種類の意味属性を用いたことで，比較手法より多くのカテゴリと記事をオントロジーに組み込めた．提案手法では3種類の手法を用いてnot-is-a関係を高い精度で削除することでis-a関係を判定するという手法により，比較手法とほぼ同程度の適合率で，比較手法よりも圧倒的に高い再現率でis-a関係を判定できた．document</section>
</root>
