<?xml version="1.0" ?>
<root>
  <title>属性語のWeb</title>
  <jabstract>本論文では，広範な概念クラスの属性語を日本語のWeb文書から獲得する手法を提案する．提案する手法は，Web検索を用いて得られた候補の単語を言語的パターン・HTMLタグ・単語の出現の統計量から計算されるスコアで順位付けする簡単な教師無しの獲得手法である．また，本論文では，獲得された属性語を人手で評価するため質問解答可能性に基づく評価手順を提案する．この評価手順に従い22個の概念クラスに関して提案獲得手法を人手で評価し，提案手法により属性語を高精度で獲得可能であること，また，スコアに用いた各手がかりが実際に性能に貢献していることを確認した．</jabstract>
  <jkeywords>属性獲得，Web，評価手法</jkeywords>
  <section title="はじめに">我々の物の理解の仕方に関する知識は多くの自然言語処理タスクにおいて重要である．物をどのような観点から理解するかということを述べる属性の知識はその一つである．例えば，「車」の属性は「重量」，「エンジン」，「ハンドル」，「操作感」，「製造会社」などである．言い換えれば，属性とは，我々があるものについて知りたいときにそれに対する値（本論文の言い方では，「答え」）が知りたくなるような項目である．従って，属性知識の応用としては，情報の要約，質問応答などが考えられる．また，最近では機械学習や単語クラスタリングの際の素性として有用であることも示されている．このような属性知識は，WordNetのように人手で作成することも可能であるが，作成コストとカバレッジが問題となる．本研究では，これらの問題を解決するため，与えられた概念クラスの属性語をWebから自動獲得する手法を提案する．属性語の自動獲得を目指した研究はそれほど多くはない．既存研究には，質問応答を念頭において〈対象，属性，値〉という事実の集合を獲得しようとするものや,情報要約の際に副産物的に属性的な単語を生成するものなどがあるが，概念クラスの属性語を明示的に獲得し，その精度を詳しく評価したものはなかった．我々は，属性知識の段階での問題の性質を明らかにし，属性語をあらかじめ高精度で獲得しておくことが，最終的には質問応答などのために値まで獲得する場合などでも大きく役に立つという考えから，属性語の獲得に焦点をしぼる．属性語は語彙知識の一つと言える．これまで語彙知識の自動獲得としては，上位下位関係の獲得，全体部分関係の獲得，言い換え関係の獲得などが試みられてきた．上位下位関係や全体部分関係など名詞間の関係の獲得に関しては，目的の関係を特異的に示す言語的あるいは書式的なパターン，その他の統計的な手がかりを相補的に用いて獲得するアプローチがある程度の成功をおさめている．以下で概要を述べるが，本研究で提案する獲得手法もこの範疇に入る．本研究で提案する獲得手法では，クラスC（例えば，「車」）の属性語を獲得するために，まず，Cを含む文書をWebから検索エンジンを用いて発見し，収集する．収集された文書から属性語の候補を抽出し，それらを言語的パターン・HTMLタグ・単語の出現に関する統計値を利用したスコアに従って順位付けし，スコアの高い候補を属性語として出力する．このスコアは，属性語に関する我々の観察が反映されるように設計されている．前述したように，言語的パターンは他の語彙知識獲得手法でも用いられてきた．特に，本研究で用いる言語的パターンは，「CのA」という助詞「の」を介したパターンである（ただし，Aは属性語候補）．このパターンは，直感的に有用と考えられ，関連研究であるでも同様のパターンが用いられている．また，属性知識の特殊な場合である全体部分関係を英語を対象として獲得したでも「AofC」という類似したパターンが用いられている．この獲得手法の新規性は，広範なクラスに対して属性語を獲得することを目的としてWebを情報源として用いること，その際，クラスと関連の高い文書に注目するためWeb検索を用いること，それにともない，HTMLタグといったWeb特有の手がかりを利用できることにある．ただし，手法はできるだけ簡素になるようにした．標準的な言語パターンを用い，頻度やdf・idfなどの単純な積をスコアとして用いる．また，正解データの作成はコストがかかることから，のような教師付き学習を用いるアプローチではなく，教師無しで獲得することを目指した．実験では，この提案手法で各クラスに対して上位20個の属性語を出力した時に，約73%の適合率で厳密な属性語が獲得でき，約85%の適合率で緩い属性語が獲得できることを示す．属性語獲得の研究では，属性語の定義，言い換えれば，獲得された属性語に対する評価基準が確立されていないことも問題になる．本研究では，質問解答可能性という考えに基づいた言語テストによる評価手順を示すことで，この問題の解決を目指す．属性語を定義するには，例えば「もしAが，oをクラスCに属するインスタンスとした場合にv=A(o)のように関数的に働き，vがoをクラスCの他のインスタンスから区別するのに重要であるならば，AはCの属性語である」のように分析的に定義することも可能であるが,このような分析的な定義は人手の評価で直接用いるには複雑で難しく，評価結果の信頼性も低くなると予測される．そこで，本研究では，いくつかの簡単な言語テストを用いた評価方法を提案する．言語テストは，評価者の直感を利用したYES-NOテストであり，評価者の負担が軽減され評価結果の信頼性も向上すると考えられる．提案する評価方法は「属性とは答えが知りたくなるような項目である」という我々の元々の直感を反映したもので，「その値を問うような質問文を生成でき，それに対して答えが存在するならば属性語である」という考え（質問解答可能性）に基づく．本研究ではこの考えに基づいた評価手順を設計する．属性語の判定のための言語テストはこれまでにも提案されている．例えば，Woodsは「theAofoisv」という表現が可能かどうかで判定できることを述べている．しかし，この言語テストを自動獲得された属性語の評価に実際に適用した研究はこれまで行われていない．また，本文で詳しく述べる通り，この基準だけでは，特に日本語に置き換えたときに，重要でない語が属性語と判定されてしまうなどの誤判定が発生する可能性がある．本研究で提案する判定方法は，質問解答可能性の考え方に基づいた言語テストによって，より重要な属性語に焦点をあてるとともに，いくつかの補足的な言語テストを組み合わせることで，より正確な判定を目指したものである．最後に，いくつかの文献が指摘する通り，属性には「重さ」などの性質，「エンジン」などの部分，「操作感」などのtelic的属性，「製造会社」などのagent的属性など多くのサブタイプがある．しかし，これらの区別が無いとしても，属性は前述した応用で有用であり，また，区別のための評価基準は複雑で安定した評価が困難になるということから,本研究ではこれらの区別は無視することにした．本論文の構成は以下の通りである．節,で，属性語獲得のための提案手法の詳細を述べる．次に，節,で属性語の評価基準とそれに基づく評価手順を示す．節,で，提案手法を提案評価手順で評価した実験の結果を示し,節,でいくつかの考察と今後の課題を述べる．</section>
  <section title="獲得手法">この節では，属性語の自動獲得手法の詳細を述べる．</section>
  <subsection title="属性語の性質に関する観察">はじめに，獲得手法の基になった属性語の性質に関する我々の観察を示す．具体的には，属性語には以下に挙げる三つの性質があることが分かった．以下では，これらの性質を利用した獲得手法を提案する．</subsection>
  <subsection title="属性語候補の獲得">提案手法では，まずはじめに，属性語の候補となる語を以下のようにWebから収集する．クラスCの属性語を獲得する場合，クラス語Cを含む文書をWeb検索エンジンを用いて求め，ダウンロードする．本研究ではこの文書集合を局所文書集合(localdocumentset)と呼び，LD(C)と表記する．このような収集の方法は前節で述べた属性語の性質（3）を反映していると考えられる．次に，このLD(C)中の全ての名詞を取り出し，これを属性語の候補とする．複合語が属性語になる可能性もあるが，簡単のため，本研究では一語からなる属性語のみを扱うことにした．</subsection>
  <subsection title="属性語候補の順位付け">前節の方法で得られた属性語候補は，節,で述べた属性語の性質のうち性質（3）を考慮しているとはいっても，属性語でない語も多く含んでいる．そこで，属性語候補を他の性質も反映したスコアによって順位付けし，上位の語のみを属性語として出力するようにする．本研究で提案するスコア関数はいくつかのサブスコアを掛け合わせた以下の形をしている．Aは属性語候補であり，Cはクラスである．n(C,A)とf(C,A)は言語的パターンに関するサブスコアで性質（1）を反映している．t(C,A)はHTMLタグに関するサブスコアで性質（2）を反映している．dfidf(C,A)は単語の出現に関する統計値によるサブスコアで，性質（3）を反映したものである．これらのサブスコアを掛け合わせることで，正しい属性語に高いスコアが与えられることを期待している．サブスコアの組み合わせ方には，他にいくつも選択肢が考えられるが，ここでは最も単純な方法の一つを選択した．以下では，これらのサブスコアの詳細を述べる．</subsection>
  <subsection title="サブスコアの詳細">まず，n(C,A)は性質（1）を反映したスコアである．性質（1）で述べたように，属性語の獲得には助詞「の」を介してCがAに係る言語的パターン「CのA」が大きな手かがりになると期待される．従って，n(C,A)としてはCとAが「の」を介して係った回数などが考えられる．本研究では，n(C,A)としてCとAが局所的文書集合LD(C)中で表,に挙げたパターンのいずれかで共起した回数を用いる．「CのA」の係り受けの回数は「CのAP」（Pは助詞あるいは句読点）というパターンの出現回数である程度近似できると考えられるからである」（Nは名詞）のようにAが複合名詞の一部になっている場合を間違ってカウントしてしまうことを防ぐことができる．．f(C,A)は33年分の係り受け解析済みの新聞記事中でCとAが「CのA」という係り受けで共起した回数である．n(C,A)に加えてf(C,A)を用いる理由は，マッチさせる文書の量を増やして信頼性の高いスコアを得るためである．本研究を進める過程で，我々が用いたものも含め商用の検索エンジンではクエリにマッチする文書のごく一部のURL（最大で一千文書程度）しかユーザに提示しないという制限があり，現実にはクラス語を含む文書を大量に収集できないという問題があることが分かった．解決策としては，表,で挙げたパターンでのフレーズ検索のヒット件数を用いることも考えられたが，実験で述べるように属性語候補の数は2万程度になり，商用検索エンジンに大きな負担をかけることになる．そこで，本研究では我々が既に持っていた大量の係り受け解析済み新聞記事を用いることにした．将来的には，検索結果の取得に制限のない独自のWebリポジトリを構築し，大量のWeb文書から共起回数を求める予定である．t(C,A)はAがLD(C)中にHTMLタグで囲まれて出現した回数，より正確には，「!&lt;!tag1!&gt;!A!&lt;!tag2!&gt;!」という形式でAが出現した回数である．ただし，回数をカウントする際には，HTMLタグ間の文字数（つまりAの長さ）は最大でも20と制限する．長い文字列は単語ではなく文になっていることが多く，ほとんど属性にはなり得ないからである．また，ここでの!&lt;!tag1!&gt;!と!&lt;!tag2!&gt;!は開始タグ（!&lt;A&gt;!など）・閉じタグ（!&lt;/A&gt;!など）のどちらでもよいことにする．例えば，図,のHTML文書では，「タイ風・カレー」「材料」「スパイス」「コリアンダー，クミン」「作り方」などの語がカウントされる．このスコアは属性語の性質（2）を反映したもので，Web文書中で強調表示される語，改行などによりフォーマットされる語，列挙や表の要素になる語などに高い値を与えることを目的としている．最後に，dfidf(C,A)は性質（3）を反映したスコアである．このスコアではAを含む文書に多く出現し，しかも，特徴的な語（ストップ語のような普遍的な語でない語）に高い値を与えることが目標である．本研究では，上位語と下位語の関連度を測るために新里らが用いたスコアを参考にして，以下の式で計算されるスコア関数を用いることにした．[dfidf(C,A)=df(A,LD(C))idf(A),;;;idf(A)=|G|df(A,G).]ここで，df(A,x)は文書集合x中でAを含む文書の数を表している．Gは大域的文書集合(globaldocumentset)と呼ばれるランダムに収集された大量のWeb文書であり，Web全体を近似した文書集合である．これを用いてidfを計算することによりWebにおける特徴的な語を知ることができる．</subsection>
  <section title="属性語のための評価基準">自動獲得された属性語の良さを評価するには，何らかの定まった評価手順が必要になる．本研究では，我々が質問回答可能性と呼ぶ基準に基づいた評価手順を提案する．質問回答可能性とは，ある語に関して，その値を問う質問文を生成でき，答えが存在する，ということである．我々は，質問回答可能性が成り立つならばその語は属性語であるという仮定をした．これは，我々の属性の利用方法（QAや要約）を考えると，直感的に妥当な仮定だと思われる．例えば，「車」について考えると，「この車の製造会社はどこか？」といった質問文が可能であり，誰かが「A社」と答えることができる（質問回答可能性が成り立つ）ので，「製造会社」は属性語と考えても良いということになる．ある人が「車」について知りたいとき「製造会社」が何であるかは重要な情報であるので，これは妥当であろう．提案する評価手順では，評価者は最大で4つのYES-NO質問に答えることで判定を行う．これら4つの質問とは，評価者に提示される順に，下位語テスト（節），QAテスト（節），接尾拡張QAテスト（節），一般性テスト（節），である．QAテスト・接尾拡張QAテストの2つが，質問回答可能性を直接用いたテストである．下位語テスト・一般性テストは，QAテストを補強するためのものである．評価手順の全体の流れは，図,に示すようになる．以下の節では，各テストの詳細を説明する．</section>
  <subsection title="QAテスト">実際の順番とは異なるが，まず，本研究の提案の中心的な判定手順である質問回答可能性テスト（QAテスト）から説明する．我々は，前述した質問回答可能性基準に従って，図,に示すQAテストを設計した．このQAテストについて，いくつか注意点がある．第一に，属性語に対する値は実際にはクラスのインスタンスに対して定義されるため，このQAテストでは，Cを「この」で限定することで（ある）インスタンスを指すようにして質問が不自然になるのを防いでいる．また，質問文中でCの後にスペースを入れることで評価者が適切な係り受け（「このC」がAに係る）を想像できるようにした．第二に，Aに対する適切な質問の種類をあらかじめ（自動で）決めることは難しいので，テストでは図,に挙げたように考えられる全ての種類の質問を生成し，そのいずれかが許容できるかを判定するようにした．第三に，質問は文法的に正しいだけでなく「常識的に自然」でなければならない．本研究の実験では，この「自然」さを「その質問が通常の会話の第一発話としてあり得るか」で判断するようにした．我々の考えでは，属性語はインスタンスを述べる際に重要なものでなければならない．そこで，この「自然」さを満たす属性がそのような重要な属性語であるという仮定を置いた．例えば，おそらく全ての「会社」は「机」を所有しているが，我々の考えでは「机」は「会社」の属性語ではない．「この会社の机は何ですか？」といった質問は文法的に正しいけれども，「会社」についての通常の会話の第一発話としては不自然であるから，この「自然」さのチェックによって「机」が属性語になるのを防ぐことができる．重要な点は，Woodsの言語テスト（「theAofoisv」が可能か）だけでは「thedeskof(=usedin)Com-XisDesk-Y」のように言えてしまうので，「机」を棄却することができないことである．また，質問は質問者が重要であると考えることについてするのであるから，質問文を判定に用いることでより重要さを重視することができる．最後に，質問への答えは必ずしも言語で表現できなくてもよい．例えば，「地図」「姿」「設計図」などに対する値は言語では表現できず，他の手段で表現されるが，これらも重要な属性語であることは明らかである．Webページには言語以外の表現（画像，音声など）を含めることができるため，それらを値とする属性への言及も増えると考えられる．そのため，Webから属性語を獲得する場合，そのような属性語も獲得される可能性が大きい．従って，質問への答えが言語に限らないことをあらかじめ評価者に明確にしておいた．</subsection>
  <subsection title="接尾拡張QAテスト">獲得された属性語のいくつかは，正しいと思われるにもかかわらず前節のQAテストで棄却されてしまうことがある．大きな理由の一つは，獲得された属性語が，実際に意味している属性の標準的な属性語とは異なる文字列として獲得される場合があることである．これは，日本語が省略的であること，我々の獲得手法が実際にコーパスに現れた表層形を処理して獲得すること，また，1単語の属性語しか獲得しないことなどに起因している．例えば，下の例文中で「生徒」は属性「生徒数」の意味で用いられている．このような文を手がかりにすると，提案手法では「生徒」が「学校」の属性語として獲得される可能性が高い．一部が省略されている属性語でも，実際に（a）のような文で使用されることから応用の面で有用であると考えられるので，正しいと判定されるのが我々の立場では好ましい．ところが，省略があると前節のQAテストで棄却されてしまうことがある．例えば，上の「生徒」を判定する場合，これが「生徒数」を意味しているときには,QAテストの質問の中では「この学校の生徒はいくつ？」が一番適当であるが，これは，人数に「いくつ」は使えないため文法的ではない．そのため，「生徒」は棄却されることになる．日本語では，省略された部分のほとんどは属性語の後に適切な接尾辞を付加するか，「の＋名詞化形容詞・形容動詞」を付加することで復元することができる．例えば，上の例では接尾辞「数」を付ければ良い．そこで，最初のQAテストで棄却された場合には，適切な付加を行って属性語を拡張した上で，それを評価すべき語としてQAテストを再度行うようにした．上の例では，「生徒数」をQAテストで再び評価する．実際のテストで許される拡張は，図,に示した通りである．可能な接尾辞については，図,に示した適用範囲が広いと思われるものに限定し，これでカバーできないものは，名詞化した形容詞・形容動詞を適切に付加してもらうことで対処した．このテストを，接尾拡張QAテストと呼ぶことにする．</subsection>
  <subsection title="一般性テスト">我々の当初の目的は与えられたクラスに対する属性語を獲得する，つまり，クラスの全てのインスタンスに共通の属性語を獲得することであった．しかし，評価者によっては，全てのインスタンスに共通の属性語ではないが興味深い属性語を正しいものとして判定することが予備実験において分かった．例えば，クラス「映画」に対する「字幕」や「車」に対する「後席」などである．全ての映画に字幕がある訳ではないので，厳密には「字幕」は映画の属性語ではない（例えば，日本では字幕はほとんど外国映画に対して付与される）し，全ての車に後席がある訳ではないので厳密には「後席」は「車」の属性語ではない．しかし，厳密に属性語ではなくてもそれを持つようなインスタンスの割合・重要性が高い場合には，正しいと評価される傾向があることが推測される．このような属性語はその割合・重要性から実用的に有用であると考えられる．このような全てのインスタンスに共通する属性語とそうでない属性語の性質を調べることができるように，QAテストで受理された属性語に関しては，それがそのクラスの「ほとんど全て」のインスタンスに共通するかを最後に判定するようにした．このテストを一般性テストと呼ぶ．一般性テストで受理された属性語を「厳密な属性語」と呼び，QAテストで受理されて一般性テストで棄却された属性語を「非一般属性語」と呼ぶ．また，「厳密な属性語」と「非一般属性語」を合わせて「緩い属性語」と呼ぶことにする．実験では，厳密な属性語としての獲得精度，緩い属性語としての獲得精度を調査比較する．</subsection>
  <subsection title="下位語テスト">最後に，下位語テストについて説明する．我々の提案手法では，誤って獲得された属性語の中にクラスCの下位語やインスタンスと考えられる語が多く含まれることが分かった．もし，評価対象のAがCの下位語やインスタンスなら，それはCの属性語にはなり得ないが，「CのA」という表現が自然になってしまうためQAテストで混乱を引き起こしやすい．例えば，「アニメ」のインスタンスとして「ドラゴンX」があるとすると，「アニメのドラゴンX」という表現は自然であり，「ドラゴンX」は明らかに「アニメ」の属性語でないのにQAテストで誤って受理されてしまう可能性がある．そこで，QAテストの前に図,で示される下位語テストによりAがCの下位語やインスタンスであるかを判定し，下位語やインスタンスでない場合にだけQAテスト以降に進むようにした．逆に，AがCの上位語である場合には，上位語であっても必ずしもAが属性語でないとは言えないのでそのようなテストは行わない．</subsection>
  <section title="実験">この節では，提案獲得手法を前節で述べた評価手順で評価した実験について述べる．</section>
  <subsection title="実験設定">まず，評価のために32個のクラスを用意した．Webに現れるようなクラスで評価を行うため，この32個のクラスは，新里らの上位下位関係獲得手法によってWebから獲得された共通の上位語をもつ単語クラス1,589個の中から選んだものであり，このときの上位語をクラス語として用いる．単語クラスに含まれる下位語は，クラス語の意味が曖昧な場合に意味を特定するための情報として評価者が参照できるようにした．また，我々の目的は上位下位関係獲得の評価ではないので，上の獲得手法でうまく獲得されている単語クラスを選んだ．さらに，この32個のクラスからランダムに22個のクラスを選び（表），評価の対象とした．提案獲得手法で用いられる局所文書集合LD(C)の収集にはWeb検索エンジンであるgoo(http://www.goo.ne.jp)を用いた．LD(C)の大きさはクラス平均で857文書(URL)であった．また，このLD(C)から得られた属性語候補はクラス平均で約2万語であった．サブスコアdfidf(C,A)の計算に必要な大域文書集合GとしてはWebからランダムに収集した10^6文書を用いた．各クラスについて提案手法および後で述べる比較手法による上位50個の属性を出力し，評価対象とした．効率的に評価するため，上記の全ての手法による属性語を一つの集合にまとめ（重複があれば取り除く），評価の公平性を保つためランダムに並べ替えた．このように重複を除くと，評価すべき属性語は全てのクラスで合わせると3,678個だった．これらの属性語を，提案評価手順を実装したGUIツールを用いて4人の評価者がそれぞれ4日間かけて評価した．この評価結果から，それぞれの手法の上位50個の出力に対する評価が生成できる．この実験に関して，評価者間の一致度を示すkappa値は，厳密な属性語の評価としては0.533，緩い属性語の評価としては0.593となり，両者とも「中程度」の一致を示した．</subsection>
  <subsection title="提案手法の精度">図,に提案獲得手法による緩い属性語としての精度，図,に厳密な属性語としての精度を示す．それぞれの図において左のグラフは各評価者（Evaluator1-4）による適合率，右は評価者に関する平均・3人一致（3-consensus）・4人一致（4-consensus）の適合率である．グラフのX軸は上位何個まで集計するかを，Y軸はそのときの適合率を表している．大まかに言って，グラフのX軸は再現率に対応する．上位n個における評価者kによる適合率P_kは，Cを評価に用いたクラスの集合とすると,[1n|C|_CC（）]で計算される．評価者に関する平均の適合率は，1|K|_kKP_kで計算される（Kは評価者の集合）．また，M人一致の適合率は,[1n|C|_CC（）]で計算される．グラフをみると，適合率自体は評価者に大きく依存するが，提案手法の順位付けと適合率の間の正の相関は共通して存在することが分かる．これは提案手法の妥当性をある程度示していると言える．また，緩い属性語としての評価と厳密な属性語としての評価を比べると，厳密な属性語の方が獲得が難しいことが分かる．加えて，厳密な属性語としての評価（つまり，一般性テスト）は評価者によって大きく傾向が違うことが分かる．緩い属性語の評価の場合にはプロットはほとんど交差していない．これは評価者間で許容度の差はあっても評価の傾向は変わらないことを示している．一方，厳密な属性語の場合には，プロットが交差しており,評価者によって評価の傾向が異なることを示している．緩い属性語の場合に一番許容的であった評価者3（図中，Evaluator3）が厳密な属性語の場合にはそうでもない点などは興味深い．これらのことから，一般性テストは他のQAテストなどに比べて一致を得るのが難しいテストになっていることが推測され，先に示したkappa値の違いもそれを示唆している．提案手法による獲得精度はおおむね期待の持てるものである．どの評価尺度を採用するのが妥当かは難しい問題であるが,例えばで用いられた多数決基準（本実験の場合，3人一致）を用いるとすれば，提案手法は上位20個の属性語を出力した場合，緩い属性語は0.852，厳しい属性語は0.727の適合率で獲得できることになる．表,に，実際に獲得された属性語の上位20個をいくつかのクラスに対して示す．これらをみると，実際に興味深い属性語が獲得できていることが分かる．</subsection>
  <subsection title="各サブスコアの効果">次に，提案手法のスコア（式）における各サブスコアの効果を調べるため，式,から各サブスコアを除いたスコアを用いたときに精度がどの程度変化するかをみた．まず，評価者平均精度の変化でみると，全てのサブスコアに関して効果がある（各サブスコアを除く事で精度が低下する）ことが観察された．さらに，各評価者ごとにみると，評価者によらず似た傾向の精度の変化があることが分かった．これは，前の実験で示したように評価自体は評価者によってかなり異なる事を考えると興味深い．この点をより詳しく分析するため，各サブスコアを除いた場合に関して，評価者ごとに精度の変化を計算し，変化の評価者に関する平均・標準偏差などを求めた．図,はそのようにして求めた平均・標準偏差をプロットしたものである．このグラフから，全般的に，ほぼ順位にかかわらず，全ての評価者で効果があることが分かる．左のグラフで示された緩い属性語の場合を詳しくみると，f(C,A)とt(C,A)の効果が特に大きい．また，n(C,A)はf(C,A)と同様に効果はあるが絶対値は小さいことが分かる．これは，前述したように利用できる文書の量の差によるものと考えられる．dfidf(C,A)は，低ランクまででみると正の効果を示しているが，高ランク域（1位--5位）ではわずかではあるが負の効果になっている．右のグラフの厳密な属性語の場合にも，全般としては正の効果があることが分かる．しかし，効果の程度は全般に小さくなり分散も大きくなっている．特に，t(C,A)の効果は緩い属性語の場合に比べて大幅に小さくなっている．一方で，f(C,A)の効果は逆に大きくなっている．</subsection>
  <subsection title="局所文書集合収集のためのキーワードの比較">提案手法では，順位付けで用いられる局所文書集合を収集する際の検索エンジンに対するキーワードとしてクラス語を使用した．しかし，もし上位下位関係知識が利用できる場合には，クラスに属する下位語をキーワードとして局所集合を収集する事も可能であり，その場合に属性語の獲得精度がどのように影響されるかは興味深い問題である．そこで，この実験では提案手法のようにクラス語を用いる場合と下位語を用いる場合を比較した．実験で用いたクラスには，上位下位関係獲得手法により下位語が対応付けられているので，これを検索キーワードとして用いた．ここでは，収集された文書の質を比較するため，収集された文書から提案手法で収集された文書数とほぼ同数の文書をランダムで取り出して用いた．このようにして得られた局所文書集合を用いてスコア中のn(C,A)を計算する際には，Cの代わりに下位語Hを用いた場合に得られる頻度を全ての下位語について和をとってn(C,A)の値とした（つまり，n(C,A)=_Hn(H,A)）．他のサブスコアの値については提案手法と同じ値を用いた．図,に，前節の実験と同じ方法で緩い属性語と厳密な属性語について提案手法と比較手法の精度の差（差の平均標準偏差）を示す．負の差は比較手法の精度が提案手法に比べて悪いことを表す．従って，この結果から，少なくともこの設定では局所文書集合の収集にはクラス語のほうが適していることが分かる．</subsection>
  <section title="今後の課題">本研究では，提案手法によってある程度の高精度で属性語を自動獲得できることを示したが，本格的な応用のためには，獲得精度のさらなる向上が必要である．また，属性語の性質についても更なる考察が必要である．以下に挙げる点が，今後の課題として考えられる．</section>
  <section title="結論">本研究では，Webから言語的パターン・HTMLタグ・単語の統計量を手かがりとして属性語を獲得する手法を提案した．また，獲得された属性語を評価するための質問回答可能性に基づいた評価手順を提案した．この評価手順を用いて提案獲得手法を評価し，属性語を高精度で獲得できること，また，用いた各手がかりが精度に貢献していることを確認した．</section>
</root>
