<?xml version="1.0" ?>
<root>
  <title/>
  <author/>
  <jkeywords/>
  <section title="Introduction">PreferenceDependencyGrammar(PDG)isaframeworkforthemorphological,syntacticandsemanticanalysisofnaturallanguagesentences,mainlydesignedformanipulatingoneofthemostseriousissuesinnaturallanguageanalysis,i.e.ambiguitiesinsentenceinterpretations.Itrequiresthesuppressionofcombinatorialexplosion,thepropertreatmentofvariouskindsofknowledgesuchashypothesisgeneration,constraintandpreferenceknowledge,andtheintegrationofknowledgeineachanalysislevel.PDGadoptsthefollowingapproachfortheseproblems.[(a)]Utilizingmultiplekindsoflinguisticdatastructuressuchasphrasestructureanddependencystructuretotreatmorphological,syntacticandsemanticknowledgewithhighmoduleindependency.[(b)]Utilizingpackedshareddatastructureencompassingallambiguitiesateachlevelofsentenceanalysistosuppresscombinatorialexplosionwithoutpruning.[(c)]Everyinterpretationineachdatastructurehasmappingtooneormoreinterpretationsinotherdatastructures.Thisprovidesabasisforintegratingmulti-levelpreferenceknowledge(scores).[(d)]Incorporatinganoptimumtreesearchmethodforapackedshareddatastructurewitharcco-occurrenceconstraintstocomputethemostplausibleinterpretation(dependencytree)ofasentence.PDGadoptsthepackedshareddatastructuressuchasthe``HeadedParseForest'',the``FunctionalDependencyForest''andthe``SemanticDependencyForest''encompassingparsetrees(phrasestructuretrees),functionaldependencytrees(syntacticdependencytrees)andsemanticdependencytrees,respectively.PDGisaframeworkfordependencyanalysis.Asdescribedin,variousdependencyanalysismethodsareproposed.Somemethodsutilizelexicalizedphrase-structureparserswiththeabilitytooutputdependencyinformationandsomemethodsobtaindependencytreesdirectly.Inthispaper,parsersintheformercategoryarecalledphrase-structurebaseddependencyparsersandthoseinthelattercategoryarecalleddirectdependencyparsers.PDGisintheformercategorybecauseitutilizesalexicalizedphrase-structureparsertogenerateadependencyforestasdescribedbelow.arebasicallylexicalizedphrasestructureparsersandworkasdependencyparsersbyattachingafunctionforconversionfromaphrase-structuretoadependencystructure.Thedependencytreeforasentenceisgeneratedfromtheheadedphrasestructuretreeobtainedbythephrasestructureparser.Forexample,eachnonterminalsymbolanditschildconstituentsinthephrasestructuretreecorrespondtothedependencystructurethathasonegovernornode(thephraseheadofthenonterminalsymbol)anditsdependantnodes(thephraseheadsofthechildconstituents)in.Ontheotherhand,PDGgeneratesadependencystructurebasedonstructuremappinginformationingrammarrules.Thismechanismenablesgenerationofflexibledependencystructureswithdependencyrelationlabels.Forexample,PDGcanprovidephrasestructureruleswhichgeneratenon-projectivedependencystructureswhicharenotproducedbyandthemajorityofdirectdependencyparsersasdescribedinSection.Thephrase-structurebaseddependencyparsershaveapossibilitytoutilizethedescriptivepowerofthephrasestructurerulestoprescribethedependencystructures.Trainingcorporaandstatisticalinformationareusedforcomputingthemostappropriatedependencytreeinmanyparsers.Oneclassofparsersadoptsahistory-basedapproachinwhicheachtree-buildingprocedureusesaprobabilitymodelp(AB)toweightanyactionAbasedontheavailablecontext,orhistory,B.canberegardedashistory-baseddirectdependencyparserswhichchoosetheoptimumdecisionduringtheparsingprocessbasedoninformationobtainedfromthetrainingdata.Anotherclassofparsersgeneratesvariousdependencygraphsencompassingallpossibledependencytreesforasentenceandsearchesfortheoptimumtreebasedonpreferencescoresattachedtothedependencygraph.Thismethodiscalledthefull-parse-basedapproachinthispaper.Ingeneral,thehistory-basedmethodseemstobemoreefficientthanthefull-parse-basedmethodbecauseitmakesdecisionsbeforecompletingthefullparse.However,thehistory-basedmethodmayfailtoobtaintheoptimumsolutionbecauseitdoesnotutilizethefullparseinformation.PDGisclassifiedasafull-parse-basedmethodsinceitsearchesfortheoptimumtreeinadependencyforest.Thispaperfocusesonfull-parse-basedmethodsanddiscussessomeapproachestotheoptimumtreesearchindependencygraphsandproposesanoptimumtreesearchalgorithmforthedependencyforest,the``GraphBranchAlgorithm''.PDG(andthegraphbranchalgorithm)isanextensionofthesentenceanalysismethodbasedonthe``SemanticDependencyGraph''.Sectionformalizestheframeworkoftheoptimumtreesearchindependencygraphsandshowssometraditionalmethods.Sectioncomparestwoapproachesbasedonsemanticdependencygraphandthedependencyforest.Sectionsanddescribethegraphbranchalgorithmandtheexecutionexampleofthealgorithm,respectively.Sectionshowssomeexperimentalresultsforthecomputationalcomplexityandbehaviorofthegraphbranchalgorithm.</section>
  <section title="Optimum Tree Search in a Scored Dependency Graph"/>
  <subsection title="Basic Framework">Scoreddependencygraphsarewidelyusedaspackedshareddatastructuresrepresentingasetofdependencytrees.Figureshowsthebasicframeworkoftheoptimumdependencytreesearchinascoreddependencygraph.Ingeneral,nodesinadependencygraphcorrespondtowordsinthesentenceandthearcsshowsomekindoflabeledornon-labeleddependencyrelationsbetweennodes.Eacharchasapreferencescorerepresentingplausibilityoftherelation.Thewell-formeddependencytreeconstraintisasetofwell-formedconstraintswhichshouldbesatisfiedbyalldependencytreesrepresentingsentenceinterpretations.Apairofadependencygraphandawell-formeddependencytreeconstraintdefinesasetofwell-formeddependencytrees.Thescoreofadependencytreeisthesumtotalofarcscores.Theoptimumtreeisadependencytreewiththehighestscoreinthesetofdependencytreesdefinedbythedependencygraphandthewell-formeddependencytreeconstraint.</subsection>
  <subsection title="Dependency Graph">Dependencygraphsareclassifiedintosomeclassesbasedonthetypesofnodesandarcs.Thispaperassumesthreetypesofnodes,i.e.word-type,WPP-typeandconcept-type.Thetypesofdependencygraphsarecalledaworddependencygraph,aWPPdependencygraphandaconceptdependencygraph,respectively,inthispaper.Dependencygraphsarealsoclassifiedintonon-labeledandlabeledgraphs.Therearesometypesofarclabelssuchassyntacticlabel(ex.``subject'',``object'')andsemanticlabel(ex.``agent'',``target'').Varioustypesofdependencygraphsareusedinexistingsystemsaccordingtotheseclassifications,suchasnon-labelworddependencygraph,syntactic-labelworddependencygraph,semantic-labelworddependencygraph,non-labelWPPdependencygraph,syntactic-labelWPPdependencygraph,semantic-labelconceptdependencygraph.PDGutilizestwotypesofdependencygraphs,i.e.asyntactic-labelWPPdependencygraphinthefunctionaldependencyforestandasemantic-labelconceptdependencygraphinthesemanticdependencyforest.</subsection>
  <subsection title="Well-formedness Constraints for Dependency Tree">Therecanbeavarietyofwell-formednessconstraintsfordependencytreesfromverybasicandlanguage-independentconstraintstospecificlanguage-dependentconstraints.Thispaperfocusesonthefollowingfourbasicandlanguage-independentconstraintswhichmaybeembeddedindatastructureand/ortheoptimumtreesearchalgorithm.[(C1)]Coverageconstraint:Everyinputwordhasacorrespondingnodeinthetree[(C2)]Singleroleconstraint:Notwonodesinadependencytreeoccupythesameinputposition[(C3)]Projectivityconstraint:Noarccrossesanotherarc[(C4)]Singlevalenceoccupationconstraint:Notwoarcsinatreeoccupythesamevalenceofapredicate(C1)and(C2)arebasicconstraintsadoptedbyalmostalldependencyparsers.(C1)and(C2)arecollectivelyreferredtoas``coveringconstraint''.(C3)isalsoadoptedbythemajorityofdependencyparserswhicharecalledprojectivedependencyparsers.Aprojectivedependencyparserfailstoanalyzenon-projectivesentences.Mostsentencesofalanguageareprojective,butseveraltypesofnon-projectivesentencesexist.Thenon-projectiveparsingmodelobtainedimprovementinoverallaccuracycomparedwiththeprojectivemodelinanexperimentonCzech,whichhasmoreflexiblewordorderthanEnglish.Inthiscase,allpossiblenon-projectivedependencytreesarecandidatesforthesentencestructurebecausenoprojectivityconstraintisappliedincontrasttoprojectiveparsingmodel.Theauthorcallsthistypeofnon-projectivityanuncontrollednon-projectivity.Uncontrolledacceptanceofnon-projectivitymaycauseoveralldegradationofparsingaccuracyforotherlanguages.Thisseemstobeamainreasonwhythemajorityofdependencyparsersadopttheprojectivityconstraint.Asdescribedbelow,PDGdoesnotadopt(C3)directly.ThereforePDGcangeneratenon-projectivedependencytreesforinputsentences.(C4)isabasicconstraintforvalencybutisnotadoptedbythemajorityofdependencyparsers.(C2)-(C4)canbedescribedasasetofco-occurrenceconstraintsbetweentwoarcsinadependencygraph.Asdescribedbelow,PDGadoptsco-occurrenceconstraintsbetweentwoarbitraryarcsinadependencygraphusingamatrixcalled``ConstraintMatrix''(CM)whoserowsandcolumnsareasetofarcsinadependencygraph.ConstraintsrepresentedbyCMarecalledarcco-occurrenceconstraints.[(C5)]Arcco-occurrenceconstraint:Eacharcpairinatreehasaco-occurrenceconstraintinCMMorepreciseconstraintscomparedwith(C2)-(C4)arerepresentablebymeansofCM.Forexample,itcanallownon-projectivityforonlysomespecialarcs.InPDG,themappingbetweenasequenceofconstituents(thebodyofaCFGrule)andasetofarcs(apartialdependencytree)isdefinedinanextendedCFGrule.Asdescribedbelow,thisgrammarframeworkallowsgeneratingnon-projectivestructuresdefinedbygrammarrules.Theauthorcallsthistypeofnon-projectivityacontrollednon-projectivity.Thecontrollednon-projectivitycanreducethegenerationofillegalnon-projectivedependencytreescomparedwiththeuncontrollednon-projectivity.Theoptimumtreesearchinascoreddependencygraphisthetaskofsearchingforthedependencytreewiththehighestscoresatisfyingthewell-formeddependencytreeconstraint.Thealgorithmforthistaskiscloselyrelatedtothetypesofdependencygraphsand/orwell-formednessconstraints.Graphsearchalgorithms,suchastheChu-Liu-Edmondsmaximumspanningtreealgorithm,algorithmsbasedonthedynamicprogramming(DP)principleandthealgorithmbasedonthebranchandbound(B&amp;B)method,areusedfortheoptimumtreesearchinscoreddependencygraphs.TheChu-Liu-Edmondsalgorithmisveryfast(O(n^2)forsentencelengthn),butitworkscorrectlyonlyonworddependencygraphs.MaximumspanningtreealgorithmscannotsatisfythesingleroleconstraintforWPPandconceptdependencygraphs.DP-basedalgorithmscansatisfy(C1)-(C3)andrunefficiently,butseemsnottosatisfy(C4).proposedaB&amp;B-basedalgorithmworkingonworddependencygraphssatisfying(C1)-(C4).ThispaperextendsthisalgorithmtoworkonWPPandconceptdependencygraphs.ThenextsectionexplainstheproblemsoftheDP-basedmethodintreating(C4).</subsection>
  <subsection title="Single Valence Occupation Constraint and DP">proposedanalgorithmforobtainingtheoptimumkakari-uketreeanditsscorefromasetofallpossiblescoredkakari-ukerelationscorrespondingtoascoreddependencygraph.Theauthorcallsthisalgorithmtheminimizingtotalcostmethod(MTCM)inthispaper.MTCMcanbeextendedtotreatgeneraldependencyrelations,includingtherighttoleftdependencyrelation.Thisalgorithmisgeneralizedintotheminimumcostpartitioningmethod(MCPM),whichisapartitioningcomputationbasedontherecurrenceequationgivenbelow.MCPMisalsoageneralizationoftheprobabilisticCKYalgorithmandtheViterbialgorithm.Consideringthephrase(w_i,…w_j;a_i,…,a_j;A)partitionedinto(w_i,…,w_k;a_i,…,a_k;B)and(w_k+1,…,w_j;a_k+1,…,a_j:C)wherew_x,a_x,andA-Cmeanword,analoginformation(suchasprosodicinformation),andfeatureslikephrasename,respectively.MCPMcomputestheoptimumsolutionbasedonthefollowingrecurrenceequationfortotalcostF.[F(i,j,A)=min[F(i,k,B)+F(k+1,j,C)+cost(w_i,…,w_j,a_i,…,a_j,k,A,B,C)]]F(i,j,A)isthetotalcostofphraseAcoveringfromthei-thtothej-thwordinagivensentence.cost(w_i,...w_j,a_i,...,a_j,k,A,B,C)isacostfunctionwherekisapartitioningposition.TheminimumcostpartitionofthewholesentenceiscalculatedveryefficientlybytheDPprincipleforthisequation.Theoptimumpartitioningobtainedbythismethodconstitutesatreecoveringthewholesentencesatisfyingthesingleroleandprojectivityconstraints.However,itisnotassuredthatthesinglevalenceoccupationconstraintadoptedinPDGforbasicsemanticlevelconstraintissatisfiedbyMCPM.FigureshowsadependencygraphfortheJapanesephrase``Isha-moWakaranaiByouki-noKanja''encompassingdependencytreescorrespondingto``apatientsufferingfromadiseasethatthedoctordoesn'tknow'',``asickpatientwhodoesnotknowthedoctor'',andsoon.Thedependencygraphhastwokindsofambiguities,i.e.semanticroleambiguityandattachmentambiguity.Forexample,Wakaranai(not_know)hasfouroutgoingarcswithdifferentsemanticroles(agentandtarget)anddifferentattachments(Byouki(sickness)andKanja(patient))inFigure.ThesinglevalenceoccupationconstraintpreventsWakaranai(not_know)frombeingconnectedwiththesametwosemanticrolearcs.OS_1-OS_4representtheoptimumsolutionsforthephrasesspecifiedbytheirbracketscomputedbasedonMCPM.Forexample,OS_3givesanoptimumtreewithascoreof22(consistingofagent1andtarget4)forthephrase``Isha-moWakaranaiByouki-no''.TheoptimumsolutionforthewholephraseiseitherOS_1+OS_4orOS_3+OS_2duetoMCPM.Theformerhasthehighestscore40(=15+25)butdoesnotsatisfythesinglevalenceoccupationconstraintbecauseithasagent1andagent5simultaneously.TheoptimumsolutionssatisfyingthisconstraintareNOS_1+OS_4andOS_1+NOS_2shownatthebottomofFigure.NOS_1andNOS_2arenotoptimumsolutionsfortheirwordcoverages.Inthiscase,MCPMgeneratesanon-optimumtreeinOS_3+OS_2ifitadoptsthestrategyofneglectinginconsistenttrees.Otherwise,MCPMgeneratesahighscorebutanill-formedtreeinOS_1+OS_4.ThisshowsthatitisnotassuredthatMCPMwillobtaintheoptimumsolutionsatisfyingthesinglevalenceoccupationconstraint.Onthecontrary,itisassuredthatthegraphbranchalgorithmcomputestheoptimumsolution(s)satisfyingthesinglevalenceoccupationconstraintbecauseitcomputestheoptimumsolution(s)satisfyinganyco-occurrenceconstraintsintheconstraintmatrixasdescribedbelow.ItisanopenproblemwhetheranalgorithmbasedontheDPframeworkexistswhichcanhandlethesinglevalenceoccupationconstraintandarbitraryarcco-occurrenceconstraints.</subsection>
  <section title="Semantic Dependency Graph and Dependency Forest">Thesemanticdependencygraph,asshowninSection,isasemantic-labelworddependencygraphdesignedforJapanesesentenceanalysis.Theoptimumsolutionforasentenceisobtainedbysearchingfortheoptimumtreeinasemanticdependencygraphwithpreferencescores.Thesentenceanalysismethodbasedonthesemanticdependencygraphiseffectivebecauseitemployslinguisticconstraintsaswellaslinguisticpreferences.However,thismethodislackingintermsofgeneralityinthatitcannothandlebackwarddependencyandmultipleWPPbecauseitdependsonsomelinguisticfeaturespeculiartoJapanese.PDGemploysthedependencyforestinsteadofthesemanticdependencygraph.Thedependencyforestisapackedshareddatastructureencompassingalldependencytreescorrespondingtoparsetreesinapackedsharedparseforestforasentence.Sincethedependencyforesthasnoneofthelanguage-dependentpremisesthatthesemanticdependencygraphhas,itisapplicabletoEnglishandotherlanguages.PDGhasonemoreadvantageinthatitcangeneratenon-projectivedependencytreesbecausethemappingfromphrasestructuretodependencystructureisdefinedingrammarrules.Theoptimumtreesearchalgorithmforthesemanticdependencygraphisnotapplicabletothedependencyforest.Thispapergivesabriefexplanationofthedependencyforestandshowsthegraphbranchalgorithmforobtainingtheoptimumsolution(tree)inthedependencyforest.</section>
  <subsection title="Semantic Dependency Graph and its Drawbacks">Figureshowsasemanticdependencygraphfor``Watashi-moKare-gaTsukue-woKattaMise-niUtta''.Thenodesinthegraphcorrespondtothecontentwordsinthesentenceandthearcsshowpossiblesemanticdependencyrelationsbetweenthenodes.EacharchasanarcIDandapreferencescore.Interpretationsofasentencearewell-formedspanningtreesthatsatisfytheprojectivityconstraintandthesinglevalenceoccupationconstraint.TheboldarcsinthegraphinFigureshowstheoptimuminterpretationwithamaximumscoreof130.ThesemanticdependencygraphisdesignedbasedontheJapanesekakari-ukerelationandassumesthefollowingfeaturesofJapanese.[(a)]Adependantalwayslocatestotheleftofitsgovernor(nobackwarddependency)[(b)]POSambiguitiesarequiteminorcomparedwithEnglishThesemanticdependencygraphanditsoptimumsolutionsearchalgorithmadopttheseastheirpremises.Therefore,thismethodisinherentlyinapplicabletolanguageslikeEnglishthatrequirebackwarddependencyandmultiplePOSanalysis.</subsection>
  <subsection title="Overview of Dependency Forest">Thedependencyforestisapackedshareddatastructureencompassingallpossibledependencytreesforasentence.Asdescribedabove,PDGutilizestwokindsofdependencyforest,i.e.thefunctionaldependencyforestandthesemanticdependencyforest.Thefunctionaldependencyforestencompassesasetoffunctional(orsyntactic)dependencytreeswhichconsistofWPPnodesandlabeledarcsrepresentingthesyntacticrelationsbetweenthem.Thesemanticdependencyforestencompassesasetofsemanticdependencytreeswhichconsistoflexicalconceptnodesandlabeledarcsrepresentingthesemanticrelationsbetweenthem.Eachofthetwodependencyforestsconsistsofadependencygraph(DG)andaconstraintmatrix(CM).ThispaperfocusesonthefunctionaldependencyforestbecauseitisthetargetofthecurrentPDGprototypesystem.Figureshowsascored(functional)dependencyforestfortheexamplesentence``Timeflieslikeanarrow.''Thedependencygraphconsistsofnodesanddirectedarcs.AnoderepresentsaWPPandanarcshowsthedependencyrelationbetweennodes.AnarchasitsIDandpreferencescore.CMisamatrixwhoserowsandcolumnsareasetofarcsinDGandprescribestheco-occurrenceconstraintbetweenarcs.OnlywhenCM(i,j)is,arc_iandarc_jareco-occurrableinonedependencytree.Thedependencyforesthascorrespondencewiththepackedsharedparseforest.Thismeansthatthedependencyforestprovidesameanstotreatallpossibleinterpretationsofasentenceindependencystructurerepresentation.Onesentenceinterpretationisrepresentedbyonewell-formeddependencytreewhichsatisfiesthewell-formeddependencytreeconstraint,i.e.thecoveringconstraintandthearcco-occurrenceconstraintdescribedinSection.Insemanticdependencygraphs,aspanningtreeofagraphisawell-coveredtree.Thissimplifiesthedevelopmentofanoptimumsolutionsearchalgorithm.Thealgorithmforthedependencyforesthastotreatthecoveringconstraint.Figureshowsfourwell-formeddependencytreesforthedependencyforestinFigure.Tree(a)istheoptimumdependencytreewiththehighestscoreof51.</subsection>
  <subsection title="Relation Between Semantic Dependency Graph and Dependency Forest">ThedependencyforestandthesemanticdependencygraphutilizetheWPPdependencygraphandthewordgraphrespectively.TheworddependencygraphcanbeseenasaspecialcaseoftheWPPdependencygraph.Therefore,thesemanticdependencygraphisasubsetofthedependencygraphofthedependencyforest.Ontheotherhand,well-formednessconstraintsintroducedtoasemanticgraph,i.e.theprojectivityandsinglevalenceoccupationconstraints,areatypeofarcco-occurrenceconstraintsrepresentablebymeansofCM.Therefore,thedependencyforestisageneralizedandmorepowerfuldatastructurecoveringtherepresentativepowerofthesemanticdependencygraph.</subsection>
  <section title="The Optimum Tree Search in the Dependency Forest Based on the Graph Branch Method">Thegraphbranchmethodworksonthebranchandboundprincipleandsearchesfortheoptimumwell-formedtreeinadependencygraphbyapplyingpartialsub-problemexpansionscalledgraphbranching.Thealgorithminappliesthegraphbranchmethodtothesemanticdependencygraph.Unfortunately,thisalgorithmisnotdirectlyapplicabletothedependencyforestsearchproblem.Thefollowingshowsanewalgorithmforapplyingthegraphbranchmethodtothedependencyforest.Thisalgorithmisapplicabletothefunctionaldependencyforestandthesemanticdependencyforestbecausethebasicframeworkiscommontobothofthedependencyforests.</section>
  <subsection title="Outline of Branch and Bound Method">ThebranchandboundmethodisaprincipleforsolvingcomputationallyhardproblemssuchasNP-completeproblems.Thebasicstrategyisthattheoriginalproblemisdecomposedintoeasierpartial-problems(branching)andtheoriginalproblemissolvedbysolvingthem.Pruningcalledaboundoperationisappliedifitturnsoutthattheoptimumsolutiontoapartial-problemisinferiortothesolutionobtainedfromsomeotherpartial-problem(dominancetest),orifitturnsoutthatapartial-problemgivesnooptimumsolutionstotheoriginalproblem(maximumvaluetest).Thedominancetestisnotusedinthegraphbranchmethod.Usually,thebranchandboundalgorithmisconstructedtominimizethevalueofthesolution.Thegraphbranchalgorithminthispaperisconstructedtomaximizethescoreofthesolutionbecausethebestsolutionisthemaximumtreeinthedependencyforest.ThefollowingfeaturesforthemaximumboundvaluetestwithrespecttotheproblemPanditspartial-problemP_cmustbesatisfiedinthebranchandboundmethod.g(P_c)f(P)whereg(P_c)isthemaximumvalueofP_c,andf(P)isthemaximumvalueofP.Ifg(P_c)=l(P)wherelgivesavalueofafeasiblesolutiontoP,thenthefeasiblesolutionisasolutiontoP.IfP_chasnofeasiblesolutionsthenPhasnosolutions.Ifafeasiblesolutionwithanincumbentvaluezisobtainedforsomepartial-problem,andifg(P_c)z,thenpartial-problemsbranchedfromproblemPhavenobettersolutionsthanz.InthecaseofMC2-MC4,partial-problemP_ccanbeterminated.Figureshowsageneralbranchandboundalgorithmforobtainingoneoptimumsolution.</subsection>
  <subsection title="Graph Branch Algorithm">Figureshowsaskeletonofthealgorithm.Inordertomakeitrunningcode,eachoperationinthealgorithmmustberealizedforthetargetproblem.Thegraphbranchalgorithmappliesthebranchandboundmethodtotheoptimumtreesearchproblemwiththebinaryarcco-occurrenceconstraintbyintroducingthegraphbranchoperationforthepartial-problemexpansionoperation.Figureshowsthegraphbranchalgorithmwhichhasbeenextendedfromtheoriginalskeletontosearchforalltheoptimumtreesinadependencygraph.ThefollowingsectionsexplainhowthecomponentsofthebranchandboundmethodinFigureareimplementedinthegraphbranchalgorithm.(1)Partial-problemPartial-problemP_iinthegraphbranchmethodisaproblemsearchingforallthewell-formedoptimumtreesinadependencyforestDF_iconsistingofthedependencygraphDG_iandconstraintmatrixCM_i.Partial-problemP_iconsistsofthefollowingelements.DependencygraphDG_iConstraintmatrixCM_iFeasiblesolutionvalueLB_i(correspondingtol(P)inFigure)UpperboundvalueUB_i(correspondingtog(P)inFigure)InconsistentarcpairlistIAPL_iTheconstraintmatrixiscommontoallpartial-problems,sooneCMissharedbyallpartial-problems.DG_iisrepresentedby``rem[..]''whichshowsasetofarcstoberemovedfromthewholedependencygraphDG_i,i.e.DG_iisobtainedbyremovingrem[..]fromDG_i.Forexample,``rem[b,d]''representsapartialdependencygraph[a,c,e]inthecaseDG=[a,b,c,d,e].Thisreducesthememoryspaceandthecomputationforafeasiblesolutionasdescribedbelow.IAPL_iisalistofinconsistentarcpairs.Aninconsistentarcpairisanarcpairwhichdoesnotsatisfysomeco-occurrenceconstraint.(2)AlgorithmforObtainingFeasibleSolutionandLowerBoundValueInthegraphbranchmethod,awell-formeddependencytreeinthedependencygraphDGofthepartial-problemPisassignedasthefeasiblesolutionFS(correspondingtoxinFigure)ofP~.ThescoreofthefeasiblesolutionFSisassignedasthelowerboundvalueLB(correspondingtol(P)inFigure).Thefunctionforcomputingthesevaluesget_fsiscalledafeasiblesolution/lowerboundvaluefunction.Figureshowsthealgorithmofget_fs.Basically,get_fssearchesforonefeasiblesolutioninahigher-score-firstmannerandadepth-firstmanner.Whenanarcwhichviolatesco-occurrenceconstraintagainstoneoftheselectedarcsisfound,get_fsbacktracksatstep5tothenearestchoicepointwhichresolvesthecontradiction.Thisassuresthattheobtainedsolutionsatisfiestheco-occurrenceconstraint.Furthermore,ifget_fsfindsnosolution,thentheproblemPhasnosolution.Sinceget_fsselectsonearcforeachpositioninasentence,theobtainedarcssatisfiesthewell-coveredconstraint.ArcgroupsS_1toS_naresortedaccordingtotheirscoresinstep1.Thisoperationisintroducedtoobtainabetter(higherscore)feasiblesolution,sincethebetterfeasiblesolutionleadtoahigherincumbentvaluewhichboundsmorepartial-problems.(3)AlgorithmforObtainingUpperBoundValueGivenasetofarcsAwhichisasubsetofadependencygraphDG,ifthesetofdependentnodesofarcsinAsatisfiesthecoveringconstraintdescribedabove,thearcsetAiscalledthewell-coveredarcset.Themaximumwell-coveredarcsetisdefinedasawell-coveredarcsetwiththehighestscore.Ingeneral,themaximumwell-coveredarcsetdoesnotsatisfythesingleroleconstraintanddoesnotformatree.Inthegraphbranchmethod,thescoreofthemaximumwell-coveredarcsetofadependencygraphGisassignedastheupperboundvalueUB(correspondingtog(P)inFigure)ofthepartial-problemP.Upperboundfunctionget_ubcalculatesUBbyscanningthearclistssortedbythesurfacepositionofthedependentnodesofthearcs.Theabovesettingssatisfythemodelconditions.Inthesesettings,Pandget_ubcorrespondstoP_candg(P_c)respectively.(MC1)issatisfiedbecauseget_ub(P)f(P)istrueforf(P)(thescoreoftheoptimumtree).(MC2)and(MC4)aresatisfiedbecauseget_ubisthescoreofthemaximumwell-coveredarcset.(MC3)issatisfiedsinceget_ub(P)alwayshasitssolution.Therefore,partial-problemPisprunableiftheincumbentvaluezsatisfieszg(P).(4)BranchOperationFigureshowsabranchoperationinthegraphbranchmethodcalledagraphbranchoperation.Childpartial-problemsofPareconstructedasfollows:Searchforaninconsistentarcpair(arc_i,arc_j)inthemaximumwell-coveredarcsetofthedependencygraphofP.Createchildpartial-problemsP_i,P_jwhichhavenewdependencygraphsDG_i=DG-arc_jandDG_j=DG-arc_irespectively.SinceasolutiontoPcannothavebotharc_iandarc_jsimultaneouslyduetotheco-occurrenceconstraint,theoptimumsolutionofPisobtainedfromeither/bothP_ior/andP_j.Thechildpartial-problemiseasierthantheparentpartial-problembecausethesizeofthedependencygraphofthechildpartial-problemislessthanthatofitsparent.InFigure,get_iaplcomputesthelistofinconsistentarcpairsIAPL(InconsistentArcPairList)forthemaximumwell-coveredarcsetofP_i.Thenthegraphbranchfunctiongraph_branchselectsoneinconsistentarcpair(arc_i,arc_j)fromIAPLforbranchoperation.Theselectioncriteriafor(arc_i,arc_j)affectstheefficiencyofthealgorithm.graph_branchselectstheinconsistentarcpaircontainingthehighestscorearcinBACL(BranchArcCandidatesList).graph_branchcalculatestheupperboundvalueforachildpartial-problembyget_ubandsetsittothechildpartial-problem.Simultaneously,graph_branchexecutesboundoperationbyimmediatelypruningthechildpartial-problemwhoseupperboundvalueislessthantheincumbentvaluez.(5)SelectionofPartial-problemfromActivePartial-problemsselect_probleminFigurecorrespondstothesearchs(A)inFigure.Thebestboundsearchisemployedforselect_problem,i.e.itselectsthepartial-problemwhichhasthemaximumboundvalueamongtheactivepartial-problems.Itisknownthatthenumberofpartial-problemsdecomposedduringcomputationisminimizedbythisstrategyinthecasethatnodominancetestsareapplied.(6)ComputingAllOptimumSolutionsInordertoobtainalloptimumsolutions,partial-problemswhoseupperboundvaluesareequaltothescoreoftheoptimumsolution(s)areexpandedatS8(searchformoreoptimumsolutions).Inthecasethatatleastoneinconsistentarcpairremainsinapartial-problem(i.e.IAPL),graphbranchisperformedbasedontheinconsistentarcpair.Otherwise,theobtainedoptimumsolutionFSischeckedifoneofthearcsinFShasanequalrivalarcbyarcs_with_alternativesfunctioninFigure.TheequalrivalarcofarcAisanarcwhosepositionandscoreareequaltothoseofarcA.IfanequalrivalarcofanarcinFSexists,anewpartial-problemisgeneratedbyremovingthearcinFS.S8assuresthatnopartial-problemhasanupperboundvaluegreaterthanorequaltothescoreoftheoptimumsolutionswhenthecomputationstopped.(7)CorrectnessoftheGraphBranchAlgorithmAllDependencytreesaregeneratedbythefeasiblesolutionandlowerboundvaluefunctionget_fs.get_fsdoesnotviolatethecoveringconstraint(thesingleroleconstraintandthecoverageconstraint)becauseitselectsonearcforoneinputpositionatthestep7inFigure.Italsoassurestheco-occurrenceconstraintbycheckingtheCMvalueforeverytwoarcsinatreeatstep5.Therefore,outputdependencytreesofthegraphbranchalgorithmsatisfythewell-formeddependencytreeconstraint.</subsection>
  <section title="Example of Optimum Tree Search">ThissectionpresentsanexampleshowingthebehaviorofthegraphbranchalgorithmusingthedependencyforestinFigure.</section>
  <subsection title="Feasible Solution/Lower Bound Value Function">Thefollowingsectionshowsthebehavioroffeasiblesolution/lowerboundvaluefunctionget_fsfortheexamplesentence.step1(groupingandsortingofarcs)inFigureisperformedonceatthebeginningfortheinitialdependencyforest.Theresultofstep1isshowninFigure.PosandMaxScoremeanthepositionofthearcinthesentenceandthemaximumarcscoreatthatpositionrespectively.ArcswithnorivalarchaveMaxScoreandarelocatedatthetopofthearcgrouplist.Arcgroupswithstartpositions3,0,4,1and2areassignedtoS_1,S_2,S_3,S_4andS_5,respectively.step2(initialize)initializesvariables.Afterstep3andstep4areexecuted,step5checksthata(i,j)=a(1,1)=14(=det14)canberegisteredtoFS.Inthiscase,noviolationoftheco-occurrenceconstraintoccurs,andthenstep7registersa(1,1)toFS,thenbacktrackpointBP[1]atthepositioni(=1)issettoj(=1).[FS=[a(1,1)](=[14]),BP=[1,-,-,-,-],i=2,j=1,k=1,l=0]Next,step3-5trythefirstarca(2,1)(=nc2)inS_2.SinceCM(a(1,1),a(2,1))=CM(14,2)=inFigure,a(2,1)anda(1,1)satisfytheco-occurrenceconstraintandthena(2,1)isregisteredtoFS.[FS=[a(1,1),a(2,1)](=[14,2]),BP=[1,1,-,-,-],i=3,j=1,k=1,l=0]a(3,1)(=pre15)isskippedbecauseCM(a(3,1),a(2,1))=CM(15,2).Thena(3,2)istried.&amp;FS=[a(1,1),a(2,1),a(3,2)](=[14,2,16])&amp;BP=[1,1,2,-,-],i=4,j=1,k=1,l=1align*Inasimilarmanner,a(4,1)(=sub23)anda(5,4)(=rt29)areaddedtoFS,thentheterminationconditionatstep3issatisfied.&amp;FS=[a(1,1),a(2,1),a(3,2),a(4,1),a(5,4)](=[14,2,16,23,29]),&amp;BP=[1,1,2,1,4],i=6,j=1,k=4,l=4,align*TheFShereisafeasiblesolutionandthesumtotalofarcscores,i.e.17+17+6+10+0=50isthescoreofthefeasiblesolution.Nobacktrackingoccurredinthisexample.BacktrackingoccurswhenallarcsinS_iarefoundtobeinconsistentwitheitherofthearcsinFSatthatpoint.Inthiscase,step6(backtracking)backtrackstothelposition.lisassuredtobetherightmostposition,wheresomeelementinS_iisinconsistentwiththeselectedarcinFS.Thismechanismisintroducedtooptimizebacktracking.</subsection>
  <subsection title="Example of Graph Branch Algorithm">Thesearchprocessofthebranchandboundmethodcanbeshownasasearchdiagramconstructingapartial-problemtreerepresentingtheparent-childrelationbetweenthepartial-problems.Figureisasearchdiagramfortheexampledependencyforestshowingthesearchprocessofthegraphbranchmethod.Inthisfigure,boxP_iisapartial-problemwithitsdependencygraphrem,upperboundvalueUB,feasiblesolutionandlowerboundvalueLBandinconsistentarcpairlistIAPL.SuffixiofP_iindicatesthegenerationorderofpartial-problems.Updatingofglobalvariablez(incumbentvalue)andO(setofincumbentsolutions)isshownunderthebox.Thevalueoftheleft-handsideofthearrowisupdatedtothatofright-handsideofthearrowduringthepartial-problemprocessing.DetailsofthebehaviorofthealgorithminFigurearedescribedbelow.InS1(initialize),z,OandAParesetto-1,andP_0respectively.ThedependencygraphofP_0isthatoftheexampledependencyforest.Thisisrepresentedbyrem=[].get_ubsetstheupperboundvalue(=63)ofP_0toUB.Inpractice,thisiscalculatedbyobtainingthemaximumwell-coveredarcsetofP_0.InS2(search),select_problemselectsP_0andget_fs(P_0)isexecuted.ThefeasiblesolutionFSanditsscoreLBarecalculatedbasedonthealgorithminFiguretosetFS=[14,2,16,23,29],LB=50(P_0inthesearchdiagram).S3(incumbentvalueupdate)updateszandOtonewvalues.Then,get_iapl(P_0)computestheinconsistentarcpairlist[(2,15),(15,23),(23,18),(2,18)]fromthemaximumwell-coveredarcset[14,2,15,23,18]andsetittoIAPL.S5(maximumvaluetest)comparestheupperboundvalueUBandthefeasiblesolutionvalueLB.Inthiscase,LB&lt;UBholds,soBACLisassignedthevalueofIAPL.ThenextstepS6(branchoperation)executesthegraph_branchfunction.graph_branchselectsthearcpairwiththehighestarcscoreandperformsthegraphbranchoperationwiththeselectedarcpair.ThefollowingisaBACLshownwiththearcnamesandarcscores.[[(nc2[17],pre15[10]),(pre15[10],sub23[10]),(sub23[10],vpp18[9]),(nc2[17],vpp18[9])]]Scoresareshownin[].Thearcpaircontainingthehighestarcscoreis(2,15)and(2,18)containingnc2[17].Here,(2,15)isselectedandpartial-problemsP_1(rem[2])andP_2(rem[15])aregenerated.P_0isremovedfromAPandthenewtwopartial-problemsareaddedtoAPresultinginAP=P_1,P_2.Then,basedonthebestboundsearchstrategy,S2(search)istriedagain.select_problemselectsP_1becausetheupperboundvalueofP_1(=61)isgreaterthanthatofP_2(=59).SincetheupperboundofP_1(=61)isgreaterthanthefeasiblesolutionscore(=51),get_iaplisexecutedandsetsBACLtothevalueshowninP_1inFigure.Thegraphbranchfunctiongraph_branchgetstwocandidatesforchildpartial-problemscorrespondingtorem[24,2]andrem[23,2]becausetheinconsistentarcpair(24,23)isselectedasthesourceofthegraphbranchoperation(arc24hasthehighestscoreof15).Theformercandidateforrem[24,2]isprunedimmediately,becauseitsupperboundvalue(=46)issmallerthantheincumbentvalue(=51)(terminationbytheupperboundtest).Therefore,graph_branchreturnsP_3(rem[23,2]).TheupperboundvalueUBofP_3is58whichislessthanthatofitsparentproblemP_1.TheprocessingforP_1iscompletedandP_1isremovedfromAP.select_problemselectsP_2bycomparingtheupperboundvaluesofP_2andP_3inAP.Partial-problemP_2isterminatedbecauseithasnofeasiblesolution(FS=no_solution).Then,thenextpartial-problemP_3isprocessed.P_3hasafeasiblesolutionwithascoreof41.Updatingoftheincumbentvaluedoesnotoccurbecausetheobtainedscoreislowerthantheexistingincumbentvalue.Thenextpartial-problemP_4hasnofeasiblesolution,soallprocessingisterminatedatS8(stop).Atthistime,thevaluesofOandzaretheoptimumsolution(=[14,24,15,31,18])anditsscore(=51)respectively.Thissolutioncorrespondstothedependencytree(a)inFigure.</subsection>
  <section title="Experiment">Thissectiondescribessomeexperimentalresultsshowingthecomputationalcomplexityandbehaviorofthegraphbranchalgorithm.</section>
  <subsection title="Environment and Metric of the Experiment">AnEnglishtextcorpus,PDGgrammarandpreferenceknowledgeareprepared.PreferenceknowledgesourceinthisexperimentistheWPPfrequencies(nodefrequencies)andthedependencyrelationfrequencies(arcfrequencies)inthecorpus.Preferencescoreiscalculatedfromthesestatisticaldataandattachedtothearcsinthedependencygraphs.Experimentdataof125,320sentencesextractedfromEnglishtechnicaldocumentsisdividedintoopendata(8605sentences)andcloseddata(116,715sentences).Figureshowsthedistributionofwordlengthofsentencesintheopendata.ThecloseddataisusedforproducingWPPanddependencyfrequencies.Anexistingsentenceanalysissystem(calledtheoraclesystem)isusedasageneratorofthesefrequencies.Theoraclesystemisareal-worldrule-basedsystemwithalongdevelopmenthistory.Inordertoseeabriefaccuracyoftheoraclesystem,136sentencesareselectedrandomlybutwithsimilardistributionshowninFigurefromasetofsentenceswhichareparsableusingthebasicgrammardescribedbelow.Thearcprecisionratioforthissentencesetwithrespecttohumananalysisresultsis97.2%.Therefore,theoutputoftheoraclesystemisagoodapproximationofhumancorrectdata.APDGgrammarcalledabasicgrammarisprepared.Thebasicgrammarconsistsofbasicgrammarruleswhichcoversentencevariationssuchasnoun/verb/adjective/adverbial/prepositionalphrases,simple/complex/compoundsentences,relative/subordinateclausesandOnions'5sentencepatterns.Thebasicgrammardoesnotacceptinsertion,omission,inversionandidiomaticstructures(ex.notonly..butalso..).Moredetailedinformationontheenvironmentofthisexperimentisdescribedin.Theexpandedproblemnumber,aprincipalcomputationalcomplexityfactoroftheB&amp;Bmethod,isadoptedasthebasemetric.Thefollowingthreemetricsareusedinthisexperiment.ExpandedProblemNumberinTotal(EPN-T):Thenumberoftheexpandedproblemswhicharegeneratedintheentiresearchprocess.ExpandedProblemNumberfortheFirstOptimumSolution(EPN-F):EPN-Fisthenumberoftheexpandedproblemswhenthefirstoptimumsolutionisobtained.ExpandedProblemNumberfortheLastOptimumSolution(EPN-L):EPN-Listhenumberoftheexpandedproblemswhenthelastoptimumsolutionisobtained.Atthispoint,alloptimumsolutionsareobtained.Optimumsolutionnumber(OSN)foraproblem,i.e.thenumberofoptimumdependencytreesinagivendependencyforest,givesthelowerboundvalueforallthesemetricsbecauseoneproblemgeneratesatmostonesolution.TheminimumvalueofOSNis1becauseeverydependencyforesthasatleastonedependencytree.Asthesearchprocessproceeds,thealgorithmfindsthefirstoptimumsolution,thenthelastoptimumsolution,andfinallyterminatestheprocessbyconfirmingnobettersolutionisleft.Therefore,thethreemetricsandOSNhavetherelationOSNEPN-FEPN-LEPN-T.AveragevaluesforthesearedescribedasAve:OSN,Ave:EPN-F,Ave:EPN-LandAve:EPN-T.</subsection>
  <subsection title="Experimental Results">AnevaluationexperimentfortheopendataisperformedusingaprototypePDGsystemimplementedinProlog.Thetestsentencescontainingmorethan22wordsareneglectedduetothelimitationofPrologsystemresourcesintheparsingprocess.4334sentencesoutof6882testsentencesareparsable.Withoutapplyingspecialtreatmentsuchasconstructionofthewholeparsetreefrompartialparsetrees,unparsablesentences(2584sentences)aresimplyneglectedinthisexperiment.AlloptimumtreesarecomputedbythegraphbranchalgorithmdescribedinSection.FigureshowsaveragesofEPN-T,EPN-L,EPN-FandOSNwithrespecttosentencelength.OverallaveragesofEPN-T,EPN-L,EPN-FandOSNforthetestsentencesare3.0,1.67,1.43and1.15.Theresultshowsthattheaveragenumberofproblemsrequiredisrelativelysmall.ThefeasiblesolutionsearchfunctionbasedonthegreedyalgorithminFigureseemstogiveagoodfeasiblesolutionforagivenproblemandsuppressesthenumberofexpandedproblems.ThegapbetweenAve:EPN-TandAve:EPN-L(3.0-1.67=1.33)ismuchgreaterthanthegapbetweenAve:EPN-LandAve:OSN(1.67-1.15=0.52).Thismeansthatthemajorpartofthecomputationisperformedonlyforcheckingiftheobtainedfeasiblesolutionsareoptimumornot.reportedtheexperimentfortheB&amp;B-basedoptimumsearchalgorithmimplementedinClanguageusingthesemanticdependencygraphsobtainedfrom100sentencesrandomlyselectedfromJapanesetechnicaldocuments.Comparedwiththeexperimentreportedinthispaper,thepreviousexperimentwasperformedindifferentconditionsandsettingswithregardto,forexample,thetargetlanguage(Englishvs.Japanese),thetargetdependencygraph(syntactic-labelWPPdependencygraphvs.semantic-labelworddependencygraph),thescoringmethod(statistics-basedvs.rule-based)andthesearchtarget(alloptimumsolutionsearchvs.oneoptimumsolutionsearch).However,thetwoexperimentshavethesamebasicstructure,i.e.theoptimumtreesearchinscoreddependencygraphswitharcconstraintsbasedontheB&amp;Bprinciple.TheB&amp;B-basedalgorithmsofthetwoexperimentshaveverysimilarcomponentsofthebranchandboundmethodandthemainfactorofthecomputationalcomplexityisthenumberoftheexpandedproblems.ThepreviousexperimentshowsthatoverallaveragesofEPN-T,EPN-Fare2.91,1.33.Theseresultvaluesareverysimilartothoseinthenewexperiment.Thetendencyfortheoptimumsolutiontobeobtainedintheearlystageofthesearchprocesswasobservedinthepreviousexperimentjustasitisinthisexperiment.introducedtwoimprovementsofthealgorithm,i.e.theintroductionofanimprovedupperboundfunctiong'(P)andtheoptimizedfeasiblesolutionsearch.Asaresult,theAve:EPN-Tisreducedfrom2.91to1.82andtheAve:EPN-Fisincreasedfrom1.33to1.35.TheaverageCPUtimeisreducedfrom305.8,msto162.1,ms(onengineeringworkstationAS-4260).Inthenewexperiment,theg'(P)isintroducedtothegraphbranchalgorithmandhasobtainedthereductionoftheAve:EPN-Tfrom3.00to2.68andthereductionoftheAve:EPN-Ffrom1.43to1.36.g'(P)isalsoeffectivetosomeextentinthisexperiment.Thetendencyfortheoptimumsolutiontobeobtainedintheearlystageofthesearchprocesssuggeststhatlimitingthenumberofproblemstoexpandisaneffectivepruningstrategy.Figureshowstheratiosofthesentencesobtainingthewholeproblemexpansion,thefirstoptimumsolutionandthelastoptimumsolutiontowholesentenceswithrespecttotheexpandedproblemnumbers.Thiskindofratioiscalledanachievementratio(AR)inthispaper.FromFigure,theARsforEPN-T,EPN-L,EPN-F(plottedinsolidlines)are97.1%,99.6%,99.8%respectivelyattheexpandedsolutionnumber10.ThedottedlineshowstheARforEPN-Toftheimprovedalgorithmusingg'(P).Theuseofg'(P)increasestheARforEPN-Tfrom97.1%to99.1%attheexpandedsolutionnumber10.However,theeffectofg'(P)isquitesmallforEPN-FandEPN-L.ARsforEPN-FandEPN-Linusingg'(P)isalmostthesameasthoseshowninFigure.Thisresultshowsthatthepruningstrategybasedontheexpandedproblemnumberiseffectiveandg'(P)worksforthereductionoftheproblemsgeneratedintheposteriorpartofthesearchprocesses.Behaviorofthesearchprocessshouldbeaffectedbythescoringstrategy(resourcesofpreferenceknowledgeandtheirapplicationmethods)andthestructureofdependencygraphsdefinedbygrammarrules.Thesearchprocessshouldbeanalyzedingreaterdetailalongwithscoringstrategiesanddependencygraphstructures.TheexperimentusingthebasicEnglishgrammarshowsapromisingresult.ThisisbecauseEPN-TandEPN-Faresimilartothoseinthealgorithmdescribedinwhichhasaperformancesufficientforreal-worldapplications.Thepracticalcodeimplementationofthegraphbranchalgorithmanditsperformanceevaluationwithanextendedgrammararesubjectsforfuturework.</subsection>
  <section title="Concluding Remarks">Thispaperhasdescribedthegraphbranchalgorithmforobtainingtheoptimumsolutionforadependencyforestusedinthepreferencedependencygrammar.Thewell-formednessdependencytreeconstraintsarerepresentedbytheconstraintmatrixofthedependencyforest,whichhasflexibleandprecisedescriptionabilitysothatcontrollednon-projectivityisavailableinPDGframework.Thegraphbranchalgorithmassuresthesearchfortheoptimumtreeswitharbitraryarcco-occurrenceconstraints,includingthesinglevalenceoccupationconstraintwhichhasnotbeentreatedinDP-basedalgorithmssofar.Thedependencyforesthaswiderapplicabilitycomparedwiththesemanticdependencygraphbecauseitcanhandlewholemorphologicalambiguitycausedbyhomonymsandwordboundarydivisions.TheexperimentalresultshowstheaveragesofEPN-T,EPN-LandEPN-FforEnglishtestsentencesare3.0,1.67and1.43,respectively.ThisisapromisingresultbecauseEPN-TandEPN-Faresimilartothoseinthealgorithmdescribedinwhichhasaperformancesufficientforreal-worldapplications.Thepracticalcodeimplementationofthegraphbranchalgorithmanditsperformanceevaluationwithanextendedgrammararesubjectsforfuturework.document</section>
</root>
