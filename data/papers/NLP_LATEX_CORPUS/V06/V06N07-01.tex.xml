<?xml version="1.0" ?>
<root>
  <title>形態素解析結果から過分割を検出する統計的尺度</title>
  <author>内山将夫</author>
  <jabstract>本稿では，形態素解析の結果から過分割(正解が分割していないところを形態素解析システムが分割している個所)を検出するための統計的尺度を提案する．もし，形態素解析の結果から過分割を検出できれば，それを利用して形態素解析結果の過分割を訂正する規則を作成できるし，人手修正済みのコーパスで除去しきれていない過分割を発見し取り除くこともできるため，そのような尺度は有用である．本稿で提案する尺度は文字列に関する尺度であり，文字列が分割される確率と分割されない確率との比に基づいていて，分割されにくい文字列ほど大きな値となる．したがって，この値が大きい文字列は過分割されている可能性が高い．本稿の実験では，この尺度を使うことにより，規則に基づく形態素解析システムの解析結果から，高精度で過分割を検出できた．また，人手で修正されたコーパスに残る過分割も検出できた．これらのことは，提案尺度が，形態素解析システムの高精度化に役立つこと，及び，コーパス作成・整備の際の補助ツールとして役立つことを示している．</jabstract>
  <jkeywords>コーパス,日本語形態素解析,分割誤り</jkeywords>
  <subsubsection title="">*尺度Lの適用範囲尺度Lが効果的に検出できるような過分割は，脚注2に示した分割誤りのうちで，形態素自体に注目した過分割である．それに対して，語境界交差型における過分割の検出への尺度Lの有効性は，形態素自体に注目した過分割に対するものよりも低いと予想される．なぜなら，問題にしている分割点が語境界交差型の分割誤りの場合，たとえば，「が/まん延」を「がまん/延」と間違えている場合には，L(がまん,延)を計算するのだが，このとき，(,が,ま,ん,延,)が高い確率値を示し，(，が,ま,ん,)(,延)が低い確率値を示すことは必ずしも期待できないからである．なぜなら，コーパス中で「がまん延」が頻出し，「がまん」や「延」が出現しないということは保証できないからである．ただし，実際上は，()式の確率を推定するときには，n=2やn=3により近似するので，()式の計算に関係するのは，分割点の近傍の文字だけになり，その結果，語境界交差型の分割誤りと形態素自体に注目した過分割とで尺度Lの有効性の違いは小さくなると考えられる．</subsubsection>
  <section title="はじめに">日本語の形態素解析は，日本語の自然言語処理にとって基本的なものであるので，多くの研究・開発が行われている．形態素解析システムには，主に，人手で作成された規則に基づくシステムと確率に基づくシステムがある．本稿では，人手で作成された規則に基づく形態素解析システムを対象として，形態素解析の結果から半自動的に誤りを検出することを試みる．形態素解析結果から誤りが検出できた場合には，次のような利点がある．形態素解析の誤りは，形態素解析システムの弱点を示していると考えられるので，誤りを分析することにより，システムの性能を向上できる可能性がある．形態素解析が誤るような表現を連語として登録することで，そのような誤りが再び起きないようにできる．形態素解析の誤りから誤り訂正規則を作成できるので，その規則を利用して形態素解析の精度を向上できる．形態素解析の誤りに基づいて，形態素解析の規則に割当てるコストを調整したり，品詞分類を変更することができる．これらのことから，形態素解析結果から誤りを検出することは，形態素解析システムの高精度化に役立つことがわかる．しかし，形態素解析の結果から誤りを見付けるのは，形態素解析の精度が97〜99％に達している現在では，困難になっている．ところが，従来の研究で，形態素解析結果の誤りを利用して形態素解析の精度を向上させようとしている研究では，それらの誤りを人手で発見すること，あるいは，人手で作成されたコーパスと形態素解析結果とを比較することにより発見することが前提になっている．そのため，形態素解析の誤りを発見することはコストが高い作業となっている．一方，本稿では，従来の研究で人手で発見されることが前提となっていた解析誤り(特に過分割)を，生のコーパスを形態素解析した結果から半自動的に抽出することを目指し，そのための統計的尺度を提案する．更に，本稿では，人手により誤りが修正済みのコーパスに対しても提案尺度を適用し，人手で除去しきれていない誤りを検出することも試みる．もし，人手修正されたコーパスから誤りを検出できたら，提案尺度はコーパス作成・整備の際の補助ツールとして役立つことになる．以下，章では，本稿が検出対象とする誤り(過分割)の定義を述べ，それを検出するための統計的尺度について述べる．章では，提案尺度を，公開されている形態素解析システム，および，人手で修正されたコーパスに適用した結果について述べると共に，提案尺度を各種統計的尺度と定量的に比較する．章では，提案尺度の有効性などを論じる．章は結論である．</section>
  <section title="過分割を検出する統計的尺度">まず，形態素解析システムの解析結果における分割誤りを分類し，検出対象である過分割を定義づける．次に，過分割を検出する統計的尺度について述べる．</section>
  <subsection title="形態素解析結果における分割誤り">分割点という用語を導入し，それを用いて，形態素解析結果における分割誤りを分類する．まず，長さnの文字列Sを，S=c_1,c_2,...,c_nとする．このとき，Sのi番目の分割候補点とは，文字c_iと文字c_i+1の間をいう．また，分割候補点が分割点であるとは，その分割候補点が形態素境界である場合をいい，その分割候補点は分割されているという．たとえば，「S=休憩室」とすると，1番目の分割候補点は「休」と「憩」の間であり，2番目の分割候補点は「憩」と「室」の間である．更に，Sが「休憩/室」のように分割されているとすると，2番目の分割候補点は分割点である．次に，形態素解析結果の分割誤りとは，正解と形態素解析結果とで，分割点が異なる場合をいう．そして，分割誤りのなかで，過分割とは，正解で分割されていない分割候補点をシステムが分割している場合をいう．また，分割不足とは，正解で分割されている分割候補点をシステムが分割していない場合をいうここで定義した過分割と分割不足とは，形態素境界(分割点)に注目したものであるので，形態素自体に注目した過分割/分割不足の定義とは異なる．たとえば，では，分割の誤りを以下の3種類に分類している．なお，「正」で示される分割は，当該文字列の正しい分割を示し，「誤」で示される分割は，形態素解析システムによる誤った分割を示す．この定義では，形態素境界を直接取り扱えないので，本稿での目的には不適切である．なお，語境界交差型の分割誤りは，本稿の定義では，過分割と分割不足が複合したものとなる．たとえば，上の例では，「が」と「ま」の間の分割候補点が分割不足であり，「ん」と「延」の間の分割候補点が過分割である．．たとえば，「休憩室」の分割の正解が「休憩/室」であるとき，システムが「休/憩室」と分割したとすると，1番目の分割候補点(「休」と「憩」の間)は過分割であり，2番目の分割候補点(「憩」と「室」の間)は分割不足である．なお，形態素解析結果の誤りには，他には品詞付けの誤りがある．これは，形態素への分割自体は正しいが，品詞が間違った場合である．この誤りの検出については，分割不足と同様に，本稿では考察しない．</subsection>
  <subsection title="過分割の検出尺度の定義">ここで定義する尺度は，文字列に関する尺度であり，与えられた文字列が分割される場合と分割されない場合とで確率を比較し，分割されない確率が高いほど大きな値をとる尺度である．そのため，この尺度の値が大きいような分割をされている文字列は，誤った分割(過分割)をされている可能性が高い．より厳密には，与えられた文字列をS=a_1,a_2,,a_k,b_1,b_2,,b_lとし，Sの二つの部分文字列(形態素)をA=a_1,,a_kとB=b_1,,b_lとするとき，は，以下で述べるように，文字列Sの形態素AとBへの切れにくさを表現している．ただし，とは，それぞれ，形態素の前後に付ける区切り記号であり，()は，文字列の生起確率である．すなわち，(,c_1,,c_k,)については，c_0=,c_k+1=とすれば，(,c_1,,c_k,)&amp;=&amp;()_i=1^k+1(c_i|c_0,,c_i-1)&amp;&amp;()_i=1^k+1(c_i|c_i-n+1,,c_i-1)eqnarrayである．ただし，適当なnにより，(c_i|c_0,,c_i-1)を(c_i|c_i-n+1,,c_i-1)で近似する．()式で定義した尺度L(A,B)は，文字列S=ABの形態素AとBへの切れにくさを表している．すなわち，L(A,B)が大きいときには，SはAとBには分割されがたい．なぜなら，Lの分子は，Sが一つの形態素として(区切り記号が途中に入らずに)生起する確率であるのに対して，分母は，Sが二つの形態素に分れて独立に生起する確率であるから，Lが大きいほど，Sが一つの形態素として生起する比が大きいからである．そのため，Lが大きいほど分割が誤っている可能性が高い．すなわち，a_kとb_1の間の分割は過分割である可能性が高い．たとえば，章の実験によると，「S=休憩室」のとき，「A=休」，「B=憩室」とすると，(,休,憩,室,)=-24.3，(,休,)=-12.9，(,憩,室,)=-29.4であるので，L(休,憩室)=-24.3+12.9+29.4=18.0となる．一方，「A=休憩」，「B=室」とすると，(,休,憩,)=-13.7，(,室,)=-10.4であるので，L(休憩,室)=-24.3+13.7+10.4=-0.20となる．二つを比較すると，L(休,憩室)&gt;L(休憩,室)であるので，尺度Lによると，「休憩室」については，「休/憩室」という分割の方が「休憩/室」という分割よりも起り難い．すなわち，過分割である可能性が高い．これは我々の言語感覚と一致する．</subsection>
  <section title="実験"/>
  <subsection title="実験概要"/>
  <subsection title="実験2：過分割検出精度の定量的評価">教師なし学習により何か統計的に興味のある言語現象を発見するような応用においては，新聞記事などの大規模なコーパスが比較的用意に入手できるので，訓練コーパスのサイズは深刻な問題ではない．これは本稿における過分割検出の場合でも同様である．しかし，教師あり学習の場合には，訓練コーパスを構築するのはコストが掛るため，なるべく小さな訓練コーパスであることが望ましい．そこで，実験2では，主に教師あり学習の場合を対象として，訓練コーパスのサイズと過分割検出精度との関係を調べた．ただし，教師なし学習の場合についても，教師あり学習と比較するために，訓練コーパスのサイズと過分割検出精度との関係を同様に調べた．</subsection>
  <subsection title="実験3：各種尺度の比較">実験3では，尺度L，相互情報量，尤度比，改良Dice係数，Yates補正された^2，の五つの尺度について，過分割の検出精度を比較した．ここで，尤度比，改良Dice係数，Yates補正された^2は，において，有用な括弧表現を抽出するために有効であるとされた尺度である．また，尤度比は，でも，2文字間の連関の尺度として，漢字列の分割に有効であることが示されている．以下では，まず，本実験のテストコーパスとした京大コーパスBについて，そこでの分割点の出現頻度の統計について述べる．この出現統計は，あとで，各尺度間の過分割検出精度の違いを説明するときの資料に用いる．次に，各尺度を定義し比較する．</subsection>
  <section title="考察と今後の課題"/>
  <section title="おわりに">本稿では，形態素解析結果から過分割を検出する統計的尺度を提案した．その尺度は，文字列に関する尺度であり，文字列が分割される確率と分割されない確率との比に基づいていて，分割されにくい文字列ほど大きな値となる．したがって，この値が大きい文字列は過分割されている可能性が高い．提案尺度を使うことにより，規則に基づいた形態素解析システムの解析結果から高精度で過分割を検出できたし，人手で修正されたコーパスに残る過分割も検出できた．また，提案尺度の過分割検出精度は，その他の統計的尺度と比べて高かった．これらのことは，提案尺度が，形態素解析システムの高精度化に役立つこと，及び，コーパス作成・整備の補助ツールとして役立つことを示している．今後は，提案尺度を実際に使い，形態素解析システムの精度向上やコーパスの整備に役立てたい．</section>
</root>
