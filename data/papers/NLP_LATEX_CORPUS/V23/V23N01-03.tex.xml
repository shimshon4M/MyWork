<?xml version="1.0" ?>
<root>
  <jtitle>テキストチャットを用いた雑談対話コーパスの構築と	対話破綻の分析</jtitle>
  <jauthor>東中竜一郎船越孝太郎荒木雅弘	塚原裕史小林優佳水上雅博</jauthor>
  <jabstract>対話システムが扱う対話は大きく課題指向対話と非課題指向対話（雑談対話）に分けられるが，近年Webからの自動知識獲得が可能になったことなどから，雑談対話への関心が高まってきている．課題指向対話におけるエラーに関しては一定量の先行研究が存在するが，雑談対話に関するエラーの研究はまだ少ない．対話システムがエラーを起こせば対話の破綻が起こり，ユーザが円滑に対話を継続することができなくなる．しかし複雑かつ多様な内部構造を持つ対話システムの内部で起きているエラーを直接分析することは容易ではない．そこで我々はまず，音声誤認識の影響を受けないテキストチャットにおける雑談対話の表層に注目し，破綻の類型化に取り組んだ．本論文では，雑談対話における破綻の類型化のために必要な人・機械間の雑談対話コーパスの構築について報告し，コーパスに含まれる破綻について分析・議論する．</jabstract>
  <jkeywords>対話システム，非課題指向対話，雑談，破綻，エラー分析</jkeywords>
  <section title="はじめに">近年Twitterによる人間同士の短文のやりとりを始めとしたインターネット上の大量の会話データから自動知識獲得が可能になったことや，高性能な音声認識機能が利用可能なスマートフォン端末を多くの利用者が所有するようになったことで，雑談対話システムへの関心が，研究者・開発者側からも利用者側からも高まっている．対話システムが扱う対話は大きく課題指向対話と非課題指向対話に分けられるが，雑談は非課題指向対話に分類される．課題指向対話との違いについていえば，課題指向対話では対話によって達成する（比較的）明確な達成目標がユーザ側にあり，一般に食事・天気など特定の閉じたドメインの中で対話が完結するのに対し，雑談では，対話をすること自体が目的となり，明確な達成目標がないなかで多様な話題を扱う必要がある．また，課題指向対話では基本的に対話時間（目標達成までの時間）が短い方が望ましいのに対し，雑談ではユーザが望む限り対話を長く楽しめることが望まれる．そのため，適切な応答を返すという点において，雑談対話システムは，課題指向対話とは異なる側面で，様々な技術的困難さを抱える．これまで，雑談対話システムの構築における最も大きな技術的障壁の1つは，多様な話題に対応する知識（応答パターン）を揃えるコストであった．上記のように，この問題はインターネットからの自動獲得によって解消されつつある．また，ユーザを楽しませる目的だけであれば，システムがおかしな発言をしてしまうことを逆手にとって，適切な応答を返しつづける技術的な困難さを（ある程度）回避してしまうことも可能である．その一方で，雑談対話には，ユーザを楽しませるという娯楽的な価値だけでなく，ユーザとシステムの間の信頼関係の構築や，ユーザに関する情報（ユーザの好みやユーザの知識の範囲）をシステムが取得することでユーザによりよいサービスを提供することを可能にする，遠隔地にいる老齢ユーザの認知・健康状態を測定したり認知症の進行を予防する，グループ内のコミュニケーションを活性化し人間関係を良好にする，といった工学的・社会的価値が存在する．このため，情報爆発，少子高齢化，生活様式の多様化と急激な変化による人間関係の複雑化といった諸問題を抱える現代社会において，雑談対話技術の更なる高精度化，すなわち適切な応答を返しつづける能力の向上が今まで以上に求められている．雑談対話の高精度化のためには，現状の技術の課題をエラー分析によって特定することが必要である．しかしながら，課題指向対話，特に音声対話システムにおける，主に音声誤認識に起因するエラーに関しては一定量の先行研究が存在するが，テキストのレベルでの雑談対話に関するエラーの研究はまだ少なく，エラー分析の根本となる人・機械間の雑談対話データの蓄積もなければ，そのデータに含まれるエラーを分析するための方法論・分類体系も十分でない．雑談対話システムがその内部でエラーを起こせば対話の破綻が起こり，ユーザが円滑に対話を継続することできなくなる．しかし，対話システムは，形態素解析，構文解析，意味解析，談話解析，表現生成など多くの自然言語処理技術の組み合わせによって実現され，かつシステム毎に採用している方式・構成も異なるため，システム内部のエラーを直接分析することは困難であるし，システム間で比較したり，知見を共有することも容易ではない．そこで我々はまず雑談対話の表層に注目し，破綻の類型化に取り組んだ．本論文では，対話破綻研究を目的とした雑談対話コーパスの構築，すなわち人・機械間の雑談対話データの収集と対話破綻のアノテーションについて報告する．そして，構築したコーパスを用いた分析によって得た破綻の分類体系の草案を示し，草案に認められる課題について議論する．以降，節で対話データの収集について説明する．今回，新たに対話データ収集用の雑談対話システムを1つ用意し，1,146対話の雑談対話データを収集した．節及び節では，上記の雑談対話データに対するアノテーションについて述べる．24名のアノテータによる100対話への初期アノテーションについて節で説明し，その結果を踏まえて，残りの1,046対話について，異なりで計22名，各対話約2名のアノテータが行ったアノテーションについて節で説明する．節では，節で説明した1,046対話に対するアノテーション結果の分析に基づく，雑談対話における破綻の類型について議論する．節で関連研究について述べ，節でまとめ，今後の課題と展開を述べる．</section>
  <section title="雑談対話データの収集">本研究は，ProjectNextNLPの対話タスクの活動の一部として行われた．そのため，データ収集も対話タスクの参加者を中心に行った．本タスクに参加したのは，表に示す大学・企業を含む15の拠点からの総勢32名である．これは，対話システムに関する国内のプロジェクトとして最大級の規模である．雑談対話の収集は，本研究のために新たに設けた専用のWebサイトinaba/projectnext/で行った．このWebサイトでは，NTTドコモが一般公開している雑談対話APIphone/analysis/chat/を用いた雑談対話システムが稼動しており，Webブラウザでアクセスすることで，テキストでの雑談を行える．このサイトでは，ユーザが10発話を入力すると対話が終了し，対話ログが出力されるようになっている．サイト側ではユーザ管理を行っておらず，ユーザが自己の対話を纏めて後日提出することによって，ユーザと対話ログの対応が取れるようになっている．図に雑談対話収集サイトのスクリーンショットを示す．各拠点の参加者および参加者の知人にこの雑談対話システムと対話をしてもらい，全部で1,146対話を収集した．収集は2014年8月2日から31日の間に行った．対話をする際には，図に示す「対話ガイドライン（10箇条）」に沿うように教示をした．これは，現状の雑談対話システム技術が成熟していないこともあって，破綻だらけの対話ばかり収集されてしまわないためである．ユーザ毎の対話数は1から40までばらつきがあるが，全体のユーザ数は100名を超えて表は収集された雑談対話データの統計情報である．収集した雑談対話の一例を以下に示す．はシステム発話，Uはユーザ発話を表す．=-1mmこんにちは！声かけてくれるのを待ってたんだ。今日は最高気温36度だって。暑いねえ最高気温は１７度が予想されます？？いやいや猛暑ですよ猛暑に備えてますか？うん、日傘さしたり、水飲んだり、クーラー入れたりしてるクーラーは快適ですねうん、会社だと朝はつけられないから死にそう会社は冷房が効きますよねえ昼間は効くね。ここはパソコンがいっぱいあるからないと大変動きが悪いですそうなの？こっちは快適だよパソコンは使い勝手が悪いです</section>
  <section title="初期アノテーション">収集した雑談対話データ全体に対して対話破綻をアノテーションする前に，その一部について初期アノテーションを行った．具体的には，1,146対話からランダムに100対話を抽出し，タスク参加者の中で全100対話のアノテーションを行える24人によってアノテーションを行った．作業期間は2014年10月7日から17日の間である．このアノテーションの目的は，残りの1,046対話に対して，1対話あたり何人のアノテータを割り当てるのが妥当かを検討することである．ここで作成したデータセットのことを以後init100と呼ぶ．アノテーションについては，どのようなエラーがあるのかを網羅的に分析したいという目的に鑑み，トップダウンな破綻の分類は示さず，直感に従って・・の3分類でアノテーションするように指示した．それぞれの意味は以下の通りである．多人数でアノテーションする場合には，の判断の分布によりそれらの中間状態を表現できるため，必ずしものような中間レベルを表すカテゴリを用意する必要はないが，アノテータがかかを迷うケースで判断に時間がかからないようにする目的でを導入した．アノテーションには，図に示す専用のツールを使用した．ツールでは，非文のチェックの他に，各発話に対してコメントを記入できるようになっている．また，先行する文脈のみに基づいて対話破綻のアノテーションが出来るように，1発話アノテーションする毎に，次のユーザ発話とシステム発話が表示されるようになっている．なお，破綻（あるいは）とタグをつけた後の発話をどうアノテーションするかについては，対話の先頭から，破綻とタグ付けされた発話を含むこれまでの文脈を「ありき（与えられたもの）」として，アノテーションするように教示した．すなわちアノテータは，破綻があったところで対話がリセットされたとはせず，破綻も含めて先行文脈として作業を行った．非文の定義は，「文法エラーなどにより日本語としての意味をなさない文」とし，会話体で許容される程度の「助詞落ち」や「ら抜き」は非文に該当しないとした．また，全く意味が通らない発話であれば当然を付けることになるが，非文であっても発話意図が汲み取れるのであれば，やを付けてもよいとした．</section>
  <subsection title="非文の割合">使用した対話システムの応答生成は，人がすべて確認したテンプレートによるものではないので，非文の発生を完全に無くすことはできない．そこで，アノテーション時の非文のチェックの結果に基づき，文法レベルでの対話コーパスの品質を確認しておく．最初のプロンプトを除くシステム発話全1,000発話において非文のチェックが付けられた発話の分布を表に示す．表の1行目は，ある発話に対して非文と判断したアノテータの数を表す．2行目は各人数のアノテータに非文と判断された発話の数を表す．1人でも非文と付けた発話は1,000発話中127あったが，過半数（13人以上）が非文と付けたものはわずか7発話しかなかった．実際のデータを見ると，非文と判定したのが数名である発話はどれもアノテーション指示者からみて非文と判断するようなものではなかった．（「ルールは多いです」「価値観は欲しいです」「話し相手に飢えます」など，不自然ではあるが『日本語としての意味をなさない文』とまでいえない発話であった）．仮に過半数以上が非文としたものを真の非文とし，それ以外をアノテーションの誤りとすれば，init100での非文の発生率は1%未満である．今回の初期アノテーションでは，24人全員が100対話を同じ順序でアノテーションしている．その中で最も非文であると判定したアノテータが多いシステム発話は「熱中症に気をつけか？？」というものであった．この発話は100対話中で4回発生しており，4発話に対して非文とチェックした人数は，出現順で19人，17人，13人，9人であった．つまり過半数が破綻と付与した7発話のうち3発話は同一の発話であった．同一内容の発話に対して「非文」とアノテーションした人数が大きくばらついているのは，既に非文と付けた発話に対する非文のチェックをアノテータが省略したことが原因と思われる．非文のチェックは，任意とも指示していないが，厳守するようにも指示しなかった．また，非文のチェックボックスは任意入力のフィールドであったコメント欄の直前に置かれていた（図参照）．このため，非文のチェックがアノテーションの主たる目的ではなく補助的な作業であったことから，後の方になるほどチェックを省略されてしまった可能性が高い．その事を考慮して，仮に四半（7人）以上が非文と判定したものを「真の非文」と考えても，非文の発生率はおよそ2%である．このことから，今回のデータ中のシステム発話の品質は，個々の発話の日本語文法のレベルでは，当面の研究に必要なレベルが担保されていると考える．</subsection>
  <subsection title="アノテータ間の一致度の分析">init100に対して，24人のアノテータが付与したラベル，，の割合を表に示す．24人のアノテータ間の一致の程度を測るためにFleissのを算出すると，0.276であった．も参考にすると，この値の解釈は「ランダムではないが，よく一致しているともいえない」とするのが妥当である．をに含めて，2値のアノテーションとして計算すると，0.396とやや一致の具合が高まる．をに含めるとは0.277にしか改善されないため，はにより近いことが分かる．24人のアノテータをCohenの値をもとにWard法で階層クラスタリングを行うと，図のようになった．距離の定義やクラスタリングの手法を変えると，2つのクラスタの中でのまとまり方は細かく変わるものの，大きな2つのクラスタ間での移動はほとんど見られなかった．図~に示す24人のアノテータの分布を見ると，をつける傾向の大小で，前述の2クラスタが分かれていることが見て取れる．2つのクラスタの中でのFleissのを求めると，それぞれ0.414（11人）と0.474（13人）であり，これらの値は「適度に一致している」と解釈できる．前者，図の左側のクラスタ，をC1と呼ぶ．このクラスタはを多く付けるアノテータのクラスタである．後者，同右側のクラスタ，をC2と呼ぶ．このクラスタはを少なく付ける破綻に厳しいアノテータのクラスタである．表に，24人のアノテータの属性（性別，年齢層，職業，関係性）の分布を示す．職業の「学生」は大学生および大学院生，教員は大学教員を指す．関係性の「当事者」は，対話タスクに参加している研究者（会社員，教員，学生）のことで，関係者は，対話タスクには直接参加していないが，前述の当事者と同じグループで対話システムに普段から関わりのある仕事をしていることを意味する．無関係は，当事者と知己であるが，対話システムの研究開発とは普段関わりがないことを指す．性別・年齢層には，C1とC2の間に目立った違いは見て取れない．職業・関係性をみると，教員・当事者がC1側にやや多い印象を受けるが，Fisherの正確確率検定ではC1,C2間に統計的に優位な差はない（いずれもp&gt;.2）．従って，表に示した属性だけでは，新規のアノテータがどちらのグループに属するかを予測することは難しく，実際にアノテーションを行ってもらって傾向を把握するしかない．24人のアノテータからランダムにN人を選び出したとき，ラベルの分布がどれだけ全体の分布から離れているのかを表したグラフを図に示す．横軸はNの数で，縦軸はKullback-Leiblerdivergenceの対称平均の値である．黒丸が1,000回サンプリングした際の平均値を示す．下向き三角は1,000回中の最大値，上向き三角は1,000回中の最小値を表す．アノテータが1人から2人になる段階で，平均値からの乖離は半分近く縮まり，あとは，なだらかに24人の分布に近寄っていくことが分かる．図に，の各ラベルを付与された数毎の発話数のグラフを示す．左側のグラフは集計結果をそのまま示したもので，横軸が，ある発話について付与された特定のラベルの数（0から24）を表し，縦軸が，そのような発話の度数を表す．右側のグラフは，解り易さのため，左側のグラフを加工したものである．0から24までのラベルの数を5区間に区切り，各区間の積算値をプロットしてある．このグラフから，破綻ラベルが過半数以上に付与されてる発話の数は少なく，人により揺れが大きいことが読み取れる．また過半数以上がを付与している発話はほとんどないことも分かる．については一致し易いが，について一致しにくいということを表している．とを併せて計数した場合のグラフは，図中ののグラフを左右反転させたものに等しくなる．の数と，とを併せた数とが12対12で半分に割れた発話の分析も行った．すると，表面的には間違ってるとは言えないけれども，違和感がありそうな応答が多かった．「こういうことは普通ここでは言わない」という印象は持つものの，なぜそれを言わないかの説明が難しいものが多い．また，発言の意図が読みにくそうな発話，ユーザの話を聞いていないと感じられる発話，社会的に問題がある発話，ふざけているようにも見える発話なども判断が割れていた．これらの判定を分析することは，対話における認知の研究として学術的に面白い課題となり得る．以下は，評価が半分に割れた発話（下線部）を含む対話の例である．=-1mm	他に好きな楽器はありますか？	サックスがいいですね	サックスは木管楽器なんですよね	相性がいいですね	台風は大丈夫でしたか	台風は必要です	雨は必要ですよね	朝から雨が降るのですこれは発話の意図が読みにくいため，「それがどうしたのか」という印象を受ける発話である．=-1mm	夏って感じがします	海は騒がしいですよねえ	海に行くと盛り上がりますもんね	海は静かなんですよねー	騒がしいのか静かなのかどっちですか	海はサイコーですよねえ	サイコーですねえこれは人によっては，質問に答えずにごまかしているように感じられるだろう発話である．</subsection>
  <subsection title="コメントに基づく破綻の分類">init100中の一部の対話について，アノテータによって対話破綻箇所に付与されたコメントを人手で分類したところ，大きく「同じ内容の繰り返し」「矛盾した内容」「発話として唐突」「ユーザ発言内容の無視」「質問に答えていない」に分類できることが分かった．上記以外にも口調の唐突な変化などが，問題のある現象として観察された．さらに詳しい分類については節で述べる．</subsection>
  <section title="残りの対話へのアノテーション">init100に対するアノテーション結果について，タスク参加者で議論を行った結果，残りの1,046対話（以後，rest1046と呼ぶ）のアノテーションについては，1対話につき2人で実施するという結論に至った．2名とした理由は以下の通りである．人的・経済的コストの面から，アノテーションにかかる作業量は最小限が望ましい．アノテーションのコストを最小化できるのは1名でアノテーションを行う場合であるが，この場合，アノテータ間の揺れのために，破綻とされるべき発話が見逃されてしまう可能性がある．よって，複数名が望ましい．前述の分析でアノテータは大きく2つのクラスタに分かれることが分かっている．これらの2つのクラスタから1名ずつ割り当てることで，見逃しを最も効率的に減らせる可能性がある．実際に，init100にアノテーションをした24人からランダムにN人をランダムに選んだ場合と，C1とC2の両クラスタからN/2人ずつ選び出した場合とで，図と同じ方法でラベル分布の距離を比較すると，図に示す結果になる．C1，C2のクラスタから1人ずつ，計2名選んだ場合の結果は，全体からランダムに3人選んだ場合と4人選んだ場合の中間程度になっており，より少ない人数で全体での分布に近い結果を得られることが分かる．1,046対話をランダムに11個のサブセット(a--k)に分割した．a--jの10個のサブセットはそれぞれ100対話を含み，最後のサブセットkだけが46対話を含む．アノテーションには，22名のアノテータの協力が得られることになった．22名のうち19名が，init100に対するアノテーションに参加していたアノテータである．まずこの19名について，図のクラスタに基づき，2つの大クラスタC1およびC2からなるべく1名ずつのアノテータが割り当てられるように，サブセットkを除く10サブセットに割り当てた．その後残りの3名を同10サブセットに割り当てた．1名当りの分担量を2サブセットと固定して22名を10サブセットに割り当てたので，i,jの2つのサブセットだけ3名のアノテータを割り当てた．サブセットkについては，余力のある2名に割り当てた．アノテータが各対話にアノテーションを行う方法は，init100の場合（節）と同じである．アノテーションの結果の分布を表に示す．init100よりも，の割合が増えているが，とを併せて見た場合には，init100のときとほぼ同じ分布と考えられる．また，各サブセット毎のFleissの値を表に示す．2名のアノテータが同じ判断傾向を持つかどうかによって，サブセット間で値にばらつきが生じているが，全体平均としてはinit100とほぼ同じ値になっている．rest1046全体について，2名のアノテータが付けたラベルの組み合わせ毎の頻度と割合を図に示す（計算にあたりサブセットi,jの3人目のアノテーションは利用していない）．先に述べたように，アノテータはを多く付ける傾向のクラスタC1と，そうでないクラスタC2とに大きく分かれており，各サブセットに割り当てるアノテータは，なるべく2つのクラスタから1名ずつ選ぶようにした．図では，整合した判定である(,)の組よりも，矛盾した判定である(,)の方が数が多くなってしまっているが，これは上記の割当の結果を反映しているもので想定内の結果であると同時に，破綻の捉え方が人によって異なることを改めて示している．rest1046のアノテーションに際しては，担当する対話の最初の5対話と最後の5対話，計10対話だけ，，をつけた箇所には，必ずその判断理由をコメントとして書くことを求めた．これにより，総数で3,748個，異なりで2,468個のコメントを得た．アノテーション作業は2014年12月2日から20日の間に行った．</section>
  <section title="対話破綻の類型化">本節では，収集したデータを基に策定を進めている対話破綻の分類体系の，現時点での案と課題について議論する．節ではinit100に対して付与された，の破綻アノテーションに付随するコメントを大まかに分類した結果を示したが，ここではそれを土台としつつ，rest1046に対して付与されたコメントを分析し，雑談対話における対話破綻の類型化を行った結果を示す．対話が，ある発話によって破綻するとき，原因はその発話だけにあるとは限らない．もちろん，その発話が文法的におかしなものであったり，意味がわからなかったりする場合もある．しかし，その発話が文として正しいものであったとしても，「相手の発話に対して，このように応答するのはおかしい」場合や，「前に言ったことと矛盾している」という場合においても，対話の継続が困難となる．このように，対話の破綻を分析するに当たっては，当該発話そのものに原因があるのか，または広い意味での文脈（直前の発話，対話履歴，状況なども含む）に原因があるのかを特定する必要がある．また，破綻が生じた原因が存在する範囲が同じであっても，その内容は様々である．必要な情報の欠落や曖昧性のために意味が特定出来ない場合や，意味が特定できても文脈と矛盾する場合，矛盾はしなくても冗長な場合などがある．そこでまず，破綻の根拠となっている情報に基づき大分類を決定し，その後，破綻の種類を表す小分類を決定した．大分類は，破綻を認定する際にどの範囲に関連した破綻であるかという基準で，以下の4つに決定した（図参照）．発話当該システム発話のみから破綻が認定できるケース．典型的には非文が該当する．「意味不明」というコメントの場合でも，この発話単独で意味がわからないのではなく，前の発話や文脈との関係で意味が取れない，というケースがあるので注意した．応答直前のユーザ発話と当該システム発話から破綻が認定できるケース．典型的には，発話対制約違反や，前発話の話題を無視した応答などが該当する．あくまでもそれまでの対話の流れは無視して，1つ前の発話との関係だけで判断した．文脈対話開始時点から当該システム発話までの情報から破綻が認定できるケース．典型的には，対話の流れから判断できる不適切な発話・矛盾する情報の提供・不要な繰り返しなどが該当する．環境破綻原因が，「環境」すなわち「外部要因」にあり，上記の3分類には当てはまらないケース．典型的には，一般常識に反するシステム発話が該当する．</section>
  <subsection title="対話破綻の分類体系案">表に示す対話破綻の分類体系案を考案した．「発話」・「環境」の大分類については，検討の段階で多数を占めた「誤り」と分類される発話に対して，より分解能が高まるようにそれぞれ小分類を設定した．一方，「応答」・「文脈」の大分類においては，に倣い，対話における協調の原則であるGriceの公準に基づき小分類を設定した．Griceの公準は，量・質・関係・様態の各公準からなるもので，対話において参与者が遵守するように期待されている原則である．つまり，ユーザの直前の発話あるいはこれまでの対話履歴を受けてなされるシステム発話が守ると期待されている原則であるので，一般的にはこの原則が守られていないと，ユーザはシステムの発話意図を推測することができずに，対話が破綻すると考えられる．は，課題指向対話のエラー分析にGriceの公準を用いて，一定の成果を得ている．アノテータのコメントに「答えていない」「無視しすぎ」「唐突すぎる」といった「違反」を示唆するものが多かったことも，対話の「規範」であるGriceの公準を用いた理由の1つである．破綻を分類することの一義的な目的は，ユーザが破綻であると考えた箇所で，システム内部のどこに問題（エラー）があったのかを探ることであり，それを知ることによって，システムの改善が可能になる．しかしながら，一般にシステム内部でおきたエラーを対話の表面から直接特定することは難しい．そこで，システムが何をしてしまったのか（どういう問題行動をしたか）をGriceの公準に基づいて分類することを基本とした．ただし，問題行動の原因が比較的解り易いエラーについては，「応答」大分類中の「誤解」および「文脈」大分類中の「不追随」として追加した．以下で，大分類毎に，小分類について事例を基に説明する．</subsection>
  <subsubsection title="「発話」の小分類">基本的に，システム発話の生成過程に問題がある場合が該当する．「非文」の概念に近い．構文制約違反（構文制約違反）必須格の欠如や助詞の誤りなどが原因で，発話内容が理解できないもの．例）「S:熱中症に気をつけか？？」意味制約違反（意味制約違反）意味素性の異なる語の組合せなどが原因で，発話内容が理解できないもの．例）「S:便乗に重ねますよねえ」不適切発話（不適切発話）発話として機能を果たさないもの．例）「S:ちゅっちゅ」</subsubsection>
  <subsubsection title="「応答」の小分類">前発話との関係において協調の原則が守られていない破綻を，Griceの公準に基づいて分類する．誤解は内部的なエラーであり，対話行動自体の問題ではないが，比較的解り易いので小分類として加えた．量の公準違反（情報過不足）前発話に対して，応答に含むべき内容が欠落している，あるいは，不要な内容が含まれており，これが会話の進行を阻害する場合．例）「U:ラーメンが好きです」→「S:豚骨で有名ですね」質の公準違反（不理解）前発話と矛盾する内容の発話．前発話の話題に追随しながらも，前発話で示された命題内容と矛盾する命題内容を含む場合．なお，意味理解の失敗などによって生じる「ずれ」を含む発話は，関係の公準違反とする．例）「U:最近，山登りを始めました」→「S:山登りが出来ないのですか？」関係の公準違反（無関係）発話対として不自然な発話で，これによって会話の継続ができなくなっている状況．あるいは，前発話の意味内容と関係しない内容の発話を行った場合．相手の発話を無視している状況を含む．例）「U:それでは，趣味はなんですか？」→「S:最後に旅行されたのはいつですか？」様態の公準違反（意図不明）発話意図の曖昧性のため，会話の継続ができなくなっている状況．例）「U:退屈は嫌いですか？」→「S:退屈は心ですね」誤解（誤解）内容の解釈エラーによって，不適当な発話になっている状況．多義語の意味の取り違いなどが該当する．例）「U:スイカを食べたらお腹を壊します」→「S:スイカで買い物できてるのですか？」</subsubsection>
  <subsubsection title="「文脈」の小分類">基本的には，「応答」の小分類と同様の考え方で，協調の原則に対する違反で分類する．量の公準違反（不要情報）与える情報が何もない無情報発話，あるいは，これまでの文脈に出現した発話の不要な繰り返し．例）海に行っていないという文脈において：「S:海に行かないなあ」質の公準違反（矛盾）これまでの文脈と矛盾する内容の発話．また，これまでの話題に対する態度（Positive/Negativeの極性）が急に転換する発話．例）人間関係が薄いという文脈において：「S:人間関係は深いです」関係の公準違反（無関係話題）これまでの文脈における話題から逸脱する発話．話の主たる話題ではなく，直前のユーザ発話中の話題語でない単語から話を展開させてしまうような場合が典型例．例）定期券を無くすという文脈において：「U:首からかけておくとか？」→「S:左右に振りますよねえ」様態の公準違反（関連性不明）話題は継続しており，直前発話との関係だけで見ると意味が通るように見えるが，それ以前の文脈を踏まえると，その発話の意図が理解できない状況．例）薬の話題において：「S:薬は大丈夫ですね」話題展開への不追随（不追随）ユーザからの話題の展開が起こっているにも関わらず，それに追随できていない状況．例）ドイツの話題の後：「U:あなたは海外経験ありますか？」→「S:ドイツは小売価格が高いです」</subsubsection>
  <subsubsection title="「環境」の小分類">会話の文脈以外の原因で生じた破綻を分類する．無根拠（共通基盤欠如）根拠のない，一方的な主張．例）「S:マグロは鮮度が悪いですよねえ」矛盾（一般常識欠如）一般的に正しいと信じられている常識と矛盾する発話．例）「S:熱中症はいいですね」非常識（社会性欠如）罵詈雑言など，対話相手との社会的関係を破壊する発話．あるいは口調（人格や社会的属性）が突然変化する発話．例）「S:プールはいいですね」→「U:探しとくね」→「S:知らんのかい」</subsubsection>
  <subsection title="分類体系草案の課題">考案した分類体系は一見よく纏まっており，それなりの一致度で分類を行えることが期待できた．そこで，破綻アノテータが付けたコメントを参考にしながら，タスク参加者で予備的に破綻の分類を行ってみた．しかしながら，予想以上にアノテータ間で一致しないことがわかった（値で0.1から0.3程度の範囲）．個々人の主観に任せた破綻アノテーションでは低めの一致度でもよいが，破綻の分類についてはなるべく客観性の高い分類ができることが望ましい．破綻の分類においてアノテータ間の不一致が大きい原因が，主にアノテーションの手順や教示，アノテータの訓練不足などにあるのか，それとも分類体系自体にあるのか，まだはっきりしていないが，少なくとも以下のような課題が分かっている．検討に際しての分類作業は排他的に一発話・一分類で行ったが，複数の大分類に渡ると思われる破綻がいくつか見られた．例えば，非文・発話対制約違反・話題からの逸脱のように，複数の大分類に渡る破綻が同時に起こることがあり得る．発話の意味制約違反については，典型的な例は「発話」レベルのものと判断しやすいが，解釈次第であることも多い．例えば，「仕事は真面目ですね」という発話は，「仕事」を一般的な概念として捉えれば意味制約違反と判断できるが，ある個人の「業績・仕事ぶり」を意味すると解釈すれば，発話のレベルでは問題がないことになる．「文脈という概念を持ち込むと，文の意味と発話（話し手）の意味を区別することはもはやできない」という見方に立てば，そもそも意味制約違反の小分類を「発話」のレベルに設けることが不適切かもしれない．誤解は，直前の発話に対するものという定義から「応答」の大分類に含めていたが，実際には文脈まで見ないと誤解とは言えない場合も見つかった．これも「応答」でなく「文脈」に含めるか，あるいは「応答」「文脈」の両方に設ける必要があると思われる．分類の問題というよりは，多分に破綻の認定自体の問題であるが，読み手側の知識不足や，表現に対する不慣れによって解釈できなかったため，破綻とされていることもある．例えば，「みんっ」という発話は，意味のある表現に解釈できない人と，「見ない」という意味に解釈できる人がいる．この場合，結果的に，破綻の分類も人により異なってくる．「応答」「文脈」のレベルに導入したGriceの公準に基づく分類は，特に一致率が低かった．これは現状のシステムが出力する発話が，自分のことなのに伝聞で話すなどの不自然な様態や，対話相手のキャラクタが突然変わるなど，通常の人同士の対話で見られないようなものであるために，解釈が難しいことも一因であると考えている．Griceの公準に基づく類型化は，典型例の整理・説明には有用であっても，あまり典型的ではない破綻の分類には適していない可能性がある．そうだとすれば，小分類のレベルで，各公準違反を事例別にさらに細分化するか，あるいは別の視点での分類を用意する必要がある．</subsection>
  <section title="関連研究">本研究では，非課題指向型対話（雑談対話）に焦点を絞っているが，課題指向型対話システムの文脈では対話システムのエラー分析は活発に行われてきており，いくつものエラーの分類体系が提案されている．まず，Clarkの提案するコミュニケーション階層モデルに基づくエラーの分類体系が挙げられる．Clarkによれば，コミュニケーションのエラーは4つのレベルからなっている．チャネルレベル，信号レベル，意図レベル，会話レベルである．チャネルレベルとはやり取りが開始されているかどうかに関わる．信号レベルとはシンボルのやり取りに関わり，意図レベルは対話相手の意図の認識に関わる．会話レベルは，共同行為に関わるものである．下位レベルのエラーが起きていれば，上位レベルでもエラーとなり(upwardcausality)，上位レベルにエラーがなければ，下位レベルにエラーがないとされる(downwardevidence)．このような階層に基づいて，会議室予約システムの不理解によるエラーを分析するという研究がなされている．また，スマートホームとレストラン情報案内というドメインにおいて，同様の分析もなされている．PaekはClarkの4つの階層が対話システムのエラー分析に一般性を持っているということを，教育や医療といった複数分野での対話分析の事例から議論している．本論文ではGriceの公準をエラーの類型化に用いているが，課題指向型対話システムのエラー分析においてもGriceの公準は利用されてきた．Dybkjretal.dybkjaer1996griceおよびBernsenetal.bernsen1996principlesはフライト情報案内システムのエラー分析をGriceの公準および独自の対話分析から得られた知見をもとにエラーの類型化を行っている．たとえば，Griceの公準以外の要素として，対話の非対称性，背景知識，メタ対話能力に関わるエラーが挙げられている．電話応答システムにおける対話評価の観点として，Griceの公準に基づく要素を導入することも提案されている．特定のモデルや理論をベースにするのではなく，特定のシステムや対話ドメインの対話を綿密に分析することによりエラーを類型化した例も多い．AberdeenandFerroはフライト情報案内システムの分析により，命令に応答しない，何度も同じプロンプトを表示するなどのエラーに類型化している．また，Greenらによって対話機能を持つサービスロボットについてもエラー分析がされており，ロボットに特有のエラーとして，動作と発話のタイミングがずれるというエラーや，指さしなどのポインティング動作のエラーなどが独自のカテゴリとして分類されている．Dzikovskaらは，教育対話システム(tutoringsystem)のエラーの類型化を行っている．対話システムはいくつかのモジュールから構成される．このため，エラーの類型化の一つの方法として，エラーを起こしたモジュールがどれかによって分類する研究もある．たとえば，音声認識，音声理解，発話生成，音声合成といった単位でエラーを類型化する．音声認識によるエラーが多ければ，音声認識モジュールを改善すればよいという方針に繋がる．モジュール構成が明確で，各モジュールのエラーが比較的独立と考えられるのであれば，このような類型化の手法は有効である．本研究の類型化の手順はのものに近い．Griceの公準を用いながら，対話コーパスについて独自の分析を行いエラーを類型化しているからである．本研究とDybkjrらのものとの違いは，本研究が雑談対話システムを扱っていることである．課題指向型対話システムに比べタスクやドメインの制約が少ない雑談対話において，エラーの定義，どのようなエラーが起こりうるかは把握されてこなかった．本研究は，そのような背景に基づき，雑談対話コーパスの作成およびその類型化を行ったものである．なお，本研究ではClarkの階層モデルは用いていない．これは，主にテキスト対話を扱っていることによる．テキストのやり取りであれば，チャネルレベルと信号レベルのやり取りは基本的に担保されており，残りの二つの階層のみに基づいて分類をすることになる．雑談対話の内容の複雑さを鑑みればこの粒度は粗い．また，モジュールごとにエラーを分析する方法論についてであるが，雑談対話システムの構成は複雑であり，単体のモジュールにエラーの分析を起因させることは難しい．また，エラー分析として対話システムの内部構造に立ち入らない方が，システムに依らないエラー分析が可能であり，特定のシステムに依存しない，汎用性の高いエラーの類型化が期待できる．なお，雑談対話システムのエラー分析は，対話破綻の自動検出につながるものとして期待されている．自動検出ができれば，対話システムが自身の発話を行う前に，その発話に問題があれば，別の発話候補に切り替えるといったことが可能になる．また，何らかのエラーを伴う発話をしてしまった後に，自身の誤りに気づいて，それを訂正するといったことも可能となる．課題指向型の音声対話対話システムの文脈では，音声認識，発話理解，対話管理などの各モジュールから得られる特徴量から対話に破綻が起きているかどうかを判定する手法がいくつか提案されている．たとえば，WalkerらやHermらは，コールセンタにおける通話について，問題が起こっているかどうかを数ターンで判定する判定器を機械学習の手法で構築している．対話中のユーザの満足度の遷移を推定する研究もされている．これらは雑談対話を扱ってはいないが，目的意識は本論文での取り組みと近い．雑談対話においては，Chaiらがユーザの対話行為の系列の情報を用いて，問題のある質問応答ペアかどうかの判別を行っている．Xiangらは，対話行為に加え，感情の系列を用いることで，雑談対話における問題発話の検出を行っている．Higashinakaらも，雑談対話システムの発話の結束性をさまざまな素性から推定する手法を提案している．しかしながら，これらの研究は精度がいまだ高いとは言えず，また，対話破綻の類型化なども行われていない．今後エラー分析を詳細に行うことで，対話破綻の原因を明らかにし，高精度な破綻検出を実現したいと考えている．</section>
  <section title="おわりに">本論文では，雑談対話におけるエラー分析にむけた人・機械間の雑談対話コーパスの構築と対話破綻のアノテーションについて報告した．そして，構築したコーパスに含まれる破綻を分析し，考案した破綻の分類体系について議論した．アノテーション方法の開発にあたっては，破綻の認定における主観性の高さを認めつつ，許容可能な範囲のコストで，客観的な分析の対象となりうる有用なデータを得られるように，著者らを含む15拠点からの研究者で議論・試行し，工夫を施した．今回報告した方法と結果は，破綻に関する今後のコーパス構築に限らず，同じように主観性の高い別種の言語現象についてのコーパス構築においても手法開発の参考として寄与するものと考える．構築したコーパスでは，対話を破綻させているシステムの発話に対して，複数の作業者によってラベルとコメントが付与されている．破綻の判断については，事細かなガイドライン・判定方法は示さず，各個の主観に基づいたアノテーションを行った．このためアノテーションの一致率はそれほど高くないが，システムとの対話に対して人間が不満を持つ点，持たない点，その個人差について，興味深いデータを収集できた．また，アノテータ間の一致についての分析からは，破綻でない発話よりも破綻発話のほうが判定が揺らぎがちであること，アノテータが大きな傾向の違いを持つグループに分かれる可能性があること，などが明らかになった．一方で，今回のコーパス構築手法には，改善の余地があることも確かである．破綻の判定が揺らぐ要因の1つとして，ユーザが想定した対話相手のイメージの違いが存在する．今回は「待合室や飛行機などで隣り合った見知らぬ人」とだけ指定したが，性別・年齢・性格など，ユーザができる想定には依然大きな自由度があった．例えば，子供染みた発言や冗談は，想定する相手によって許容できる範囲が変わってくる．今後のデータ収集においては，対話相手のイメージをもっと細かくユーザに指定する，あるいは対話前にユーザが想定した相手のイメージ，対話後に残った相手のイメージを，対話データと同時に収集すると，より踏み込んだ分析が可能になるだろう．アノテーションにおける，破綻を含む先行文脈の扱いについても，さらなる検討が望まれる．例えば，今回は破綻があったところで対話がリセットされたとはせず，破綻も含めて先行文脈として作業を行うように指示をした．これにより，会話が進んでいけばいくほど破綻が認定されやすくなった可能性があるが，一度破綻したことで文脈上の制約が減り破綻が認定されにくくなっていた可能性もある．これまで人・機械の雑談対話を体系的に収集し，整備したコーパスは存在せず，今回の収集は初の試みである．今回構築したコーパス中の雑談対話は，1つの雑談システムだけを用いて収集したものであるので，破綻の種類の網羅性やその分布の普遍性について言えることには限りがあるが，システム構築に使用した雑談APIはに基づく，現時点で最も複雑な雑談システムの1つであり，少なくとも網羅性については他のシステムを利用した場合と同等かそれ以上，確保できていると考えている．今後，他の雑談システムを使い，本論文で示した方法でデータの収集とアノテーション・分析を行っていくことで，破綻の分布の普遍性を高め，現在の雑談技術・自然言語処理技術が抱える課題により深くアプローチできると期待している．本稿で示した破綻の分類体系の草案にはまだ改善しなければならない点があるが，破綻の種類を事例的に整理したことで，雑談対話で起こりうる問題について一定の見通しを示すことができた．雑談対話において破綻の種類を分類しようする際に何が問題となるのかを明らかにしたことも，今回の取り組みで得た成果の1つである．今回構築したコーパスは，破綻検出技術の開発・評価データとして利用することができる．雑談システム自体はそれぞれの目的や利用状況，対象ユーザの想定などが異なるため，直接に比較することが難しく，システム内部の技術的課題について研究者間で議論することが難しい．しかし，雑談システムの入出力であるテキストだけを対象とし，複数の機関が並行して共通のデータで破綻検出技術について開発とエラー分析を進めれば，より一般性の高い議論ができるし，そこから各々の雑談システム自体の技術課題に対しても知見を得られるだろう．また開発された破綻検出技術は，それ自体，多くの研究者・開発者にとって有用なツールを提供できるだろう．今後は，別システムでのデータの収集や破綻の分類体系の改良を行いながら，破綻検出技術の研究を進めていきたい．</section>
</root>
