<?xml version="1.0" ?>
<root>
  <title>日本語マニュアル文における条件表現「と」「れば」「たら」「なら」から導かれる制約</title>
  <author>森辰則龍野弘幸中川裕志</author>
  <jabstract>本稿では、日本語マニュアル文の理解を行なう際に必要となるゼロ代名詞の照応問題を解決する一つの手がかりとして，マニュアル文の操作手順においてしばしば現れる条件表現の語用論的性質を利用することを提案する．条件表現の前件と後件を動作主の種類と述語の性質により分類するという方法により，実際の例文を調べた結果，後件に関して，1)「と」と「れば」，「たら」と「なら」がそれぞれ同じ分布を示すこと，2)「と」「れば」と「たら」「なら」は相補的な分布になっていること，が分かった．この性質より，動作主に関するゼロ代名詞の照応に利用できる制約ならびにデフォールト規則が得られた．</jabstract>
  <jkeywords>日本語、マニュアル文、接続助詞、と、れば、たら、なら</jkeywords>
  <section title="条件表現の 主">に関する制約日本語の条件表現には，「れば」，「たら」，「なら」，「と」があり，これらの形式を特徴づける基本的性格は異なっている．それぞれの基本的な特徴をまとめると表のようになる．このうち，我々が調べた範囲で見ると，マニュアル文では「たら」，「なら」はあまり用いられていなかった．また，「れば」に比べて，「と」の出現頻度が高かった．以下の節ではそれぞれの場合について考察する．</section>
  <section title="背景と目的">今日，家庭向けの電化製品から，ビジネス向けの専門的な機器まであらゆる製品にマニュアルが付属している．これらの機器は，複雑な操作手順を必要とするものが多い．これを曖昧性なく記述することが，マニュアルには求められている．また，海外向けの製品などのマニュアルで，このような複雑な操作手順を適切に翻訳することも困難である．そこで，本稿は，上記のような問題の解決の基礎となるマニュアル文を計算機で理解する手法について検討するが，その前に日本語マニュアル文の理解システムが実現した際に期待される効果について述べておく．日本語マニュアル文の機械翻訳において言語-知識間の関係の基礎を与える．自然言語で書かれたマニュアル文の表す知識の論理構造を明らかにし，これをマニュアル文作成者にフィードバックすることによってより質の良いマニュアル文作成の援助を行なえる．マニュアル文理解を通して抽出されたマニュアルが記述している機械操作に関する知識を知識ベース化できる．この知識ベースは，知的操作システムや自動運転システムにおいて役立つ．さて，一般的な文理解は，おおむね次の手順で行なわれると考えられる．文の表層表現を意味表現に変換する．この意味表現の未決定部分を決定する．は，一般的に「文法の最小関与アプローチ」といわれる考え方に則って行なわれる．この考え方は，文を形態素解析や構文解析などを用いて論理式などの意味表現へ翻訳する際，統語的知識や一部の意味的知識だけを利用し，以後の処理において覆されない意味表現を得るというものである．よって，得られた意味表現は一般に曖昧であり，文脈などにより決定されると考えられる未決定部分が含まれる．従来のに関する研究は，記述対象や事象に関する領域知識を利用して，意味表現の表す物事に関する推論をして，意味表現の未決定部分を決定するという方向であった(など)．これは，知識表現レベルでの曖昧性解消と考えることができる．領域知識を用いる方法は，広範な知識を用いるため，曖昧性解消においては有用である．しかし，この方法を用いるには，大規模な領域知識ないし常識知識をあらかじめ備えておく必要があるが，現在そのような常識・知識ベースは存在していない点が問題である．したがって，この問題に対処するためは，個別の領域知識にほとんど依存しない情報を用いることが必要となる．さて，本稿では，対象を日本語マニュアル文に限定して考えている．そして，に基づき，上記の個別の領域知識にほとんど依存しない情報として，言語表現自体が持っている意味によって，その言語表現がマニュアル文に使用される際に顕在化する制約について考察する．ここで重要な点は，以下での考察が個別のマニュアルが記述している個別領域(例えば、ワープロのマニュアルならワープロ操作固有の知識)を問題にしているのではなく，マニュアル文でありさえすれば，分野や製品を問わずいかなるマニュアル文にも通用する制約について考察しようとしている点である．しかし，領域知識にほとんど依存しないとはいえ，言語的な制約を適用する話し手，聞き手などの対象が，解析しようとしているマニュアル文では何に対応しているかなどの，言語的対象とマニュアルで述べられている世界における対象物の間の関係に関する知識は必要である．以下では，この知識を言語・マニュアル対応関係知識と呼ぶ．ここでは，対象としているのが日本語マニュアル文であるから，言語学的な対象と記述対象の間の関係に関する情報などこの種の情報は「解析中の文章が日本語で書かれたマニュアルに現れる文である」ということ自身から導く．よって以上の手順をまとめると，本稿で想定している日本語マニュアル文の理解システムでは，「文法の最小関与アプローチ」による構文解析と，言語表現自身が持つ語用論的制約と，言語・マニュアル対応関係知識に基づいて，マニュアル文を理解することとなろう．さて，意味表現の未決定部分を決定する問題に関しては，ゼロ代名詞の照応，限量子の作用範囲の決定や，もともと曖昧な語の曖昧性解消など，さまざまな問題がある．日本語では主語が頻繁に省略されるため，意味表現の未決定部分にはゼロ代名詞が多く存在する．そのため，ゼロ代名詞の適切な指示対象を同定することは日本語マニュアル文の理解における重要な要素技術である．そこで，本稿では，ゼロ代名詞の指示対象同定問題に対して，マニュアル文の操作手順においてしばしば現れる条件表現の性質を利用することを提案する．というのは，システムの操作に関しては，今のところ基本的に利用者とのインタラクションなしで完全に動くものはない．そこで，ある条件の時はこういう動作が起きるなどという人間とシステムのインタラクションをマニュアルで正確に記述しなければならない．そして，その記述方法として，条件表現がしばしば用いられているからである．一般に，マニュアル文の読者，つまり利用者の関心は，自分が行なう動作，システムが行なう動作が何であるか，自分の動作の結果システムはどうなるかなどを知ることなので，条件表現における動作主の決定が不可欠である．従って，本稿では，マニュアルの操作手順に現れる条件表現についてその語用論的制約を定式化し，主に主語に対応するゼロ代名詞の指示対象同定に応用することについて述べる．もちろん，本稿で提案する制約だけでゼロ代名詞の指示対象同定問題が全て解決するわけではないが，条件表現が使われている文においては有力な制約となることが多くのマニュアル文を分析した結果分かった．さて，本稿で問題にするのは，操作手順を記述する文であり，多くの場合主語は動作の主体すなわち動作主である．ただし，無意志の動作や，状態を記述している文あるいは節もあるので，ここでは，動作主の代わりにのいう「主(ぬし)」という概念を用いる．すなわち，仁田の分類ではより広く(a)対象に変化を与える主体，(b)知覚，認知，思考などの主体，(c)事象発生の起因的な引き起こし手，(d)発生物，現象，(e)属性，性質の持ち主を含む．したがって，場合によってはカラやデでマークされることもありうる．若干，複雑になったが非常に大雑把に言えば，能動文の場合は主語であり，受身文の場合は対応する能動文の主語になるものと考えられる．以下ではこれを主と呼ぶことにする．そして，省略されている場合に主になれる可能性のあるものを考える場合には、この考え方を基準とした．以下，第2節では，マニュアル文に現れる対象物と，依頼勧誘表現，可能義務表現が使用される場合に言語学的に導かれる制約について記す．第3節では，マニュアル文において条件表現が使用される場合に，言語学的に導かれる制約を説明し，さらに実際のマニュアル文において，その制約がどの程度成立しているかを示す．第4節は，まとめである．</section>
  <section title="マニュアル文における基本的制約">マニュアルを構成する最も基本的なオブジェクトおよびその言語的な役割は大別すると次のようになる．これらを考慮するとマニュアル文で用いられる人称は次のようになる．次に，基本的な表現形式についての考察をする．マニュアルの基本的な構成は説明の仕方の説明，操作手順の説明，アフターサービスに関する説明等からなる．これら各々の文脈に現われる文は性質が異なる．操作手順の説明では，話し手の動作は既に完了しているが，説明の仕方の説明，アフターサービスに関する説明では，その限りではない．そこで，以下の考察では，マニュアルの主要部である操作手順の説明に現れる場合を考える．まず，依頼文について考える．例えば，「ここで設定したホスト名は，NCDXサーバで発生するNFSの要求に内部的に使用されることに留意して下さい．」のように，マニュアル文での依頼対象は人称の制約(制約2)から利用者となる．従って次の制約が得られる．また，マニュアルにはある動作に関する許可，可能，義務などの状態を表現するモダリティがしばしば現われる．ここでは，可能表現と義務表現について考える．可能表現の例文を示す．「この設定により，Telnetで接続する場合にTelnetホスト名の入力を省略できます．」可能表現を持つ文は，ある動作をすることが可能であることを示すとともに，その動作を行なうことに関して，主に選択権があることを示す．また，義務表現を持つ文は，主がある動作をしなければならないことを示しているが，これは，主には選択の余地があり，その動作を行なわない可能性があるからである．よって，次の制約が得られる.これより，()の場合「省略する」動作を行なうのが利用者であることが得られる．</section>
  <subsection title="「れば」，「たら」，「なら」の使用例についての考察">ここでは，「と」以外の条件表現である「れば」，「たら」，「なら」のマニュアル文での使われ方について考察する．「なら」は用例が少ないので，特に，「れば」と「たら」の使い分けについて述べる．まず，による「れば」「たら」「なら」の意味を列挙しよう．ここで述べた各接続助詞の意味からすぐに分かることは，条件節すなわち前件で「れば」「たら」「なら」が使われる場合，主節すなわち後件において依頼表現の可能かどうかである．まず，普遍的な因果関係が記述される場合は，後件は前件の発生にともなって必然的に生じる結果であるから，原理的には話し手自身がその結果に対して持つ意見が介入する余地がない．依頼は話し手自身の持つ主観的なものであるから，後件に依頼はこない．「れば」が普遍的因果性を表すということは，「れば」の後件には基本的には依頼表現が現れないことを意味する．ただし，前件が状態表現の場合は仮定的になる，とあることから，その場合は後件に依頼表現が現れる可能性がある．次に仮定を表すとされる「たら」「なら」の場合について考えてみる．前件すなわち条件節で仮定が表現される場合は次のように考えられる．すなわち，仮定した人物は話し手である．話し手は，この仮定された状況において起こりそうなことやあるべき動作などを後件すなわち主節で記述する．つまり，後件は話し手の願望や予想が記述されている．このことは，仮定法一般に言えることである．したがって，後件で話し手の願望とみなせる依頼が現れることは可能性が高い，と言える．まとめると，「たら」「なら」は基本的には仮定を表すから，後件では依頼表現が現れる可能性が高いことになる．このことを実例で見てみよう．まず，「れば」と同じように因果性を記述する「と」では，実例を調べた結果，主節で依頼表現は現れなかった．後に示す実例文の分析でも「れば」接続の文で主節が依頼表現のものは非常に少ない．ただし，「れば」では，前件が状態の場合には後件で依頼が可能であり，それに該当する例として次のものがある．「ウィンドウを見る必要がなければ，ウィンドウをリサイズ・コーナを使用して小さくするのではなくアイコンにして下さい．」この文の前件は，状態を表しているので，上で述べたように主節で依頼表現が現れていると考えられる．()の「なければ」を「なかったら」や「ないなら」に代えた文を考えてみれば分かるように，「たら」，「なら」も同様に依頼を表すことができるのことも，上の説明から予想されることである．これは，ごく大雑把な傾向であるが，もう少し詳しく，「れば」「たら」「なら」の使い分けを考えるために，主節つまり後件を次のような観点から分類する．まず，操作手順の説明の場合と限定しているので，メーカーの動作は完了していると考えられる．従って，主となりうるオブジェクトは利用者とシステムである．そして，「と」と同様に意志性/無意志性の観点から，意志用法であるものを動作，無意志用法であるものを状態と2つに分ける．さらに，完了などの相表現，可能表現，形容詞，形容動詞など本質的に状態であるものも状態に分類している．本稿で調べた範囲ではこの分類で状態であることを認識できたが，その他の状態と認識されうる表現が存在する可能性はあり，その際には状態を表示する表現について追加が必要になる．現状では，この分類より，可能な主と動作状態の組合せは，次の4つになる．利用者の動作利用者の状態システムの動作システムの状態この4つの状態をそれぞれの接続助詞で接続すると各々16通りの接続が考えられる．以下では，この分類に従って，「れば」，「たら」，「なら」を前件及び後件の性質により分類し考察する．表に「れば」の分類，表に「たら」の分類，「なら」は例文数が少ないが参考までに表に「なら」の分類を示す．[btp]table*[btp]table*[btp]table*これらの基本的特徴に，マニュアルで用いられる文であるということを勘案して，表，表，表について各々検討していく．まず，全体を概観すると，「れば」と「たら」，「なら」とでは，使用傾向が大きく違うことが分る．「れば」では後件が利用者の動作になりにくく，逆に「たら」，「なら」では「れば」とは相補的に後件が利用者の動作になりやすい．また，全般的に，前件がシステムの動作である文が非常に少ない．このことの理由は，現在のシステムのほとんどが，利用者の働きかけにより何か他の動作を行なったりある状態に移行したりするからであると考えられる．前件がシステムの状態である文でも，そのシステム状態は利用者の動作に起因するものであるというタイプが多い．「れば」文の場合，前件が利用者の動作である文が多い．これは，「れば」文の基本的性質である因果関係は，動作の方が表しやすいためと考えられる．さらに，前件がシステムの状態である文も，そのシステム状態は利用者によって引き起こされた結果であるという文が多い．この理由は，動作的側面を残しているため，上記の場合と同様の理由で「れば」で表しやすいからであろう．以下では，接続の種類により差が明確に出た後件の性質の分類に基づき考察していく．</subsection>
  <subsubsection title="後件が利用者の動作である文について">ここでは，後件が利用者の動作になるタイプについて考察する．この分類になる割合は，「れば」の場合約5%，「たら」の場合約90%，「なら」の場合，文例が少ないが100%である．まず，これらの接続助詞で接続される文では，後件に利用者の動作をとることができるという点で，「と」文と根本的に異なる．後件が利用者の動作である場合，すなわち，利用者が主である場合は，ある種の依頼を表す．なお，マニュアル文において，前件が，後件がであることを「」と表記する．ただし，,は，「(利用者ないしはシステム)の(動作ないしは状態)」を表す。利用者でもシステムでもよいときは，単に動作，あるいは状態と書く．動作$\rightarrow$利用者の動作について「れば」1例，「たら」33例まず，前件が利用者の動作である「れば」の文はほとんどない．そこで頻度の高い「たら」の文を無理に「れば」文に変えた次の文について考えてみよう.「そのモジュールのデバッグが終了すれば，指定のファイルに書き込んで下さい．」ただし，原文は(シャープ株式会社,p.108)であり、「終了すれば，」が「終了したら，」となっている．この文は，少なくとも筆者らには「終了すれば」ではなく「終了したら」とする方が自然である．その理由は，「れば」の基本的性質は，因果関係を表すからである．もう少し詳しく言うと，基本的に利用者に行動の選択権があるマニュアル文において，二つの利用者の動作が何らかの必然的な因果関係を持っているとは考えにくいからである．一方，「たら」では仮定的表現と時間的経過の性質が反映される．前件が利用者の動作の場合は時間の経過に沿って，前件がシステムの動作の場合は仮定的な事態の発生によって，利用者にある動作を促していると考えられる．従って，「動作利用者の動作」では「たら」を使うのが適当であろう．前件がシステムの動作となる「たら」例をあげる．「使用中に機器が停止したら安全装置が作動してないか調べて下さい．」(リンナイ株式会社,p.31)利用者の状態$\rightarrow$利用者の動作について「れば」4例，「たら」7例，「なら」8例先に例示した()が「れば」の例である．「れば」接続の文()については既に述べた通りである．これまた，既に述べたような「たら」「なら」文の主節に依頼表現がくる例を以下に示しておく．「縫いおわったら，布をひろげます．」(蛇の目ミシン工業株式会社)「なら」の場合，次の例の「必要なら」など出現の仕方がほぼ決まっている．「必要なら，ボーレート，パリティ，フロー制御，データ長及びストップビット数の設定を変更して下さい．」システムの状態$\rightarrow$利用者の動作について「れば」6例，「たら」13例，「なら」1例この型については，「れば」も「たら」も文例が存在しているが性質は大きく異なる．「なら」は用例が少ないのでここでは省略する．「たら」は今までと同様に，時間的推移や仮定を表している．一方，「れば」の場合は異なる．この分類に出てくる表現は次のように異常に関する処置についてである．「それでもエラーが出るようであれば，``A''を押して処理を中止しMS-DOSにもどり，前項「重要なエラーメッセージ」の処置を試みます．」異常とその処置の対応がはっきりしている場合，表現の因果性を強くして利用者に処置の仕方を表すために「れば」を用いる傾向があると考えられる．後件が利用者の動作となる文についてみてきたがまとめると次のようになる．「れば」の場合，後件に利用者の動作が来ること自体が特殊で，もし来たとしても前件が状態の方が自然である．「たら」の場合は，前件には束縛されない．</subsubsection>
  <subsubsection title="後件がシステムの動作である文について">後件がシステムの動作，すなわち，後件の主がシステムである文では，「れば」の使用頻度が非常に高い．全体としてこの分類になる割合は，「れば」では約45%，「たら」では約3%，「なら」はなしである．よって，ここからの考察は主として「れば」についておこなう．動作$\rightarrow$システムの動作について「れば」53例，「たら」0例前件の主が利用者の場合，利用者の動作の結果としてシステムが何かの動作を行なうという文となり，「れば」の基本的性質と一致する．一方，システムの動作からシステムの動作は利用者にとって直接関係ない情報であると考えられる．そのため，前件の主がシステムの場合の文例が少ないと考えられる．一方，「たら」，「なら」は因果関係を表さないため，ここでは使われないと考えられる．システムの状態$\rightarrow$システムの動作について「れば」38例，「たら」2例この分類でよく用いられている用法は，システムがある状態であると自動的に次の動作にシステムが移るというものである．システムの状態が利用者の操作の結果であれば，利用者の動作の結果として，システムがある動作を起こすという意味になるので，「れば」で表現しやすい．利用者の状態$\rightarrow$システムの動作について「れば」1例，「たら」0例利用者の状態を察知してシステムが何か動作を起こすような文である．これは，本来システムが知的であるか利用者の状態を検知するセンサー機能を有する場合に現れると考えられる．現在のところ，この意味での文例は見つかっていない．しかし，現在行なっている表層表現による分類では次の文がここに該当してしまう．「TRANSPORTでDECnetを選択するのであれば，NODEはDECnetnodeになります．」意味的には()は，NODEの利用者に対する選択肢がDECnetnodeだけであるということを表すのでこの分類には実際には対応しない．以上，後件がシステムの動作である文について見てきたが，まとめると，現在のシステムの動作は，利用者の動作の結果としての動作，システム内での動作という2通りがあり，いずれも，システムの動作は因果関係があるために「れば」で表現される．</subsubsection>
  <subsubsection title="後件が状態である文について">後件が状態である文では，「れば」の使用頻度が非常に高い．全体としてこの分類になる割合は，「れば」では約48%，「たら」では約7%，「なら」はなしである．よって，ここからの考察は主として「れば」についておこなう．後件の状態は利用者の状態とシステムの状態の2種類あるが，後件がシステムの状態である文は非常に少ない．一方，後件が利用者の状態である文例は非常に多く，これについて見るとほとんどが可能態の「〜できる」という形になっている．これは，マニュアル文では，話し手の視点はもっぱら聞き手である利用者に合わせているため，システムの状態は利用者の状態と一体化させて書かれていることが多いためであると考えられる．すなわち，システムの状態の多くは，利用者にとって「なにかすることができる」という選択権があることを示すために，利用者の状態の表現をとっていると考えられる．そのため，状態の分類について後件が利用者の状態である文は多く，システムの状態である文は少ないことが説明できる．以下，各々の場合を考察する．後件が利用者の状態のとき「れば」97例，「たら」3例先に述べたように後件の利用者の状態は「〜できる」という形が多い．前件が利用者の動作の場合，利用者の動作の帰結として利用者の状態，特に可能状態になるので，因果関係が成立していると考えられる．そのため，「れば」が用いられていると考えられる．前件がシステムの状態である場合，システムのある状態から予想される利用者の特定の状態への推移を表す.したがって，因果関係を表す「れば」を用いると考えられる．前件が利用者の状態である場合，その状態で利用者にできる動作を示す．既に述べたように前件が状態だと，「れば」の持つ普遍的因果性の意味会いが薄まるため，「れば」が用いられる．また，「たら」についても，利用者のある状態を仮定するとあることができるので，使用可能である．前件がシステムの動作の場合，調べた範囲では「れば」は見つからなかった．前件が動作であれば，「れば」は因果関係を表す．利用者の可能状態とは，マニュアルの書き手すなわち話し手の利用者すなわち聞き手への態度であり，「れば」の因果関係の意味と相容れないのが「れば」文がない理由であろう．「たら」では，システムの動作が終了したあと利用者がある状態になるということを表現しており，「たら」の時間的経過の性質を反映している．いずれの場合も，制約4により，可能態の主は意図を持ちうる利用者となる．後件がシステムの状態のとき「れば」25例，「たら」0例先に述べたように，後件がシステムの状態である文は，状態を利用者と一体化させて記述するため総じて少ない．前件が利用者の動作の場合，利用者の動作によりシステムがある状態になるという文になるので，因果関係が生じ「れば」が用いられる．前件がシステムの動作である場合，システムのとった動作の結果として，システムがある状態になるということで，「れば」の基本的性質に反しない．また，システムの動作が時間的に終ったあとで，システムのある状態になるということで，「たら」の性質にも反しない．前件がシステムの状態である場合，システムの状態からシステムの状態への関連を表すが，これについては，利用者は直接関与できないと考えられる．後件におけるシステムの状態が利用者の状態に直接結び付いていない限り，この表現は使われないと考えられる．前件が利用者の状態である場合は特殊で，と同様システムのあり方に依存し，システムが知的であるか，利用者の状態を察知するセンサー機能を有する場合に限られると考えられる．実際，システムの状態は，利用者の状態と一致させて記述されることが多く，文例は見つかってはいない．いずれの場合も，後件の主は，システムになると考えられる．後件が状態の場合，「れば」が用いられやすい理由としては，マニュアル文では，物事を確定的に記述する傾向があるためと考えられる．一方，「たら」は基本的には仮定の事態ないしは時間経過を表すために用いられる．時間経過を表現したい場合は，後件が状態であるため時間経過を表現することにはなりにくいことが，使用例が少ない原因のひとつであろう．また，仮定法の場合，後件が確定的状態になりにくいことも，「たら」が使われない理由のひとつであろう.後件が状態である文についてみてきたがまとめると，利用者の状態とシステムの状態は一体化されて記述され，そのため，利用者に選択権を持たせる「〜できる」という表現を用いる傾向がある．そして，利用者の選択権は，状況により必然的に生じるものであるという理由で「れば」が多く用いられていると考えられる．</subsubsection>
  <subsection title="デフォールト規則">今までの考察から，「れば」，「たら」，「なら」についてのマニュアルにおける使用方法に関する傾向が得られた．特に，主に注目すると文型と強い相関があることがわかる．そこで次のデフォールト規則を立てることができる．まず，「れば」については，「と」とほぼ同様の分布になるので以下のようになる．「たら」，「なら」については，これと相補的な分布をしているので，以下のようになる．前出の分布表から上記のデフォールト規則の予測の正しさを調べてみると，「れば」に関するデフォールト規則1は95.1%，デフォールト規則2は「たら」に対して89.8%，「なら」に対しては，文例が少ないものの，100%満足されている．よって，これらのデフォールト規則は十分妥当性を持っていると考えられる．もちろん，3.2節での分析に従った，よりきめの細かいデフォールト規則も可能だが，紙面の都合で，ここでは省略する.</subsection>
  <section title="おわりに">マニュアル文に現われる条件表現「と」，「れば」，「たら」，「なら」について言語学的，実証的考察を行ない，その性質について述べた．また，その性質から，各条件表現の後件の主について，制約ならびにデフォールト規則を提案し，十分妥当性を持つことを検証した．これらの制約やデフォールト規則を利用することにより，マニュアル文から知識獲得に必要不可欠なゼロ代名詞の照応候補の絞り込みなどを効率よく行なえると期待される．また，本稿で扱った条件表現は二つの単文が接続されたものであったが，複文が前件もしくは後件に含まれる場合も数は少ないが存在する．このような場合に関しても考察する必要があろう．@ifundefinednop#1など16冊．document</section>
</root>
