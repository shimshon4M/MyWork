<?xml version="1.0" ?>
<root>
  <title>自動構築した格フレーム辞書と先行詞の位置選好順序を用いた省略解析</title>
  <author>河原大輔黒橋禎夫</author>
  <section title="はじめに">省略・照応を高精度に解析する技術は、自動要約、機械翻訳、質問応答などの言語処理アプリケーションを高度化するために必要である。日本語における照応詞は省略されることがほとんどであるので、本論文では、省略された照応詞(ゼロ代名詞と呼ばれる)に注目し、その解析手法を提案する。省略解析における大きな手がかりとしては、次の2つが考えられる。選択制限のような意味的手がかりとしては、これまで、人、具体物、抽象物のような粗い意味属性しか利用されていなかった。これは、それ以上に詳細に記述されたリソースが存在しなかったからである。我々は、大規模な格フレーム辞書を自動的に構築しており、そこには個々の単語レベルで詳細な選択制限が記述されている。本研究では、この格フレーム辞書を選択制限に用いる。また、格フレーム辞書はゼロ代名詞の検出にも不可欠である。格フレームには、用言のとりうる格が記述されているので、入力文の述語項構造と格フレームとのマッチングの結果、格フレームに対応づけられていない格があれば、それがゼロ代名詞であると認識できる。従来の研究では、ゼロ代名詞の検出ができたと仮定し研究対象としていないか、人手で作成した格フレーム辞書を用いてゼロ代名詞を検出している。これと比べて、本研究では、自動構築した大規模格フレーム辞書を用いており、一般の文章に対して実用的に使える省略解析システムを作成することができる。省略解析のもうひとつの大きな手がかりは近距離特性であり、これを解析に反映しようという試みがこれまでもなされてきた。それらは、ゼロ代名詞と先行詞候補間の距離を機械学習の素性や確率モデルのパラメータとするものである。しかし、これらの手法の大きな問題は、距離をflatな尺度でしか計っていないということである。つまり、ゼロ代名詞と先行詞候補の間の文数や単語数を距離としており、文・文章に当然存在する構造を考慮するようなことを行っていない。本研究では、近距離特性を正確にモデル化するために、まず、従属節、主節、埋め込み文などといった文・文章中の構造を考慮して、ゼロ代名詞に対する先行詞候補の位置を分類する。そして、どの位置にある候補が先行詞となりやすいかを学習コーパスから取得し、それを順に並べることによって先行詞の位置選好順序を得るということを行う。本研究で提案する省略解析手法は、格フレーム辞書と先行詞の位置選好順序に加えて、先行詞の決定に関与するその他の要因を考慮するために機械学習による分類器を用いる。本手法は、この3つを統合的に用いるもので、先行詞の位置選好順に候補を調べ、分類器が正例と分類し、かつ、格フレームによる選択制限を満たす候補を先行詞として決定する。</section>
  <section title="関連研究">省略・照応解析の研究は、人手で作成した規則による手法とコーパスを用いた統計的手法に大別できる。人手で作成した規則による省略・照応解析手法は、照応詞と先行詞候補間の統語的および意味的な制約・選好に着目したルールを作成し、それを適用することにより省略・照応解析を行っている。これらは高い精度を実現しているが、中岩らは新聞記事のリード文や1文単位で独立した文、村田らは物語文や新聞記事のコラムなどを対象としているため、一般の文章で利用するには規則の修正が必要であると思われる。一方、機械学習や確率モデルを用いたコーパスベースの手法が提案されている。機械学習による手法は、照応詞と先行詞候補の間の文数や単語数を距離尺度として機械学習の素性のひとつにしている。これは前節で述べたように、文・文章中の構造を考慮していないことが問題である。また、これらの手法は、ある範囲の候補の中から、機械学習によって作成した分類器の出力スコアがもっともよいものを先行詞として選択している。しかし、分類器の出力スコアは、候補を独立に見た分類クラスの信頼度であり、候補間の比較に用いるのは直接的でなく根拠が薄いと思われる。確率モデルによる省略解析手法では、ゼロ代名詞と先行詞との間の文数をパラメータに組み込んでいる。しかし、パラメータ数の爆発を避けるために、距離属性が他の属性と独立であることの仮定を用いており、この妥当性は不明である。また、距離を文数のみで表しているので、同一文内照応の場合は距離による選好が働かないという欠点がある。日本語以外の言語でも照応解析は盛んに行われており、コーパスベースの手法が一定の成功を収めている。しかし、これらの手法もまた、距離尺度として、照応詞と先行詞候補の間の文数や単語数などしか用いていない。照応詞と先行詞候補の間の位置関係を構造的に捉えた手法として、Hobbsによるものがある。この手法は、構文木中を横断しながら先行詞を探索するモデルである。このモデルは、1文内の構造によって探索順序を制御しているが、複数文にわたって探索する場合の優先順序は扱っていない。</section>
  <section title="格フレーム辞書の自動構築とそれに基づく省略解析">本研究では、ゼロ代名詞の検出と、ゼロ代名詞の先行詞が満たすべき選択制限に、自動的に構築した格フレーム辞書を用いる。本章では、まず、この格フレーム辞書の構築方法について概略を述べる。次に、格フレーム辞書を用いた格解析、そして、その格解析結果を用いたゼロ代名詞検出手法について説明する。</section>
  <subsection title="格フレーム辞書の自動構築">大規模テキストから格フレーム辞書を自動構築する際の最大の問題は、用言の用法の曖昧性である。つまり、同じ表記の用言でも複数の意味、用法をもち、とりうる格や用例が異なる。例えば、「トラックに荷物を積む」と「経験を積む」は、用言は「積む」で同じであるが用法が異なっている。用法が異なる格フレームを別々につくるために、我々は、格フレーム収集の単位を用言とその直前の格要素の組とした。「積む」の例では、「荷物を積む」「経験を積む」を単位として格フレームを収集する。さらに、「荷物を積む」「物資を積む」などかなり類似している格フレームをマージするためにクラスタリングを行う。この格フレーム辞書構築の手順を以下に示す。テキストを構文解析する。構文解析結果から信頼度の高い述語項構造を抽出する。抽出した述語項構造を用言とその直前の格要素ごとにまとめ、(最初の)格フレームをつくる。以後、用言の直前の格要素を「直前格要素」、その格を「直前格」と呼ぶ。3でつくった格フレームをシソーラスに基づいてクラスタリングし、類似しているものをマージする。格フレームごとに必須格を選択する。直前格の用例数に対して、閾値以上の用例をもつ格を必須格とする。ただし、ガ格は常に必須格とする。*2ex4のクラスタリングでは、シソーラスとして日本語語彙大系を用い、2用例間の類似度を定義し利用している。2つの用例e_1,e_2間の類似度sim(e_1,e_2)は以下のように定義する。&amp;sim(e_1,e_2)=max_xs_1,ys_2,sim(x,y)[5pt]&amp;sim(x,y)=2Ll_x+l_yeqnarrayここで、x,yは意味属性であり、s_1,s_2はそれぞれe_1,e_2の日本語語彙大系における意味属性の集合である(日本語語彙大系では、単語に複数の意味属性が与えられている場合が多い)。sim(x,y)は意味属性x,y間の類似度であり、l_x,l_yはx,yのシソーラスの根からの階層の深さ、Lはxとyの意味属性で一致している階層の深さを表す。この類似度sim(x,y)は0から1の値をとる。本研究では、新聞20年分のテキストから自動構築した格フレーム辞書を用いる。この辞書には、約23,000個の用言が含まれており、1用言あたりの格フレーム数は約14.5個である。構築した格フレームの例を表に示す。表において、主体は意味マーカの主体を表し、それをもつ格は人、組織といった主体的要素をとることを示す。格ごとにそれぞれの用例がシソーラス上で主体属性以下にあるかどうかをチェックし、半数以上の用例が主体に属す場合に主体を付与している。</subsection>
  <subsection title="格フレーム辞書を用いた省略解析">本論文で提案する省略解析手法の概略は以下のとおりである。=0mm入力文を構文解析する。入力文中の各用言について、文頭から順番に以下の処理を行う。入力用言の述語項構造に合致する格フレームを選択する。格フレームと入力側の格要素との対応をとる。格フレーム中で対応づけられていない格をゼロ代名詞と認識する。	ゼロ代名詞の先行詞を同定する。*2ex手順2.1、2.2の処理は格解析であり、どちらにも以下のような難しさがある。格フレーム辞書には、用言ごとに複数の格フレームが存在するので、入力文の用言の用法にもっとも合致する格フレームを選択する。格フレームの選択を行うためには、入力の述語項構造が用言の用法を決定するのに十分な情報をもつ必要がある。十分な情報がなく、格フレームを選択できない場合は、入力用言のすべての格フレームについて、ゼロ代名詞の先行詞同定までの処理を行い、最後にもっともスコアが高かった格フレームに決定する(章参照)。格要素の格フレームの格スロットへの対応付けは、基本的には一致している格同士を対応付ければよいが、係助詞句や非連体修飾詞の場合には格が明示されていないので問題となる。以下では、手順2.1から2.3の処理を説明する。2.4の先行詞同定処理については章で詳細に述べる。</subsection>
  <subsubsection title="格フレームの選択">前節で述べたように、用言の用法の決定に対して、用言の直前格要素が重要な役割を果たす。特に、直前格がヲ格、ニ格の場合はその傾向が強い。また、直前格要素が主体の場合、例えば「主体が求める」という表現からは、用言の用法が決まらず、格フレームを選択することができない。これらの点を考慮して、格フレームの選択を行う条件を以下のように設定する。入力側の対象用言が直前格要素Cをもつ。直前格要素Cと直前格cmが以下のいずれかの条件を満たす。格フレーム選択アルゴリズム::直前条件cmがヲ格、ニ格のいずれかである。cmがヲ格、ニ格以外で、Cが意味属性主体をもたない。cmをもつ格フレームが存在し、cmの用例群とCの類似度が閾値以上ある。条件を満たす格フレームのなかで、もっとも類似度が高い格フレームを選択する。もっとも類似度が高い格フレームが複数存在するときは、格フレームを選択できない場合と同様に、それらの格フレームそれぞれについて後続の処理を行った後に格フレームを決定する。ここで用いる類似度は、直前格要素と格フレームの直前格の各用例との類似度のうちもっとも高いものとする。用例間の類似度は()式を用いて計算する。例として、図の2文目の「擁立する」を考える。「擁立」に対して表のような格フレームがある。入力側の表現「候補を擁立する」は上記の条件1,2を満たし、格フレーム「擁立(1)」が条件3を満たすので、格フレーム「擁立(1)」が選択される。</subsubsection>
  <subsubsection title="入力側格要素と格フレームの格との対応付け">選択された格フレームについて、入力側の格要素と格フレームの格との対応づけを行う。格要素に格助詞が付属している場合は、その格助詞の格に対応する格フレーム側の格に対応づける。被連体修飾詞や係助詞句のように、文中から格がわからない場合は、次表の格それぞれに対応させ、対応づけ全体のスコアがもっともよい対応を選択し、格を決定する。対応づけ全体のスコアは、各格の対応の類似度を足したものとする。各格の対応の類似度は「格フレームの選択」で述べた類似度と同様である。[2]二重主語構文の外のガ格を「ガ２」格と呼ぶ。</subsubsection>
  <subsubsection title="ゼロ代名詞の検出">格解析が終わったときに、格フレームに入力文の格要素と対応づけられていない格があり、それがガ格、ヲ格、ニ格のいずれかであれば、ゼロ代名詞であると認識する。図の「候補を擁立する」では、格フレーム「擁立(1)」が選択されており、格フレームのガ格とニ格に対応する入力側の格要素がないことがわかる。従って、システムはガ格とニ格をゼロ代名詞として検出する。検出されたゼロ代名詞に対する先行詞同定処理は章で述べる。</subsubsection>
  <section title="位置カテゴリの設定とその順序づけ">格フレームの選択制限によって、先行詞候補は、先行詞として適格なもののみに絞ることができるが、それでも複数残る場合が多い。一般に、ゼロ代名詞の先行詞は、ゼロ代名詞から距離が近いところにある傾向(近距離特性)があるので、この傾向を先行詞同定に利用することを考える。従来の研究では、ゼロ代名詞と先行詞の間にある文数や単語数などflatな距離でその近さを捉えており、従属節、主節、埋め込み文など文・文章中の構造を用いていない。本研究では、近距離特性を正確にモデル化するために、まず、文・文章中の構造を考慮して、照応詞に対する先行詞候補の位置を分類する。そして、どの位置にある候補が先行詞となりやすいかを学習コーパスから取得し、それを順に並べることによって先行詞の位置選好順序を得る。本章では、まず、学習コーパスにおける先行詞の捉え方を述べる。次に、ゼロ代名詞と先行詞候補の位置関係の分類(位置カテゴリと呼ぶ)を導入し、最後にその順序づけ、つまり先行詞の位置選好順序について述べる。</section>
  <subsection title="関係コーパスにおける先行詞の捉え方">本研究では、関係コーパスを用いて位置カテゴリの順序の学習や解析実験などを行う。このコーパスは、新聞記事に対して文章中の用言・サ変名詞に対する格関係、名詞間の関係、および共参照をタグづけしたものである。用言に対する格関係には、ゼロ代名詞の先行詞が含まれている。本研究で対象とするのは、関係コーパス中の379記事、3,695文である。用言(動詞、形容詞、名詞+判定詞)は11,149個出現し、そのうちゼロ代名詞を格要素とする用言は5,530個あり、ゼロ代名詞は6,602個であった。ゼロ代名詞となっている格の分布を表に示す。ゼロ代名詞のうち先行詞が記事中に存在するものは4,986個、先行詞が記事中に存在しないものは1,616個であった。記事中に存在しない先行詞は不特定の人々である場合が多かった。先行詞が記事中に存在するゼロ代名詞に対して、コーパスに直接タグづけされているもの以外にも先行詞が存在することがある。それは、タグづけされている先行詞と共参照タグで関係づけられているものや、同じ対象を指示する他のゼロ代名詞であり、それらも先行詞として捉える。例えば、図において、「甘い」のガ格はゼロ代名詞であり、その先行詞は前文主節の「とちおとめ」であるとタグづけされている。この「とちおとめ」と、前文従属節にある「とちおとめ」は共参照関係にあるので、前文従属節の「とちおとめ」も先行詞とみなす。また、対象文の「大きく」のガ格もゼロ代名詞であり、これも「とちおとめ」を指しているため、このゼロ代名詞も先行詞とみなす。先行詞が出現する文の位置を同一文、1文前、2文前、、n文前、のように分類したときの分布を表に示す。この表において、先行詞が複数存在する場合は、nの値がもっとも小さい先行詞の位置としている。次節で導入する位置カテゴリは、先行詞が対象文から2文前までの間にある場合を対象としている。これによって93.2%のゼロ代名詞がカバーされる。以下で述べる位置カテゴリの順序づけの学習、章で述べる分類器の学習は、関係コーパス中の279記事を学習コーパスとして用いる。章の実験では、残りの100記事をテストコーパスとして用いる。</subsection>
  <subsection title="位置カテゴリの設定">近距離特性を正確にモデル化するために、まず、ゼロ代名詞に対する先行詞候補の位置を分類した位置カテゴリを導入する。これは、従属節、主節、埋め込み文など文・文章中の節がもつ構造に着目して表のように設定した。表において、V_zはゼロ代名詞をもつ用言を示す。ここで、表において「」で囲まれた用言をV_aと呼ぶことにする(V_aの格要素が先行詞候補である)。``並列''とは、V_zとV_aが並列関係にあることを示し、``主節''とはV_aがその文の主節用言であることを示す。位置カテゴリはそれぞれ独立であり、``主節用言''は、主節属性をもつほかの位置カテゴリに含まれない主節の用言を表す。例えば、図の「甘い」については、ガ格がゼロ代名詞である。「移っている」は前文の主節であるので、その格要素である「中心」「栽培」「とちおとめ」はL_15、「大きく」は子用言なので「とちおとめ」を指すゼロ代名詞と「女峰」はL_5などとなる。</subsection>
  <subsection title="位置カテゴリの順序づけ">それぞれの位置カテゴリが、どれくらい先行詞をとりやすいかを関係コーパスから取得し、その順に位置カテゴリを並べることによって、先行詞の位置選好順序を得る。位置カテゴリLの先行詞のとりやすさを次式のようにスコア化する。[LL]例えば、図の「甘い」のゼロ代名詞に対して、前文の主節L_15に含まれる先行詞候補は「中心」「栽培」「とちおとめ」の3つであり、「とちおとめ」は先行詞であるので、この位置カテゴリのスコアは1/3となる。子用言の節L_5については、候補が「とちおとめ」を指示するゼロ代名詞と「女峰」の2つなので、スコアは1/2となる。学習コーパス279記事を用いて、スコアをゼロ代名詞の格ごとに集計し、スコア順に位置カテゴリを並べた。ガ格、ヲ格、ニ格の順序をそれぞれ、図、、に示す。ガ格のゼロ代名詞は、主節の親用言の格要素を先行詞としやすく、ヲ格のゼロ代名詞は、子用言の格要素を先行詞とすることが多いことなどがわかる。図の記事中の「擁立する」のガ格とニ格のゼロ代名詞に対する位置カテゴリの順序を図に示す。ガ格ではL_7が1位になるが、ニ格ではL_14が1位となり、格ごとに位置カテゴリの順序が異なっている。また、L_12のように、構造を考慮しない距離尺度でゼロ代名詞に近い位置であっても、位置カテゴリ順の上位にくるわけではないことがわかる。table*</subsection>
  <section title="分類器の利用">本研究では、先行詞の決定に関与する様々な要因を考慮するために機械学習による分類器を用いる。この分類器は、先行詞候補が先行詞として適格かどうかを判定する2値分類器である。これは、表に示した素性を用いて作成する。素性は、類似度や位置カテゴリなど、先行詞候補とゼロ代名詞の両方に関係するもの、格や意味属性など、先行詞候補とゼロ代名詞のどちらか一方にのみ関係するものからなる。これらは自動的に生成されるのでノイズが含まれる。類似度similarityは、格フレームの選択において格フレームが決定できない場合には計算できない。このような場合には、対象となっている用言のすべての格フレームに含まれる用例群と先行詞候補との類似度をとることにする。分類器としてはSupportVectorMachines(SVM)を用いる。訓練データは関係コーパスを用いて作成する。正例としては、ゼロ代名詞からもっとも近く、ゼロ化していない先行詞が存在する文と解析対象の文との間にある先行詞とし、負例は、その間にある先行詞以外の候補とする。もっとも近い先行詞が解析対象の文の2文前までに存在しないゼロ代名詞については、訓練対象から除くことにする。図の場合は、「甘い」のゼロ代名詞に対して、「大きく」のゼロ代名詞と前文の2つの「とちおとめ」を正例とし、それ以外の名詞を負例とする。</section>
  <section title="先行詞同定処理">本研究で作成した省略解析システム(節)の先行詞同定処理は、位置カテゴリの順序、格フレーム辞書、分類器を統合的に用いる。本手法は、格ごとに設定された位置カテゴリの順序に従って先行詞候補を調べ、格フレームの用例との類似度が閾値を越え、かつ、分類器によって正例と分類される候補を先行詞に決定する。先行詞としての適格さを計るために分類器のみを用いる手法も考えられるが、本研究では格フレームとの類似度を重要視し、分類器と類似度のand条件とした。これは、次節で述べる実験によっても有効性が示されている。本手法の先行詞探索範囲は、対象のゼロ代名詞がある文、1文前、2文前の3文とし、そこに含まれる形式名詞、副詞的名詞以外の名詞を先行詞の候補とする。本手法は、文頭に近い用言から文末に向かって順番に解析しており、すでに解析されたゼロ代名詞も候補に含める。先行詞探索範囲内に条件を満たす先行詞候補がみつからない場合において、格フレームに意味マーカ主体があれば、先行詞として「不特定:人」を出力する。これは文章中に存在しない不特定の人々を指すという意味である。候補と格フレームの用例との類似度は、格フレームの対象としている格に属する用例群と候補との類似度で、「格フレームの選択」の節で述べたものと同じである。手順2.1「格フレームの選択」において、格フレームが選択されなかった場合は、それぞれの格フレームについて先行詞同定までの処理を行う。省略の指示対象も含む入力述語項構造と格フレームとの対応づけ全体のスコアを格フレームのスコアとし、それがもっとも高かった格フレームに決定する。対象となっている用言の省略解析の結果は、その格フレームを用いた場合のものとする。類似度の閾値は0.60に設定した。ヲ格、ニ格に関しては、位置カテゴリのうち、スコアが0.20より低いものは使わないことにした。これは、ある程度よりスコアが低い位置カテゴリは、ゼロ代名詞を余分に認識させることにつながり、適合率を悪化させるためである。これらの閾値は、学習コーパスを用いて交差検定を行うことにより決定した。図の2文目の「擁立」では、ガ格とニ格がゼロ代名詞として認識されている。例えば、ガ格の候補は、位置カテゴリ順に、L_7:民主党,L_14:自民党(ガ),L_14:石原知事(ヲ),となっている。1番目の「民主党(類似度:0.73)」は分類器によって正例と分類され、格フレームの用例との類似度が0.73と閾値を越えているので先行詞に決定される。</section>
  <section title="実験">関係コーパスを用いて、省略解析の実験を行った。コーパス中の各記事の長さをある程度そろえるために、各記事の先頭10文までを用いることにした。学習コーパス279記事を分類器の学習、テストコーパス100記事をテストに用いた。分類器としては、SVMパッケージTinySVMを用い、2次の多項式カーネルで学習を行った。テストとしては、正解の構文構造をもつ100記事をシステムに入力し、実験・評価を行った。その他の手法を比較するために、図のように7つの設定について実験を行った。パラメータは、「先行詞の探索戦略」、「距離の尺度」、「スコア付け」の3つである。「先行詞の探索戦略」とは、どのように先行詞を探索し決定するかで、``best''と``closest''の2種類である。``best''とは、先行詞候補のなかでもっともスコアのよい候補を選択する手法で、``closest''とは、近い候補から順に調べていき、スコアがある閾値を越える候補を先行詞に決定する手法である。「距離の尺度」とは、照応詞と先行詞候補間の距離の近さを計る尺度であり、``structure''と``flat''の2種類である。``structure''とは、文・文章を構造的にみる手法であり、``flat''とは、間にある文節数を距離とする手法である。「スコア付け」は、先行詞候補を比較するスコアとして何を用いるかで、「分類器」、「類似度」、「分類器&amp;類似度」の3種類である。「分類器」は分類器の出力する信頼度をそのまま用いる手法で、「類似度」は先行詞候補と格フレームの用例との類似度を用いる手法であり、「分類器&amp;類似度」は本手法のように分類器と類似度の両方を用いる手法である。図のex-7が本手法であり、ex-1がによる手法に類似しており、ex-3がの手法に類似している。実験結果を表に示す。表の適合率、再現率はゼロ代名詞検出、先行詞の同定処理の双方を併せて評価したものである。先行詞同定の評価は、システムの出力する先行詞が正解コーパスの先行詞(群)に含まれていれば正解とする。システムの出力が「不特定:人」の場合も評価に含め、正解コーパスも「不特定:人」であれば正解とする。表によると、ex-7の精度が他の手法を上回っており、本手法の有効性が示されている。また、ex-7について、ゼロ代名詞の検出と先行詞の同定の評価を別々に行った。ゼロ代名詞検出については、適合率87.1%、再現率74.8%、F値80.5%であり、先行詞同定については61.8%の精度であった。本手法の精度を、実験環境が類似している関らの手法と比較する。関らは、新聞の社説記事30件と報道記事30件に対して、ゼロ代名詞検出と先行詞の同定処理を行っている。我々が用いたコーパスには社説記事は含まれていなかったので、報道記事についての精度をここに挙げると、ゼロ代名詞検出は適合率48.9%、再現率88.2%、F値62.9%、先行詞同定については54.0%の精度となっている。コーパスのサイズの違いなどがあるため一概に比較するのは難しいが、本手法の精度は関らの手法より、ゼロ代名詞検出のF値が17.6%、先行詞同定の精度が7.8%よい。特に、ゼロ代名詞検出の精度は大幅に向上しており、関らの用いた人手構築の格フレーム辞書より、自動構築した格フレーム辞書が有効であったと思われる。主な誤り原因を以下に示す。*-2exゼロ代名詞の検出誤り[5pt]ゼロ代名詞を余分に検出する傾向がある。一方、ドゥダエフ政権側の首都防衛司令官は同日夕、テレビを通じ、首都防衛はうまくいっており、ロシア軍の戦車五十両を破壊したと発表。この例では、「発表」の格フレームに対応づけられていないニ格があり、ニ格をゼロ代名詞と認識してしまう。これは格フレームが悪いのではなく、文脈によってその格をとる場合ととらない場合があるためである。これに対処するためには、文脈に関する素性を機械学習に入れる必要がある。省略解析の対象を限定していることによる誤り[5pt]現在の省略解析システムは用言のみしか対象としていない。村山富市首相_×は年頭にあたり首相官邸で内閣記者会と二十八日会見し、社会党_○の新民主連合所属議員の離党問題について「政権に影響を及ぼすことにはならない。離党者がいても、その範囲にとどまると思う」と述べ、大量離党には至らないとの見通しを示した。この例の「至らない」のガ格は「社会党」(○印)であるが「首相」(×印)と誤って解析される。これは、「社会党」は位置カテゴリ順では上位に来ないためである。この誤りは、省略解析の対象をサ変名詞など用言以外にも広げることによって解決できると思われる。つまり、「離党(問題)」「(大量)離党」のガ格に「社会党」が補われ、「(大量)離党」は「至らない」に対して位置カテゴリの上位なので、「至らない」のガ格に「社会党」が補われる。このように用言だけでなく文章中のより多くの関係を用いれば、省略解析の精度向上が期待できる。</section>
  <section title="おわりに">本稿では、格フレーム辞書、先行詞の位置選好順序、機械学習の3つを統合した省略解析手法を提案した。本手法は、ゼロ代名詞検出とその先行詞同定の2つの処理からなる。ゼロ代名詞検出は、格フレーム辞書に基づく格解析によって行う。先行詞同定は、先行詞の位置選好順に候補を調べ、機械学習による分類器が正例と分類し、かつ、格フレームによる選択制限を満たす候補を先行詞として決定する。大規模解析実験を行った結果、ゼロ代名詞検出が適合率87.1%、再現率74.8%、ゼロ代名詞の先行詞同定が61.8%の精度であった。特に、ゼロ代名詞検出の精度は、先行研究と比べてかなり向上しており、自動構築した格フレーム辞書の有効性が示された。今後は、解析対象にサ変名詞を入れるなど文章中の関係をさらに捉えることを目指す予定である。document</section>
</root>
