<?xml version="1.0" ?>
<root>
  <title>ネットニュースグループfj.wantedのダイジェスト自動生成</title>
  <author>佐藤理史佐藤円</author>
  <jabstract>本稿では，fj.wantedのダイジェストの自動生成を実現する方法について述べる．その中心技術は，ニュース記事からのサマリ抽出法である．この方法は，言わば「斜め読みを模擬した処理」であり，まず，表層的な表現を手がかりとして，42の特徴を抽出し，それらの特徴を用いて，記事のサマリ（カテゴリとサマリ文）を抽出する．ブラインドデータに対する実験において，本方法は，カテゴリ判定正解率81%，サマリ文抽出正解率76%という値を示した．抽出されたサマリはカテゴリ毎に整理され，HTML形式のダイジェストとして出力される．このとき，元の記事へのポインタは，ハイパーテキストのリンクとして埋め込まれる．作成されたダイジェストは，WWWのクライアントプログラムによって読むことができる．</jabstract>
  <jkeywords>ダイジェスト自動生成，ネットニュース，サマリ抽出，ハイパーテキスト，ワールドワイドウェブ</jkeywords>
  <section title="はじめに">インターネット上の電子ニュース(以下，ネットニュースと記す)は，誰もが自由に記事を投稿することができ，それがそのまま広く配布されるという特徴を持った，新しいマスメディアである．情報発信者が限られている従来のマスメディア(新聞，ラジオ，テレビ)と比べ，情報発信の機会を広くに解放した点で，ネットニュースはマスメディアの新しい可能性を開いたが，逆に，情報発信者の拡大による情報の洪水と情報(テキスト)品質の多様化という新しい現象を引き起こしつつある．このため，求める情報を簡単に見つけることができなくなりつつある．我々は，この問題を解決する方策として，ダイジェストに注目している．ダイジェストとは，元となる情報の特質をコンパクトにまとめて情報の種類別に整理したものであり，我々が大量の情報に接する際に効果的なナビゲーション機能を果たす．既存のダイジェストは，人手で編集されたものがほとんどであるが，はじめからオンラインテキストとして存在するネットニュースでは，このダイジェスト作成を完全に自動化することが可能である．我々は，既に，ネットニュースのダイジェスト自動生成の1つのプロトタイプとして，fj.meetingsのダイジェスト自動生成システムを作成し，実際に運用しているsato/nnad/home-j.html+．本研究では，その次のステップとして，fj.wantedのダイジェスト自動生成について検討した．fj.wantedは，fj.meetingsとは異なり，かなり多様な投稿者が，多様なテキスト品質の記事を投稿しており，fj.meetingsのダイジェスト自動生成で用いた手法とは異なった手法が必要となる．</section>
  <section title="ニュースグループfj.wanted">ダイジェスト自動生成システムの作成に先立ち，94年9月8日から10月18日の間にfj.wantedに流れた記事231件(フォロー記事は除く)に対する調査を行なった．特に，その中の59件については，詳細な調査を行なった．ここでは，その調査結果を示す．</section>
  <subsection title="主題上の特徴">fj.wantedの記事の主題(目的)は，「何かを探している(求めている)ということを伝える」というものである．これらの記事の主題は，おおよそ，図に示すような2段の階層的カテゴリに分類することが可能である．この図において，かぎ括弧内は，求めるものの対象が何であるかを示している．以下では，これらのカテゴリを記事のカテゴリと呼ぶ．</subsection>
  <subsection title="文章上の特徴">fj.wantedの記事には，以下のような文章上の特徴が見られた．多くの記事において，その記事の内容を端的に表す1文(以下，サマリ文と呼ぶ)が存在する．調査した記事59件中，54件(91.5%)にサマリ文が存在した．fj.wantedの記事で用いられる文章構造のほとんどは，単刀直入型か背景説明型である．単刀直入型と背景説明型とは，図に示すような文章構造(文章の流れ)をさす．この図において，かぎ括弧がつけられたものは，省略可能な要素である．調査した記事59件中，単刀直入型は47件(79.8%)，背景説明型は10件(16.9%)であった．なお，これらの型において，「要約」の部分が1文であれば，それがサマリ文となる．</subsection>
  <subsection title="表現上の特徴">fj.wantedの記事には，以下のような表現上の特徴が見られた．典型的な「求む」の表現が，多くの記事で用いられる．これらの表現のほとんどは，典型的な動詞群と文パターン(文末表現)によって構成されている．使われる典型的な動詞は，記事のカテゴリによって異なる．図に例を示す．機械による言語処理を難しくする，以下のような特徴が見られる．テキストが低品質である．(誤りが多い)会話体が存在する．(ex.「〜ってあるんでしょうか？」)品目名として，かなり特殊な固有名詞が多数現れる．</subsection>
  <section title="サマリ抽出">上記の調査結果に基づき，fj.wantedの各記事から記事のカテゴリサマリ文の2つを記事のサマリとして抽出することとし，それを行なうモジュールを作成した．その概要を図に示す．この図に示すように，サマリ抽出は，文分割，特徴抽出，カテゴリ判定，サマリ文抽出の4つのステップによって行なうが，最後の2つのカテゴリ判定とサマリ文抽出はそれぞれ独立に行う．これは，以下のように，サマリ文として抽出すべき文とカテゴリ判定の根拠となる文が異なる場合があるからである．この例では，1文目がサマリ文であるのに対し，カテゴリ「譲って下さい」は2文目から求まる．</section>
  <subsection title="文分割">ニュース記事の本文を文毎に分割し，先頭の10文を取り出す．記事には，色々な表示上の工夫がされていることがあり，文を切り出すことはそれほど単純ではない．ここでは，各種のヒューリスティックを組み込んだ専用プログラムによって文を切り出す．</subsection>
  <subsection title="特徴抽出">各文に対して，42個の特徴が存在するかどうかを調べ，特徴ベクトル(42bitのビット列)を作成する．ここでの「特徴」とは，例えば，といったものであり，これは，表に示すような表現が存在するかどうかを，文字列照合によって調べることによって判定する．42個の特徴の概要を表に示す．</subsection>
  <subsection title="カテゴリ判定">カテゴリ判定では，35個の規則を用いる．このうち，31個の規則は，特徴1--16,18-32に直接対応する規則で，これらの特徴の存在がそのままカテゴリの候補に対応する(表中の，「以降の処理での利用」欄を参照)．残りの4つの規則のうちの3つは，特徴33--35に対応する規則で，他の規則によって「探しています」というカテゴリが候補となっている場合にのみ使用する．残りの1つの規則(特徴17に対応)は，他の規則によってカテゴリの候補が得られない場合にのみ使用する．具体的には，以下の手順によってカテゴリを決定する．カテゴリ候補リストを空とする．先頭の文の特徴ベクトルから順に，文の特徴ベクトルに対して以下を実行する．規則を適用し，その特徴ベクトルから得られる全てのカテゴリの候補をカテゴリ候補リストに追加する．そのリストの中に，「譲って下さい／譲ります／貸して下さい／募集します」のいずれかが含まれる場合は，それを最終的なカテゴリとし，処理を終了する．カテゴリ候補リストに「教えて下さい」が含まれている場合は，それを最終的なカテゴリとし，処理を終了する．カテゴリ候補リストに「探しています」が含まれている場合は，それを最終的なカテゴリとし，処理を終了する．カテゴリは不明とする．</subsection>
  <subsection title="サマリ文抽出">サマリ文の抽出では，以下の2つの方法を実装した．</subsection>
  <section title="実験">2節での調査の対象とした231件の記事(KNOWN)と，1994年12月5日から12月13日の間にfj.wantedに流れた80件の記事(UNKNOWN)に対してサマリ抽出の実験を行なった．ここでは，その実験結果について述べる．</section>
  <section title="ダイジェストシステム">上記のサマリ抽出モジュールを用いて，fj.wantedのダイジェストシステムを試作した．作成したシステムの概要を図に示す．サマリ文抽出では，基本的には，表現パタンによる方法を用い，この方法によってサマリ文が抽出できない場合には，文章構造による方法を用いる．ダイジェスト編集では，得られた記事のサマリをカテゴリ別に整理し，HTML(HyperTextMarkupLanguage)形式で出力する．このとき，元の記事へのポインタを，ハイパーテキストのリンクとして埋め込む．ダイジェストリーダーとしては，WWW(World-WideWeb)のクライアントプログラム(xmosaic等)を用いる．本システムは，現在，WWWにおいて試験運用しているsato/nnad/home-j.html+．図にダイジェストの表示例を示す．</section>
  <section title="議論">本研究により，fj.wantedに関しても実用的なダイジェストの自動生成が可能であることが明らかになった．当初，我々は，テキストと投稿者がかなり多様であるため，fj.wantedのダイジェスト自動生成は，難しいのではないかと考えていた．しかし，本研究の結果は，この予想を覆すものであった．fj.wantedのダイジェスト自動生成が可能であった最大の理由は，「fj.wantedの記事が，自分の求めるものが何であるかを読み手に伝えるという明確な目的を持った文章であり，そのような情報を伝達するために使われる文章構造と文章表現はかなり限定される」ということにあるだろう．このことが，言わば「斜め読み」的処理によるサマリ抽出を可能にしていると考えられる．さらなる精度向上を目指すならば，サマリ文がない記事(15%)のサマリ生成が必要となる．サマリ文がない記事の多くは，照応や省略といった現象が現れているためにサマリ文となるような1文が存在しない記事である．このため，照応，省略の処理が十分な精度で実現できなければ，適切なサマリ文を生成できないと考えられる．投稿者によるサマリ作成は非現実的である．そのため，サマリの自動抽出は重要である．サマリを自動生成するのではなく，あらかじめサマリを付けて投稿してもらうという解も存在する．しかし，現在の記事のサブジェクト(subject)に書かれている情報からみて，我々は，それは非現実的だと考える．本方法は，他の掲示情報型ニュースグループや質問応答型ニュースグループの質問記事のダイジェストにも応用できると考えられる．応答記事の要約を含んだ形で，ダイジェスト(あるいは，FAQ(FrequentlyAskedQuestions))を自動生成することも考えられるが，その重要性は低いと考える．なぜならば，質問記事のリストを，質問の要約とそれへの応答記事へのポインタという形で示すことができれば，十分にダイジェストの役割を果たすと考えられるからである．テキストの主題による分類は重要である．テキストには，主題(目的)と分野(内容)という2つの直交する分類が存在し，この2つが，いわば情報の取捨選択の縦糸と横糸となっている．このうち，分野による分類はいままで多くの研究があるが，主題による分類は，それほど注目されていなかった．この主題による分類も，分野による分類と同様に，求める情報に到達することを支援するナビゲーション機能の実現において，強力な道具となると考えられる．</section>
  <section title="関連研究">ダイジェストの自動生成を実現する中心技術は，サマリ抽出にある．本システムでは，記事のサマリとして，記事のカテゴリとサマリ文を抽出した．これらに関連する研究は，主に，テキスト分類と要約という分野において研究されてきた．</section>
  <subsection title="テキスト分類">テキスト分類とは，ひとまとまりのテキスト(文献，ニュース記事等)を，その内容に基づいて，分類することである．通常，あらかじめカテゴリ集合が与えられ，その中から適切なカテゴリを割り当てることを行なう．Construe-TISは，英語の新聞記事を対象とする分類システムで，キーワードから概念を認識し，認識した概念を組み合わせて最終的なカテゴリを決定する．このシステムは，キーワードとその前後の文脈情報という表層的な手がかりを利用し，かなりよい精度(90%程度)で新聞記事を分類することができる．一方，ThinkingMachineCorporationは，Memory-BasedReasoningを用いて，DowJonesのニュース記事を分類するシステムを開発している．このシステムは，すでに分類済みの5万件のニュース記事を用いて，再現率約80%，正解率約70%で，分類コード割り当てを行なうことができる．これらのシステムは，いずれも英語を対象としたシステムであり，日本語を対象としたテキスト分類は，それほど試みられていない．また，前節で述べたように，これらの分類は，いずれもテキストの内容(分野)による分類であり，主題(目的)による分類は，ほとんど研究されていない．</subsection>
  <subsection title="要約">要約とは，あるひとまとまりのテキスト(例えば，論文)が表している意味内容を，非常に短いテキストで簡潔に表現することを言う．ここ1,2年，日本語を対象とした要約研究がいくつか行なわれている．原らは，複雑な言語解析を避け，項目名と特徴という表層的な情報を利用することで，特許広報の抄録を作成する方法を提案している．一方，GREENは，論説文を対象とした要約システムである．このシステムは，現状で利用可能な談話要素を取り込み，重要な文を抜き出すこととその文から修飾句を削減することによって要約を生成する．我々の立場は，前者と近いが，以下の二点において今までの研究と異なる．第一に，ネットニュースのダイジェストの生成の際に必要となるサマリは，通常の要約よりも非常に短いという点である．我々がダイジェストに求める機能は，「情報(記事)が必要であるか，不必要であるか判定できること」であり，これを満たすならば，サマリは短ければ短いほど好ましいと考える．第二に，対象としているテキストの品質が多様であるという点である．これまでの研究が対象としてきたテキストは，特許広報や新聞の論説記事など高品質なテキストである．これらのテキストの品質に対し，ネットニュースの記事のテキスト品質はかなり低い．</subsection>
  <subsection title="fj.meetingsダイジェストとの違い">ネットニュースのダイジェスト自動生成システムは，本システム以外に，筆者らが先に実現したfj.meetingsのダイジェスト自動生成システムがある．このシステムと本システムとの大きな違いは，サマリとして抽出する情報と，その抽出法にある．fj.meetingsのダイジェスト作成では，会告記事から，その会議の名称(タイトル），開催期日，開催場所，論文締切期日といった情報項目を，その記事のサマリとして抽出する．このように，抽出すべき情報をあらかじめ限定できるのは，対象とする記事が会議に関する記事に限定されるからである．このため，サマリ抽出には，いわゆる情報抽出の手法を用いることができる．fj.meetingsのサマリ抽出では，センタリング，箇条書といったスタイル情報と抽出する情報項目に特有な言語表現パターンを組み合わせて利用する．これに対して本システムのダイジェスト作成では，各記事から，その記事の内容を端的に表す1文(サマリ文)を抽出する．これは，fj.wantedの記事から抽出すべき情報項目を，fj.meetingsの会告記事のように限定することができないからである．このため，サマリ抽出の手法は，情報抽出よりは要約に近い形となる．本システムでは，主に言語表現パターンを利用して，サマリ文を見つける方法をとっている．</subsection>
  <section title="おわりに">本稿では，fj.wantedのダイジェストの自動生成を実現する方法について述べた．その中心技術は，ニュース記事からのサマリ抽出法である．この方法は，言わば「斜め読みを模擬した処理」であり，まず，表層的な表現を手がかりとして，42の特徴を抽出し，それらの特徴を用いて，記事のサマリ(カテゴリとサマリ文)を抽出する．未知の記事群に対するブラインドテストにおいて，本方法は，カテゴリ判定正解率81%，サマリ文抽出正解率76%という値を示した．本論文で述べた方法は，fj.wantedを対象としたものであるが，他の掲示情報型ニュースグループや質問応答型のニュースグループのダイジェスト作成にも，同様な手法が適用できると考えられる．また，本方法を発展させることによって，FAQの自動作成もある程度可能であろう．ダイジェストの自動生成では，オリジナルのテキストがすでにオンラインテキストとして存在することが前提となっている．現在のところ，ネットニュースはこの前提を満たす数少ない対象であるが，今後，多くのテキスト情報がオンラインテキストとして入手可能になるにつれて，他の対象に対しても，ダイジェストの自動生成の道が開けると考えられる．本論文で示したダイジェストは，ネットニュースに対するダイジェストの一例に過ぎない．この他に，いわゆる``What'sup?''(今，何が話題になっているか)を把握するための俯瞰ダイジェストや必要な記事をキーワードから探すリファレンスダイジェストなどが考えられる．今後，これらのダイジェストをニュースリーダーと有機的に統合し，多角的にネットニュースにアクセスすることを可能にしていく必要があるであろう．それは，間接的には，ネットニュースの新しいマスメディアとしての可能性を広げていくことにつながっていくと考えられる．document</section>
</root>
