<?xml version="1.0" ?>
<root>
  <jtitle>同義語辞書作成支援システム</jtitle>
  <jauthor>寺田昭吉田稔	中川裕志</jauthor>
  <jabstract>同義語の同定は，情報検索，テキストマイニングなどのテキスト処理を行う上で必要な作業である．同義語辞書を作成することにより，テキスト処理の効率や精度の向上を期待できる．特定分野における文書には，専門の表現が多く用いられており，その中には，分野独特の同義語が多量に含まれている．例えば，日本語の航空分野では，漢字・ひらがなだけでなく，カタカナ，アルファベット，およびそれらの略語が同義語として用いられている．この分野の同義語は，汎用の辞書に登録されていないものが多く，既存の辞書を使用できないので，辞書を新たに作成する必要がある．また，辞書作成後も常に新しい語が発生するので，辞書の定期的な更新が必要となるが，それを人手で行うのは大変な作業である．本論文では，同義語辞書作成を半自動化するシステムを提案する．システムは，クエリが与えられると意味的に同じ候補語を提示する．辞書作成者は，その中から同義語を選択して，辞書登録を行うことができる．候補語のクエリに対する類似度は，同義語の周辺に出現する語の頻度情報を文脈情報とし，その余弦から計算する．文脈情報のみでは十分な精度が得られない場合，既知の同義語を知識としてシステムに与えることにより，文脈語の正規化を行い，精度を向上できることを確認した．実験は，航空分野の日本語のレポートを対象とし，システムの評価には平均精度を用いて行い，満足できる結果が得られた．</jabstract>
  <jkeywords>同義語，文脈情報，辞書作成，文脈語の正規化</jkeywords>
  <section title="はじめに">企業内には，計算機で処理できる形での文書が大量に蓄えられている．情報検索，テキストマイニング，情報抽出などのテキスト処理を計算機で行う場合，文書内には，同じ意味の語句（同義語）が多く含まれているので，その処理が必要となる．例えば，日本語の航空分野では，「鳥衝突」を含む文書を検索したい場合，「鳥衝突」とその同義語である「BirdStrike」が同定できなければ，検索語として「鳥衝突」を指定しただけでは，「BirdStrike」を含み「鳥衝突」を含まない文書は検索できない．したがって，同義語の同定を行わないと，処理能力が低下してしまう．特定分野における文書には，専門の表現が多く用いられており，その表現は一般的な文書での表現とは異なっている場合が多い．その中には，分野独特の同義語が多量に含まれている．これらの多くは汎用の辞書に登録されていないので，汎用の辞書を使用することによる同義語の処理は難しい．したがって，その分野の同義語辞書を作成する必要がある．本論文では，このような特定分野における同義語辞書作成支援ツールについて述べる．本論文では，特定分野のひとつとして航空分野を対象とするが，航空分野のマニュアル，補足情報，業務報告書等に使用される名詞に限っても，漢字・ひらがなだけでなく，カタカナ，アルファベットおよびそれらの略語が使用されている．例えば，飛行機のマニュアルの場合，「Flap」を日本語の「高揚力装置」と表現しないで「Flap」と表現し，用語の使用がマニュアルよりも自由なマニュアル以外の文書では，「Flap」や「フラップ」と表現している．また，略語も頻繁に使用され，「滑走路」を「RWY」，「R/W」と表現している．そして，これらの表現が混在している．その理由は，海外から輸入された語句は，漢字で表現するとイメージがつかみ難いものがあるためであり，そのような語句は，英語表現や英語のカタカナ表現が使用される．「Aileron」を「補助翼」というよりは，「Aileron」や「エルロン」と通常表現している．マニュアルの場合は，ある程度，使用語が統一されているが，マニュアル以外のテキストは，語句の使用がより自由で，同義語の種類・数も多くなっている．そして，分野の異なる人間や計算機にとって理解し難いものとなっている．このようなテキストを計算機で処理する場合には，同義語辞書が必要であるが，これらの語句は，前述したように汎用の辞書に載っていない場合が多い．さらに，語句の使用は統制されているものではなく，また，常に新しい語が使用されるので，一度，分野の辞書を作成しても，それを定期的にメンテナンスする必要がある．これを人手だけで行うのは大変な作業である．我々は，同義語の類似度をその周辺に出現する語句の文脈情報により計算することにより同義語辞書を半自動的に作成するツールを開発している~.本論文では，上記の支援ツールを基礎にした計算機支援による同義語辞書作成ツールを提案する．その動作・仕組みは以下の通りである．計算機は，与えられたクエリに対して，意味的に同じ語句（同義語）の候補を提示する．辞書作成者は，クエリをシステムに与えることにより，同義語の候補語をシステムから提示され，その中から同義語を選択して，辞書登録をすることができる．システムは，これまで蓄えられた大量のテキスト情報を参照し，与えられたクエリの文脈と類似する文脈を持つ語句を同義語候補語とする．文脈は，クエリ・同義語の候補語の周辺に出現する語句を使用している．既知の同義語が存在する場合には，これらの同義語を使用して文脈語を同定することにより，システムの精度向上を行った．提案手法は，語句を認識できればよいので，分野・言語を問わないものである．実験は，日本語の航空分野のレポートを使用した．このコーパスには，上述したように多数の同義語が存在し，その多くは汎用の辞書に載っていないものである．評価は，回答の中で正解が上位にある程，評価値が高くなる平均精度を用いて行い，他の手法と比較して満足できる結果が得られた．論文構成は，第2節では関連研究について述べる．第3節では類似度と平均精度について述べるが，その中で文脈情報，類似度，平均精度の定義について説明する．第4節では提案方式の詳細と実験について述べる．コーパス，評価用辞書，特徴ベクトルの定義について説明し，文脈語の種類・頻度，window幅による精度比較について述べる．第5節では，第4節の結果をもとにして，詳細な議論を行う．クエリ・同義語候補語の種類による精度の比較，大域的文脈情報との比較，文脈語の正規化，特異値分解，関連語について述べる．第6節では複合名詞の処理を述べる．複合名詞については，専門用語自動抽出システム~が抽出した複合名詞を使用することにより単名詞と同様の処理を行った．第7節では同義語辞書の作成について考察する．第8節では結論と今後の研究課題について述べる．</section>
  <section title="関連研究">同義語を自動的に計算する研究は，これまで数多く行われてきた．その種類としては，カタカナと英語の対応，英語とその略語の対応，日本語とその略語の対応などがある．略語処理では，略語の近傍に括弧書きで略語の定義がされている場合の研究がある~,.この手法は，略語の定義が略語の近傍でされているものについては有効であるが，文書の中で必ずしも略語の定義がされているとは限らない．本論文で扱う文書では略語の定義はされていないので，この手法は適用できない．カタカナとアルファベット（英語）の対応では，Knightらは，カタカナとアルファベット（英語）の対応を発音記号から対応付けしている~.阿玉らは，カタカナのローマ字表記とアルファベットとの対応付けをしている~.Teradaらは，英語における原型語とその略語の対応を両者に含まれる文字及びその順序などの情報を使用することで同定している~.この研究も本論文と同じく，航空分野という特定分野を対象としているが，対象とする言語が英語であり，略語をその原型語に復元するタスクを目的としている．同義語の類似度の計算は，文脈情報から余弦を用いて計算するものが多い．文脈情報として，語句の前後の局所的なものを用いるもの~,文書全体から抽出して用いるものがある~.Ohtakeらは，カタカナの変形を探すのに，エディット距離で候補を絞った後に，文脈情報を用いているが，その際，カタカナが用いられている構文を解析して，動詞，名詞，助詞を使用している~.Masuyamaらは，カタカナ処理でWEBデータから英語に対応するカタカナのエディット情報を取得している~.文脈情報を用いる場合には，全ての種類の語句を用いるのでなく，内容語を用いるものが多い．計算量の削減及び精度の向上のために，文脈情報だけではなく，文字情報を用いて，対応関係を絞り込む，または，決定する研究が多い．本論文では，日本語を対象とし，漢字，ひらがな，カタカナ，アルファベット，およびそれらの略語の類似度を同時に計算するために，文字情報による絞り込みは行わず，文脈情報のみでどの程度の精度が得られるかを実験した．Teradaらは，英語を対象として，略語とその原型語の対応を文脈情報および文字情報を使用して行っているが~,略語とその原型語のみならず，その他の同義語においても文脈情報を使用することにより，クエリに対する同義語が得られると考えた．したがって，提案手法は，Teradaらの手法を応用し，言語を日本語に適応し，対象を略語から同義語に拡張し，文脈情報の使用に工夫を加えたものである．また，Teradaらは，略語復元の精度を向上させるために，略語の多いコーパスと略語の少ないコーパスを使用しているが，提案手法では，同義語が同一のコーパスに含まれている場合は，コーパスは1つでよいと考え，1種類のコーパスのみを使用した．文脈情報のみを使用しているが，同義語の日本語の文字種（漢字，ひらがな，カタカナ，アルファベット）について，種類の組み合わせにより精度が異なるかを調べ，今後の精緻なシステム構築の参考となるようにした．さらに，文脈情報のみでは，十分な精度が得られない場合があるので，既知の同義語を知識として使用することにより，精度の向上を図った．</section>
  <section title="類似度と平均精度">システムは，クエリに対して同義語候補語を順位付けして出力する．そのためには，クエリに対する同義語候補語の類似度を計算できなければならない．本節では，同義語候補語，文脈情報を定義し，提案手法での類似度について説明する．本節では，単名詞の処理について述べ，複合名詞の処理については，第6節で述べる．</section>
  <subsection title="同義語候補語">単名詞の同義語候補語は，テキストを形態素解析し，形態素解析器が出力した名詞である，漢字・ひらがな，カタカナ，アルファベットとした．形態素解析器は茶筅を使用し，その中で出現頻度が100以上のものを使用した．</subsection>
  <subsection title="文脈情報">「同義語は，同じような文脈で使用される」という仮定から，語句の類似度を文脈の類似性から計算できると考えた．これは，人間が語の意味を理解するのにその語句が出現する前後の文脈から類推しているというアイデアからである．文脈は，同義語の近傍の語句（局所的文脈）とした．人間は，前後の語句の中で，場面に応じて文脈語を選別をしていると考えられるが，計算機で実現するのは不可能であるので，場面に応じた選別については，この研究では考慮しないことにした．クエリをqとし，その前後の語句の並びを，x_x_2x_1qy_1y_2y_とする．ここで，前後の語句は，形態素解析器が出力した単語とする．対象とするクエリの文脈語をクエリの前でx_x_1，クエリの後ろでy_1y_とすると，window幅は,であり，これ以降window~[,]と表現することとする．同義語候補語のwindow幅についても，同様とする．window幅は，クエリ，同義語候補語を含む1文の範囲内だけを考慮した．どのような文脈語を選択するかについては，第4.3節で述べる．</subsection>
  <subsection title="類似度">クエリ(query)の文脈情報をc_q，同義語候補語(synonym)の文脈情報をc_sとする．c_qとc_sをベクトル空間モデルで表し，その類似度をベクトルの余弦で表すと，クエリと同義語候補語の類似度(sim)は，次式で計算される．</subsection>
  <subsection title="平均精度">情報検索の性能評価として精度と再現率がよく用いられるが，これらは，与えられたクエリに対する検索結果全体に対する性能を表すものである．同義語の検索結果から辞書作成者が辞書登録することを考えると，検索結果の順位における精度が重要である．つまり，上位の検索結果ほど評価値は高い必要がある．このような評価尺度を表すものとして平均精度(averageprecision)を用いた．N個のクエリの評価をする場合，i番目のクエリに対する平均精度は次式で表される:i番目のクエリに対する平均精度は，検索結果の各順位での精度_k=1^jrel[k]/jの同義語i番目全体に対する和を同義語数R[i]で割ったものである．N個のクエリ全体の平均精度は，次式のように個々のクエリに対する平均精度の平均として定義する：</subsection>
  <section title="提案方式の詳細と実験">第4.1節では，実験に使用したコーパスの説明をする．第4.2節では，評価用に人手で作成した辞書について述べ，第4.3節では，提案手法で用いる特徴ベクトルについて述べる．第4.4節では，window幅等による比較についての実験結果を示す．</section>
  <subsection title="コーパス">コーパスとして，日本語の航空分野のレポートを使用した．個人情報保護の観点から，事前に名前等の個人情報は削除し，個人を特定できないような処理を行った．レポートの内容には，出発地・到着地などの定型情報とテキストで自由に記述された表題，本文が含まれているが，本文を対象とした．1992年から2003年までのレポートを使用した結果，6,427件のレポートが対象となり，そのサイズは，約6.9~Mバイトであった．同義語候補語は，第3.1節で述べたように名詞を対象とし，その中には，漢字・ひらがな，カタカナ，アルファベット，およびそれらの略語があるが，その頻度が100以上のものを対象とした．その結果，同義語候補語の数は，1,343になった．同義語抽出のタスクは，クエリに対する同義語をこれらの同義語候補語の中から選択するものである．</subsection>
  <subsection title="評価用辞書">今回の実験評価のために，4.1節と同じ条件で出現頻度が100以上の候補語の中から，人手で選んだ406個の単語に対する同義語を求めることにより同義語辞書を作成した．単語には，同義な語句が複数存在する場合があるので，406個のクエリに対する同義語数は777になり，平均同義語数は1.91であった．同義語の中には，「Service」，「SVC」，「サービス」のようにアルファベット（英語）とその略語およびそのカタカナ表現のほか，「Traffic」，「相手機」のようにドメイン特有のものも含まれる．</subsection>
  <subsection title="特徴ベクトルの定義">文脈情報を特徴ベクトルとして表すが，類似度計算に使用する特徴ベクトルの定義には，様々な方法がある．本節では，特徴ベクトルの定義が精度にどのような影響を及ぼすかを調査した．クエリと同義語候補語の文脈語としてそれぞれの前後に出現する語句を用いるが，本節では，名詞（漢字・ひらがな，カタカナ，アルファベット），動詞，形容詞という内容語を使用した．クエリ・同義語候補語の文脈情報は，コーパス全体の中でクエリ・同義語候補語のwindow内に出現する文脈語を取得し，その頻度ベクトルとした．類似度は，3.3節で述べたように余弦で計算する．クエリの文脈ベクトルをc_q=(q_1,,q_N_c)，同義語候補語の文脈ベクトルをc_s=(s_1,,s_N_c)とすると，類似度(sim)は次式で表される（N_c:文脈語の異なり数）：ここで，文脈ベクトルの各要素(q_i又はs_i)は，文脈語の頻度を対数で補正したものを表す．表~は，頻度の対数による補正の有無の比較を示すが，対数による補正が精度に与える影響が大きいことが分かる．文脈語として，名詞（漢字・ひらがな，カタカナ，アルファベット），動詞，形容詞を選択した場合とそれ以外の文脈語を選択した場合の比較を表~に示す．文脈語の頻度については，高頻度の文脈語は，一般的であり同義語の判別に役立たず，一方，低頻度の文脈語は，特殊すぎてノイズとなることが考えられる．したがって，中程度の頻度の文脈語を採用するのがよいと考えられるので，最小頻度50，最大頻度600を使用するものとする（図~,参照）．</subsection>
  <subsection title="window 幅による比較">window幅をどのように設定すれば，平均精度が最適になるかを調査した．window幅を大きくすれば，候補語に対する文脈語を多く得られる反面，候補語から遠い文脈語は，候補語と関連性が薄くなり，ノイズとして悪影響を及ぼすので同義語の判別能力が弱くなり，また逆に，window幅を小さくすれば，候補語に対して得られる文脈語が少なくなり，判別に使用する情報が少なくなると考えられる．window幅を同義語候補語の前(FWD)に0〜4語，後(AFT)に0〜4語，変化させて実験した結果を表~に示す．平均精度は，window~[2,2]が43.1%で最も高かった．同義語候補語の前後のwindowの比較では，window~[2,0]では35.5%,window~[0,2]では37.8%であった．例えば，「Boarding」というクエリに対する正解は「搭乗」であるが，window~[2,0]では「搭乗」が1位になるが，window~[0,2]では8位になる．理由としては，window~[2,0]では「Boarding」と「搭乗」の前に共通の語である「お客様」が多く出現するが，window~[0,2]では「Boarding」と「搭乗」の後に共通の文字列（例：「を開始」など）の出現が少ないためであると考えられる．つまりwindow~[2,2]では，window~[2,0]の影響を受けて1位になっているといえる．「CAT」というクエリに対する正解は「TURB」と「揺れ」であるが，window~[2,0]では「TURB」が2位，「揺れ」が9位になる．共通に出現する代表的な言葉は「突然の」であるが，その数がそれ程多くないためだと考えられる．window~[0,2]では「TURB」が1位，「揺れ」が2位になる．その理由として，後に「に遭遇」という表現が多く出現しているからだと考えられる．window~[2,2]では，window~[0,2]の影響を受けて「TURB」が1位，「揺れ」が2位になっている．各同義語によりバラツキはあるものの，全体を通して，window~[2,2]では，同義語の前2語のwindow~[2,0]と同義語の後2語のwindow~[0,2]が補完しあって，よい結果になっているものと考えられる．クエリ・候補語のwindow幅内の前と後とでどちらが精度に貢献しているかについては，顕著な差は認められなかった．</subsection>
  <section title="議論">第4節での実験結果をもとにして，以下のような考察を行った．第5.1節ではクエリ・候補語の種類による精度の違いを調査した．第5.2節では，文脈情報の正規化による精度変化について述べる．第5.3節では，本手法がクエリ・候補語の近傍の文脈情報を使用しているのに対して，文書からの大域的情報を用いる手法との精度の比較を行った．第5.4節では関連語の検索について述べる．</section>
  <subsection title="クエリ・候補語の種類による精度の違い">本節では，クエリと候補語の種類による精度の違いについて調べる．同義語の種類として，「Dispatch」と「DISP」のようなアルファベット同士，「ベルト」と「Belt」のようなカタカナとアルファベット，「座席」と「席」のような漢字同士，「Check」と「検査」のようなそれ以外のものに分類して，表~のような基準で平均精度を調べた．一般に，候補語の頻度が高いほど文脈情報が豊富となり，平均精度も高くなる傾向にあるため，候補語の頻度に対する閾値を増加させることで平均精度を上げることができる．このようにして平均精度を上げることで50%を超えることができた場合，基準3に該当する．また，10%以上50%未満のときを基準4，10%未満のときを基準5として分類した．また，閾値の頻度100未満でも50%を超えることができた場合を基準2，頻度50未満でも50%を超えることが出来た場合を基準1とした．表~にその結果を示すが，横軸の基準の数字は，各分類毎の基準1〜5での比率を示す．各分類の括弧の中の数字は，各分類の全体での比率を示す．アルファベット同士は，基準1と基準2の合計で81%以上の平均精度が得られた．カタカナとアルファベットでは，基準1から基準3までの合計でも平均精度は15%程度であった．この理由としては，カタカナとアルファベットでは，ごく近傍に出現する語の種類（カタカナではカタカナが多く，アルファベットではアルファベットが多い）が異なるためである．漢字同士の場合には，基準1から基準3までの合計で平均精度は約63%得られた．それ以外の場合は，全体の76%を占めるが，基準1から基準3までの合計で平均精度は約27%であった．この結果から，カタカナとアルファベット及びそれ以外の分類のものの精度が低いことが分かった．それに対して，アルファベット同士，漢字同士の同義語の場合には，高い確度でユーザに同義語を提示できる．</subsection>
  <subsection title="文脈語の正規化">第5.1節でカタカナとアルファベット及びそれ以外の分類のものの精度が低いことが分かったが，その解決法を考える．その方法として，文脈語に出現する同義語を同定することを考え，それによる精度変化を調べた．同義語同士の周辺に出現する文脈語を観察すると，文脈語の中にも同義語が多く存在する．例えば，「Cargo」と「貨物」という同義語には，「CargoLoading」と「貨物搭載」というように「Loading」と「搭載」という文脈同義語が出現する．しかしながら，「Cargo搭載」，「貨物Loading」という使用は，ほとんどされないので，「Cargo」と「貨物」の文脈語の中で「Loading」と「搭載」の分布は偏っている．したがって，特徴ベクトルにおいて別の要素である「Loading」と「搭載」は，「Cargo」と「貨物」の類似度の向上にあまり寄与しない．そこで，これらの文脈同義語を正規化することにより平均精度の向上が期待できる．実験として，筆者の1人が選択した25対の同義語（表~参照）について，41個の文脈同義語（表~参照）の正規化を行い，個々の同義語の精度変化および評価辞書全体への影響を調査した．25対の同義語の平均精度は，9.6%で，評価辞書全体の精度43.1%と比較して難易度の高いものである．文脈同義語は，各同義語について特徴的なものを，筆者の1人が，PortableKiwi~を使用して1〜4個選択した．PortableKiwiは，対象としているコーパスに対して，ある言語表現を入力すると，その前後に現れる適当な長さの文字列~のうち，頻度の高いものから順に表示する用例検索システムである．最初に文脈語の頻度をこれまで通り50から600のものに制限すると，表~の41個の文脈同義語の内，使用されたものは21個で，表~の25対の同義語の中で文脈同義語が使用されたものは，15対であった．ただし，15対の同義語は，想定していた文脈同義語が1個でも使用されたもので，想定していた文脈同義語が全て使用されていないものを含む．15対の同義語について，平均精度の変化を調べたところ，正規化しない場合の8.4%から，正規化した場合は43.0%に上昇した．その内容は，平均精度が上昇したものが28個，精度の低下したものが2個であった．精度の低下した例は，クエリ「Final」に対する「最終」とクエリ「最終」に対する「Final」である．両例とも精度の低下した理由は同様なので，クエリ「Final」に対する「最終」の例を見てみると，正規化しない場合の順位203位から，正規化した場合は355位に落ちていた．理由としては，文脈同義語が想定していた3個の内，「搭載」⇒「Load」という1個しか使用されず，その文脈同義語も「Final」と「最終」を同義語として認識させ，他の候補語の順位は上昇させないようなものではなかったからであると推定される．次に，文脈同義語のみ，文脈語の頻度制限（50〜600）を外して実験を行った．その結果，想定していた全ての文脈同義語が使用され，25対の同義語について平均精度が上昇したものが46個，低下したものが2個，変化しないものが2個であった．25対の同義語について平均精度の変化を調べたところ，正規化しない場合の9.6%から，正規化した場合は42.9%に上昇した．精度の低下した同義語の1つの例は，クエリ「GRP」に対する「グループ」である．類似度の値は，正規化しない場合の0.24から，正規化した場合の0.32に上昇していたが，他の候補語，例えば，「同行」の類似度が0.21から0.39のようにより上昇したために順位が低下したものである（「同行」は不正解である）．もう1つの低下した例は，クエリ「手順」に対する「PROC」であるが，その理由も同様である．精度の変化しなかった同義語の1つ例は，クエリ「PROC」に対する「手順」である．正規化しない場合の「手順」の順位は2位で，1位は「PROC」の同義語の「Procedure」であったが，正規化により双方の類似度が上昇し，結果として「手順」の順位は2位のままであった．もう1つの精度の変化しなかった例は，クエリ「DEP」に対する「出発」であるが，正規化しない場合の順位が2位はあり，その類似度は0.42であった．「遅延」⇒「Delay」という文脈同義語により正規化すると，「出発」の類似度は，0.48に上昇したが，1位であった「ARR」も同様に0.48から0.57に上昇した（「ARR」は不正解である）．これは，文脈同義語「遅延」⇒「Delay」が「出発」にも「ARR」にも関係しているためである．したがって，正解にのみ関係する文脈同義語を選択できれば，正解のみ精度を向上させることが期待できるが，どのように選択すればよいかは今後の課題である．15対の同義語の文脈語を正規化した場合の評価用辞書全体での平均精度は45.7%であり，文脈語の正規化を行う前の43.1%よりも向上していた．その理由の1つは，15対の同義語の精度が上がり，その結果として平均精度を向上させたもの（その効果は，1.3%），もう1つの理由は，それ以外の同義語も文脈語の正規化により若干精度が向上したためである．文脈同義語の頻度制限を外した25対の同義語の文脈語を正規化した場合の評価用辞書全体での平均精度は46.8%であり，文脈語の正規化を行う前の43.1%よりも向上していた．25対の同義語の精度向上による効果は，2.1%であった．結論として，文脈同義語は，第4.3節で述べたような高頻度と低頻度の文脈語の制限を外した方がよい結果となった．尚，頻度制限を外した場合，高頻度側で使用可能となった文脈同義語は20個，低頻度側で使用可能となった文脈同義語は1個であった．高頻度の文脈同義語が圧倒的に多かった．したがって，高頻度の同義語が既知である場合には，同義語の文字種に拘わらず，正規化することによりシステムの精度を向上できることが分かった．</subsection>
  <subsection title="大域的文脈情報との比較">酒井らは，日本語の略語からその原型語との対応関係を取得するのに以下のような手法を用いている~.略語候補とそれに対応する原型語の候補を，それを構成している文字情報から獲得する．略語候補と原型語の候補の類似度を計算して，対応関係を取得する．文脈情報の類似度について第3節で提案した手法との比較を行った．彼らは，漢字・ひらがなの名詞の略語を対象としたが，それをカタカナ，アルファベットに拡張して提案手法との比較を行った．彼らの類似度の計算は，コーパス中の略語候補語を含んでいる文書における略語候補語の出現頻度，全ての名詞の総出現頻度，文の数，略語候補語が最初に出現する文番号の情報を用いて重みを付与して順位付けを行い，その上位N_n文書を取り出して，略語候補の関連文書としている．次に，その関連文書に含まれる各名詞に対して出現頻度，文書頻度などの情報を用いて重みを付与して順位付けを行い，上位N_m個の名詞を取り出し，名詞の重みを付与したベクトルを生成している．原型語候補に対しても同様のベクトルを生成する．そして，その余弦により類似度を計算している．本論文でも酒井ら~と同様に，N_n=20，N_m=200として実験した．結果は，表~にあるように，提案手法よりも，かなり低い値となった．その原因として，略語とその原型語の対応関係を求めるのに，関連文書全体から代表的な名詞を抽出して類似度を計算している（大域的文脈情報）が，必ずしも，略語に関連する文書があるとは限らないと考えられる．我々は，局所的な文脈語から類似計算を行っている（局所的文脈情報）が，この手法の優秀性が証明された．</subsection>
  <subsection title="関連語の検索">語句には，同義であるもの以外に関連性のあるものが存在する．このような語句の分類も，テキスト処理においては重要である．例えば，「引き返し」という語句の関連語として「GTB（GroundTurnBack:地上引き返し）」，「ATB（AirTurnBack:空中引き返し）」，「RTO（RejectedTakeoff:離陸中止）」，「トラブル」などがある．「トラブル」は，「GTB」，「ATB」，「RTO」の上位概念あり，「GTB」，「ATB」，「RTO」は類義語である．これらの語句にも，「HYDFailureによるGTB」，「HYDFailureによるATB」のように同じような文脈が現れる場合が多い．したがって，提案手法で関連語の検索も可能と考えられる．表~に，いくつかのクエリに対する回答の中での関連語を示す．事実「RTO」について調べたところ，クエリに対する50位までの回答で類義語が2つ，原因を表す関連語が5つ，結果を表す関連語が1つ含まれていた．同じような文脈で使用される関連語は，本手法で検索できることが分かる．関連語によりどのように文脈が違うかについては．今後の研究課題である．本論文では，精度は計算していないが，関連語の検索にも本手法が適用できると考えられる．</subsection>
  <section title="複合名詞の処理">複合名詞の処理については，全ての連接する単名詞の組み合わせを調べると，その数が多くなり非効率である．したがって，最初に複合名詞を抽出して，それを単名詞と同様に扱うことで，これまで述べた処理と同じ手法を用いることとした．複合名詞の抽出については，専門用語抽出システム~を使用し，それが抽出したものの中で，重要度評価値が3,000以上の用語の中の複合名詞を使用した．専門用語抽出システムは，単名詞の左右に出現する単名詞の連接種類数と連接頻度および候補語の出現頻度から専門用語を抽出するものである．上記の条件で，350の複合名詞が得られた．人手で複合名詞に対して同義語辞書を作成した結果，辞書の登録数73で，平均同義語数は2.00であった．複合名詞の同義語の中には，複合名詞と単名詞が含まれる．この複合名詞350と単名詞1,343に対してwindow~[2,2]で文脈語の最小頻度50，最大頻度600で文脈情報を取得した．実験の結果，平均精度は，44.3%であった．辞書登録数が少ないので単純には比較できないものの単名詞と同等の精度が得られた．</section>
  <subsection title="複合名詞と単名詞の関係">複合名詞と単名詞について以下のような関係があることが分かった．複合名詞の同義語が単名詞の同義語の組み合わせでできているもの：例：出発~遅れ‐出発~遅延複合名詞の基底名詞と単名詞が同義なもの：例：搭乗~券‐券複合名詞の基底名詞以外の語同士が同義なもの：例：整備~点検‐整備複合名詞の中で一部の名詞に省略があるもの：例：搭乗~旅客~数‐搭乗~数単名詞同士では，同義でなかったものが複合名詞では同義になるもの：例：搭乗~口‐ゲート，到着~地‐目的~地以下では，複合名詞を最初に抽出した利点に着目して述べる．（1）については，複合名詞の処理を行わなくても，単名詞の同義語を置き換えることにより複合名詞の同義語を得ることが可能であるが，その場合には，「DEP遅延」のようにあまり使用されない複合名詞の同義語が得られてしまい，単名詞の同義語を置き換えだけでは複合名詞の同義語を絞り込むことができない．したがって，複合名詞抽出の前処理を行うのが効率的である．（2）と（3）については，複合名詞を構成する名詞の中でより一般的で省略しても意味が変化しないものが省略されている．（4）の日本語の略語ついては，第6.2節で述べる．（5）の関係は，上記4種類と異なり，単純に省略や単名詞の置き換え，単名詞の同義語の組み合わせだけでは扱えないもので，複合名詞の前処理を行わないと同義語が得られないものである．</subsection>
  <subsection title="日本語の略語">日本語の略語の平均精度について調査した．日本語の略語とは，例えば，「整備作業」と「整備」のようなものであり，略語が原型語に完全に包含されるものである．したがって，「整備作業」と「整備点検」のようなものは含まれない．単名詞と複合名詞を合わせた同義語候補語1,693個について日本語の省略語の辞書を人手で作成したところ，エントリー数：92，項目数：123，平均項目数：1.34であった．この辞書を使用して実験したところ，平均精度で52.3%という高い精度が得られた．これは，日本語の原型語と一部省略されている略語では，その周辺には同じような文脈語が出現しやすいと考えられ，本手法の得意な分野だといえる．</subsection>
  <section title="同義語辞書作成">同義語辞書は，表~のように見出し語に対して1語以上の同義語が辞書項目として登録される．情報検索やテキストマイニングでは，同じ概念をグループ化し精度を向上させるために見出し語に対して1対1で同義語を対応させる必要がある場合がある．例えば，表~に対して，同義語リストは表~のようになる．表~では，「APP」が「進入」に，「Approach」が「進入」に，「CRZ」が「巡航」に変換されることを示す．「進入」，「巡航」は，変換されないでそのまま使用される．複数の同義語の中からどの語を変換語に選択するかは，専門用語抽出システムの重要度評価値の最も大きなものを用いた．つまり，同義語同士の中で最も重要度の高い語に変換するものである．また，「CRZ」⇒「巡航」と「巡航」⇒「CRZ」の場合には，「CRZ」と「巡航」の重要度評価値の大きな方に変換した．この例では，「巡航」の方が重要度評価値が大きく「CRZ」⇒「巡航」という云い換えになる．もちろん多義性のある語では，一意に同義語を決定できないのでこのようなリストは使用できない．この場合には，個々の語が出ている文脈から判断する必要があるが，これは今後の課題である．次に同義語辞書を作成する際に一度に全て作成するのではなく，以下に示すように同義語辞書を一部作成した段階で同義語リストを文脈情報の正規化に使用するために文脈同義語としてシステムに与えることにより，残りの辞書作成の精度（平均精度）が向上するかを検証した．例えば，「PAX」を「旅客」に変換することにより，「PAXBoarding」と「旅客搭乗」の例では，「Boarding」と「搭乗」という同義語の文脈語が同一になる．第~節では，筆者の一人が選択した同義語対について，頻出する1〜4個の文脈同義語を選択して使用したが，今回は出現頻度順に自動的にシステムに付与した．文脈同義語は，第~節の文脈語の正規化で頻度制限をしない方が精度が良かったので，本節でも頻度制限を行わなかった．出現頻度が500以上の同義語リストを作成したところ，41個の同義語リストが得られた．これを文脈同義語とし，正規化したものとしないものについて平均精度を比較したところ，それぞれ平均精度は43.3%，41.1%であり，正規化したものの方が約2.2%精度が向上した（文脈同義語リストに含まれる同義語は評価から除外した）．同様に出現頻度が300以上，1,000以上のものについて比較したところ，正規化したものの平均精度がそれぞれ約2.2%，1.8%精度が向上した．出現頻度が100〜300，300〜500のものについては，平均精度の変化はなかった．以上の結果から，同義語の中で頻度の高いものを文脈同義語としてシステムに付与すると，若干平均精度が向上することが分かった．</section>
  <section title="結論および今後の課題">本論文では，特定分野における同義語辞書作成支援システムを提案した．提案手法は，語句の境界が認識できればよいので，深い言語処理技術は必要とせず，分野・言語を問わないものである．クエリ・候補語の前後に出現する語句の文脈情報のみを使用したが，人間の辞書支援システムとしては，十分に機能することを実験の結果確認した．文字種が異なり精度の低い同義語については，文脈語を正規化することにより，精度を向上できる事を確認した．実験の結果，以下の知見が得られた：window幅による精度の比較では，Teradaら~の英文の略語を対象としたものではwindow~[3,3]が最も精度が良かったと報告されているが，本論文で使用した日本語のコーパスでは，window~[2,2]が最も精度がよかった．日本語の漢字1文字の持つ情報量は，明らかに英語1文字の情報量よりも多いので，漢字を含む日本語のコーパスの方が英文のコーパスよりもwindow幅が小さい場合に精度がよい事が，文脈情報という形で確認できた．同義語の字種別での平均精度は，アルファベット同士が最も高く，カタカナとアルファベットの平均精度は，最も低かったが，その原因は周辺の文脈情報の文字種が異なる場合が多いからである．文脈語の正規化について，以下の2点で，その有効性を確認できた．1番目は，いくつかの同義語対について文脈同義語をシステムに与えることにより，その同義語対の精度をかなり向上させることができた．その理由は，文脈語の正規化をすることにより，異なる文字種の同義語の周辺に出現する異なる文字種の文脈同義語が同定されるためである．また，PortableKiwiを用いることにより，対象とする同義語の周辺に頻出する文脈語を簡単に選択できることが分かった．2番目は，同義語辞書の作成途中で，出現頻度の高い同義語をシステムに与えることにより，システムの精度が向上した．したがって，同義語辞書を出現頻度の高いものから作成し，作成した同義語を知識としてシステムに与えることにより，それ以降の同義語抽出の精度を向上できることが分かった．今後の課題としては，以下が挙げられる：文脈同義語として，PortableKiwiを用いて候補語に特徴的な語句を選択して，本システムとハイブリッドに使用できるようにすると，精度を向上できる可能性がある．航空分野だけでなく他の分野の同義語でも本手法をテストして有効性を確認する必要がある．多義語の処理については，クエリに対する典型的な文脈（ベクトル）情報が得られていれば，そのクエリが出現する文脈から多義性を解消できる可能性がある．例えば，「NoiseについてCabinに問い合わせたところ，CabinでのNoiseは，Door近くからであることが判明した」という文の1番目のCabinは，客室乗務員のことであり，2番目のCabinは，客室のことである．同義語の辞書作成というテーマで議論したが，語の意味的な関係は複雑であり，同義語の中にはある場面では同義語であるが，別の面では上位—下位概念として扱わないといけないものがある．例えば，「引き返し」と「ATB（空中引き返し）」，「GTB（地上引き返し）」において，「引き返し」は「ATB」，「GTB」の上位概念である．「引き返し」に関する事例を収集したい場合には，「引き返し」を「ATB」，「GTB」と同義で扱ってよいが，更に詳細に分類したい場合には，上位—下位概念として扱わなければならない．したがって，今後オントロジーを構築する手法についても研究する必要がある．</section>
</root>
