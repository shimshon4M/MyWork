<?xml version="1.0" ?>
<root>
  <jtitle>文脈的素性を用いた固有表現間の関係性判定</jtitle>
  <jauthor>平野徹松尾義博	菊井玄一郎</jauthor>
  <jabstract>本論文では，テキストに出現する固有表現の組が意味的な関係を有するか否かを判定する手法，特に異なる文に出現する固有表現の組に有効な手法を提案する．提案手法では，SalientReferentListに基づく文脈的素性を新たに導入し，単語や品詞，係り受けなどの伝統的に利用されている素性と組合わせた．これらの素性はひとつの木構造として表現され，ブースティングに基づく分類アルゴリズムに渡される．実験結果では，提案手法は従来手法より精度11.3%，再現率14.2%向上することが確認できた．</jabstract>
  <jkeywords>固有表現，関係性判定，文脈的素性</jkeywords>
  <section title="はじめに">近年，統計的言語処理技術の発展によりテキスト中の人名や地名，組織名といった固有表現(NamedEntity)を高精度で抽出できるようになってきた．これを更に進めて，「福田康夫（人名）」は「日本（地名）」の「首相（関係ラベル）」であるといった固有表現間の関係を抽出する研究が注目されている．固有表現間の関係が抽出できれば，テキストからRDF(ResourceDescriptionFramework)で表現される様な構造化データを構築することが可能となる．この構造化データを用いれば，例えば「大阪に本社がある会社の社長」といった「地名⇔組織名」と「組織名⇔人名」の関係を辿るような「推論」を行なうことができ，より複雑な情報検索，質問応答や要約に有益である．我々は，入力されたテキストから関係3つ組である［固有表現_1，固有表現_2，関係ラベル］を抽出する研究を進めている．例えば，「福田康夫氏は日本の首相です。」というテキストから［福田康夫，日本，首相］の関係3つ組を抽出する．この関係3つ組をテキストから抽出するには，(a)テキストにおける固有表現の組の意味的関係の有無を判定（関係性判定）する技術と，(b)固有表現の組の関係ラベルを同定する技術が必要である．本論文では，(a)のテキスト内で共起する固有表現の組が，そのテキストの文脈において意味的な関係を有するか否かを判定する手法を提案する．ここでは，英語での関係抽出の研究であるACEのRelationDetectionandCharacterizationの指針に準じて，固有表現間の意味的関係について以下のように定義する．次の2種類の単位文，(1)『固有表現_1が固有表現_2を〜する』もしくは(2)『固有表現_1の〜は固有表現_2だ』で表現しうる関係が，テキストにおいて言及，または含意されている場合，単位文の要素となる二つの固有表現は意味的関係を有する．ここで，単位文(1)『固有表現_1が固有表現_2を〜する』においては，格助詞を「が」「を」に固定しているわけでなく，任意の格助詞，『固有表現_1が固有表現_2で〜する』や『固有表現_1を固有表現_2に〜する』，でも良い．意味的関係を有する固有表現の組について例を示す．例えば「温家宝首相は人民大会堂で日本の福田康夫首相と会談した。」というテキストでは，『温家宝が福田康夫と会談した』，『温家宝が人民大会堂で会談した』，『福田康夫が人民大会堂で会談した』，『日本の首相は福田康夫だ』が言及されているため，「温家宝⇔福田康夫」，「温家宝⇔人民大会堂」，「福田康夫⇔人民大会堂」，「日本⇔福田康夫」の組が意味的関係を有する．また，「山田さんが横浜を歩いていると，鈴木さんと遭遇した。」というテキストでは，『山田が横浜を歩いていた』，『山田が鈴木と遭遇した』が言及されており，また『鈴木が横浜にいた』が含意されているため，「山田⇔横浜」，「山田⇔鈴木」，「鈴木⇔横浜」の組が意味的関係を有する．固有表現間の関係性判定の従来研究は，単語や品詞，係り受けなどの素性を用いた機械学習の研究が多い．例えば，らの研究では，与えられた二つの固有表現の関係の有無を判断するのに，係り受け木における二つの固有表現の最短パスと，二つの固有表現の間の単語とその品詞を素性として利用した手法を提案している．特に，係り受け木における二つの固有表現の最短パスを素性として利用することが，固有表現間の関係性判定に有効であることを報告している．しかし，で後述するように，実データ中に存在する意味的関係を有する固有表現の組のうち，異なる文に出現する固有表現の組は全体の約43.6%を占めるにも関わらず，従来手法では，係り受けなどの文に閉じた素性だけを用いている．この文に閉じた素性は，異なる文に出現する固有表現間の組には利用できず，従来手法では，二つの固有表現の間の単語とその品詞だけを素性として利用するため，適切に意味的関係の有無を判別することができない．本論文では，係り受けなどの文に閉じた素性だけでなく，文脈的情報などの複数の文をまたぐ素性を導入した機械学習に基づく関係性判定手法を提案し，その有効性について議論する．</section>
  <section title="関係性判定における文脈的素性の利用">提案手法では，SalientReferentListに基づく文脈的素性を導入し，単語や品詞，係り受けなどの伝統的に利用されている素性と組合わせる．これらの素性はひとつの木構造として表現され，ブースティングに基づく分類アルゴリズムに渡される．本手法における処理の流れは次の通りである．テキストに出現する固有表現の組が入力され，(1)形態素解析や固有表現抽出，係り受け解析を行なう基盤解析部，(2)提案する文脈的素性や係り受けなどに基づく素性を抽出する素性抽出部，(3)抽出された素性に基づいて正例と負例に分ける分類部を通り，入力された固有表現の組が意味的関係を有するか否かを判定した結果を出力する．ここでは，文脈的素性の基本的な考え方と関係性判定に利用する具体的な素性について説明する．</section>
  <subsection title="文脈的素性の基本的な考え方">異なる文に出現する固有表現の組が意味的関係を有するということは，与えられた固有表現の組のうち，先に出現する固有表現が，後に出現する固有表現を含む文において「文脈的に参照され易い」ことを意味する．例えば，例1のテキストにおいて，「ケン⇔アメリカ」の組は先に出現する「ケン」が後に出現する「アメリカ」を含む文において文脈的に参照され易い（実際にガ格ゼロ代名詞の先行詞である）ため『ケンがアメリカに渡る』という意味的関係を持つが，「ナオミ⇔アメリカ」の組の場合は文脈的に参照されにくいため意味的関係を持たない．（例1）明日、ケン_iは大阪を訪れ、ナオミと会う。（例1）その後（_iガ）アメリカに渡りトムと旅行する。以上のことから，与えられた固有表現の組のうち，先に出現する固有表現が，後側の固有表現が出現する文脈において参照されるか否かという情報を素性として用いることが意味的関係の有無を判定するのに有用であると考えられる．本研究では，上記の情報を取得するために，ある名詞句が後続する文脈において「どの程度参照され易いか」を評価するアルゴリズムの手法を用いる．</subsection>
  <subsection title="Salient Referent Listと優先規則">Nariyamaは，談話の構造と焦点の移り変わりを説明する理論であるセンタリング理論を日本語ゼロ代名詞の照応解析に適用するアルゴリズムとしてSalientReferentListとその優先規則を提案した．このアルゴリズムは，言い換えると，ゼロ代名詞よりテキスト前方に出現した名詞句を先行詞になりやすい順に並び替えるものである．Nariyamaのゼロ代名詞照応解析手法は，1文前の先行詞候補のみを対象としてきたセンタリング理論の考え方に対し，先行詞候補を蓄える記憶領域であるSalientReferentListに2文以上前の候補も保持することができる．また，この手法では，次に示す先行詞らしさの選好を用いる．主題（``は''）&gt;主語（``ガ格''）&gt;間接目的（``二格''）&gt;直接目的（``ヲ格''）&gt;その他この選好は，日本語は主題であるほど省略されやすく，また主題は助詞``は''を用いて記される傾向があるという知見に基づいたものである．SalientReferentListは上記の要素（主題，主語，間接目的，直接目的，その他）のそれぞれにスタック（後入れ先出し構造）を持ち，先行詞候補を保持する際には，ゼロ代名詞の直前まで，次の処理を繰り返す．テキストの先頭から文の流れに沿って1つずつ先行詞候補（名詞句）を抽出し，格情報に対応するスタックにPushする．ゼロ代名詞を補完する際は，SalientReferentListに保持されている情報と，上に示した選好，スタックに基づき，優先度の高い候補から順にガ格，二格，ヲ格に同定する．例1のテキストを用いて，ゼロ代名詞（_iガ）の照応解析時の処理の流れを示す．まず，テキスト先頭から文の流れに沿って，ゼロ代名詞の直前までにある「明日」，「ケン」，「大阪」，「ナオミ」を，順に格助詞に対応するスタックにPushする．結果，図のような情報がSalientReferentListに保持される．次に，ゼロ代名詞を補完するために，先に示した選好とスタックに基づき，1.「ケン」，2.「大阪」，3.「ナオミ」，4.「明日」と優先度の高い順に並び替える．この並び替えによって最上位になった「ケン」をゼロ代名詞（_iガ）の先行詞に同定する．</subsection>
  <subsection title="固有表現間の関係性判定への適用方法">固有表現間の関係性判定では，与えられた固有表現の組のうち，先に出現する固有表現が，後に出現する固有表現を含む文脈において参照され易いか否かを取得するために，上記のSalientReferentListを利用する．ここで，本研究においては，ゼロ代名詞を見つけ，その先行詞を同定するといった明示的な省略補完は行わないことに注意されたい．</subsection>
  <subsubsection title="Salient Referent Listの最上位を利用">固有表現間の関係性判定にSalientReferentListを適用するにあたって，NariyamaアルゴリズムにおけるSalientReferentListへの名詞句の格納処理を，「ゼロ代名詞の直前まで」ではなく，「後に出現する固有表現の直前まで」と変更する．つまり，与えられた固有表現の組のうち，後に出現する固有表現の直前まで，次の処理を繰り返し，SalientReferentListに名詞句を保持する．テキストの先頭から文の流れに沿って1つずつ名詞句を抽出し，格情報に対応するスタックにPushする．そして，SalientReferentListに保持されている情報と，で示した選好，スタックに基づき，優先度の高い順に並び替える．提案手法では，先に出現する固有表現が，並び替えられた情報の中で最上位の名詞句か否かを文脈的素性として利用する．つまり，先に出現する固有表現と並び替えによって最上位になった名詞句が一致すれば，先に出現する固有表現は，後に出現する固有表現を含む文脈において参照され易いと判断する．この参照され易いか否かを文脈的素性として利用する．本論文では，本素性を``SRL-T''(SalientReferentListTop)と呼び，素性の値は，参照され易いと判断されれば1となる．例1のテキストにおいて，「ケン⇔アメリカ」の組が与えられた時の処理の流れを示す．テキストの先頭から文の流れに沿って，後に出現する固有表現「アメリカ」の直前までにある名詞句の「明日」，「ケン」，「大阪」，「ナオミ」を順に，格情報に対応したスタックにPushする．結果，図のような情報がSalientReferentListに保持される．次に，で示した選好とスタックに基づき，1.「ケン」，2.「大阪」，3.「ナオミ」，4.「明日」と優先度の高い順に並び替える．ここで，先に出現する固有表現「ケン」と最上位になった名詞句「ケン」が一致するので，「ケン」は「アメリカ」を含む文脈において参照され易いと判断し，文脈的素性``SRL-T''を1とする．一方，同テキストにおいて，「ナオミ⇔アメリカ」の組が与えられた時は，後に出現する固有表現「アメリカ」が上の例と同じため，同じ並び替え結果（1.「ケン」，2.「大阪」，3.「ナオミ」，4.「明日」）が得られる．ここでは，先に出現する固有表現「ナオミ」と最上位になった名詞句「ケン」が一致しないので，「ナオミ」は「アメリカ」を含む文脈において参照されにくいと判断し，文脈的素性``SRL-T''を0とする．このようにSalientReferentListを利用した文脈的素性によって，で述べた例1のテキストにおける「ケン⇔アメリカ」と「ナオミ⇔アメリカ」の意味的関係の有無を適切に判定できると期待できる．</subsubsection>
  <subsubsection title="Salient Referent Listの構造を利用">で述べたNariyamaのゼロ代名詞照応解析手法で用いられている選好は，日本語は主題であるほど省略されやすいという知見に基づいており，この選好によって並び替えられる名詞句は，当然主題になりやすいものが上位にくる傾向にある．つまり，上記のようにSalientReferentListを選好で並び替え，その最上位を用いる方法では，与えられた固有表現の組のうち，先に出現する固有表現が地名や時間などの主題になりにくい固有表現の場合，後に出現する固有表現を含む文脈において，参照されにくいと判断されることが多い．（例2）昨日、大阪でパーティーが開かれた。（例2）ケンやトムが出席した。例えば，例2のテキストにおいて「大阪⇔ケン」の組が与えられた時，テキストの先頭から文の流れに沿って，後に出現する固有表現「ケン」の直前までにある名詞句の「昨日」，「大阪」，「パーティー」を順に，格情報に対応したスタックにPushし，図の情報がSalientReferentListに保持される．そしてで示した選好とスタックに基づき，1.「パーティー」，2.「大阪」，3.「昨日」と優先度の高い順に並び替えられる．ここで，先に出現する固有表現「大阪」と最上位になった名詞句「パーティー」が一致しないので，「大阪」は「ケン」を含む文脈において参照されにくいと判断され，文脈的素性``SRL-T''は0となる．このように，SalientReferentListをゼロ代名詞照応解析のための選好で並び替える方法では，地名や時間などの主題になりにくい固有表現が，後続する文脈において参照され易いか否かを判定することができない．これはゼロ代名詞照応解析は述語の場所格や時間格などの任意格要素の補完を対象としていないからである．そこで，地名や時間などの固有表現が，後続する文脈において参照され易いか否かを判定するために，SalientReferentListをゼロ代名詞照応解析のための選好で並び替えず，地名や時間としてどの程度参照され易いかを素性として利用する．本論文では，SalientReferentListに保持された情報を，構造を持つ情報と捉え，その構造情報を固有表現間の関係性判定に用いる．SalientReferentListに保持された情報から構造情報を生成する方法は，まず，SalientReferentListに保持された情報は，与えられた固有表現の組のうち，後に出現する固有表現の直前の情報であるため，生成する構造情報の根ノードを後に出現する固有表現とする．次に，各要素（主題，主語，間接目的，直接目的，その他）ごとにスタックから最上位の名詞句をPopして，根ノードの子ノードに配置し，そして，スタックが空になるまで，名詞句を順次Popし，1つ前にPopされた名詞句の子ノードに配置する．ここで各ノードに，どの要素の情報かを区別するため，``は''などのラベルも付与する．提案手法では，地名や時間としてどの程度参照され易いかを得るために，生成した構造情報における二つの固有表現の最短パスの構造を文脈的素性として利用する．本論文では，本素性を``SRL-S''(SalientReferentListStructure)と呼ぶ．例2のテキストの「大阪⇔ケン」の組が与えられたときの処理の流れを示す．後に出現する固有表現「ケン」の直前までの名詞句の「昨日」，「大阪」，「パーティー」を順に，格情報に対応するスタックにPushし，図の情報がSalientReferentListに保持される．このSalientReferentListに保持された情報は，後に出現する固有表現「ケン」の直前の情報であるため，構造情報の根ノードを「ケン」とする．次に，``主題''は情報が空のためスキップし，``主語''の最上位の名詞句「パーティー」をPopして根ノードの子ノードに要素ラベルを付与した「ガ格：パーティー」配置する．そして，``間接目的''と``直接目的''の情報も空のためスキップし，``その他''の最上位の名詞句「大阪」をPopして根ノードの子ノードに「他：大阪」を配置する．最後に，``その他''の名詞句「昨日」をPopして，1つ前にPopした名詞句「他：大阪」の子ノードに「他：昨日」を配置する．生成された構造情報を図を示す．この構造において二つの固有表現「大阪⇔ケン」の最短パスの構造（図）を文脈的素性``SRL-S''とする．このように，SalientReferentListに保持された情報を構造として捉えることで，先に出現する固有表現が地名や時間の場合も，後続する文脈において参照され易いか否かが取得でき，例2のテキストにおける「大阪⇔ケン」の意味的関係の有無を適切に判定できると期待できる．</subsubsection>
  <subsubsection title="2つの文脈的素性の組み合わせ">提案した2つの文脈的素性は，共に，先に出現する固有表現が，後続する文脈で参照され易いか否かを表現しているが，前者のSalientReferentListの最上位を用いた素性``SRL-T''は，主題になりやすい人名や組織名の，後者のSalientReferentListの構造を用いた素性``SRL-S''は，主題になりにくい地名や時間の参照され易さを示している．SalientReferentListの構造を用いた素性``SRL-S''でも，主題になり易い人名や組織名の参照され易さを表現することができるが，``SRL-S''は，先に出現する固有表現が保持されているスタックしか考慮しないため，例えば，先に出現する固有表現が``主語''の1番目に保持されている時，``SRL-S''は，``主題''に他の名詞句が保持されている・いないに関わらず同じ構造が素性となるが，``SRL-T''は，``主題''に他の名詞句が保持されていれば0に，``主題''に他の名詞句が保持されていなければ1になる．このように提案した2つの素性は，常に同じ情報になるわけではない．そこで，本論文では，で後述すように，2つの文脈的素性を組み合わせる．</subsubsection>
  <subsection title="分類器">分類器には，構造情報を用いた研究で高精度な分類結果が報告されている構造情報を明示的に利用した分類手法を用いる．構造情報を明示的に利用した分類手法には，TreeKernelやHDAGKernelなどのカーネル法を利用した手法と，部分木を素性とするブースティングに基づく手法などがある．今回の実験では，比較的学習時間が短く実験が容易に行える工藤らのアルゴリズムが実装された分類器BACTtaku/software/bact/を使用した．固有表現間の関係性判定では，で提案した2つの文脈的素性と従来から用いられている固有表現間の単語や係り受けに基づく素性を，まとめてひとつの大きな木構造で表現する．ここで，SalientReferentListの最上位を利用した素性と固有表現間の間の単語とその品詞に基づく素性は木構造で表現されていないため，各素性を1つのノードからなる木構造とする．そして，全ての木構造をまとめる際は，根ノードに``Root''と書かれたノードを用意して，その子ノードに各木構造を配置する．また，どの素性に属するノードかを区別するため，各ノードに``SRL-T''などのラベルを付与した．例えば，例2のテキストにおける「ケン⇔大阪」の組の素性をひとつの大きな木構造で表現すると図のようになる．この木構造を用いて，学習時には，分類に有効な規則集合（部分木）を学習し，解析時には，学習した規則集合を適用することで固有表現の組が意味的関係を有するか否かを判定する．</subsection>
  <section title="評価実験"/>
  <subsection title="評価データ">テキスト中の固有表現の組に人手で意味的関係の有無を判定した日本語の新聞記事1,400記事とブログ4,800記事の計6,200記事を用いる．なお固有表現の組として［人名⇔地名］，［人名⇔組織名］，［組織名⇔地名］，［人名⇔人名］，［組織名⇔組織名］，［地名⇔地名］の組合わせを対象に評価データを作成した．作業者にはで述べた意味的関係の定義に加え，注意すべき点として，否定・願望・仮定で記述された内容に関しては意味的関係はないとすること，実世界で関係があると分かっていても，テキストの文脈から読み取ることができなければ意味的関係はないとすることをインストラクションとして与えた．また作業者間の一致率を調べるために，2人の作業者（作業者Aと作業者B）がタグ付け作業を行なった．データの詳細を表に示す．6つの組合わせの総数537,411組に対して，作業者Aは24,329組が，作業者Bは22,263組が意味的関係を有すると判断し，作業者間の値は0.827となった．また，作業者Aを正解，作業者Bをシステムと見なしてで示す精度と再現率を計算すると，精度0.873，再現率0.799となった．このようなデータにおいて，作業者Aが作成したデータ，537,411組のうち24,329組が意味的関係を有すると判断されたデータ，を用いて5分割交差検定を行なった．</subsection>
  <subsection title="学習方法">今回の実験では，［人名⇔地名］，［人名⇔組織名］，［組織名⇔地名］，［人名⇔人名］，［組織名⇔組織名］，［地名⇔地名］の各組合わせごとに，対象となる二つの固有表現が(A)同じ文に出現する場合と(B)異なる文に出現する場合に分けて学習しモデルを作成した．このように対象を2つに分ける理由として，(A)には係り受けに基づく素性などの文に閉じた素性が，(B)には提案した文脈的素性などの複数の文をまたぐ素性が特に有効であると考えられ，分けずに学習すると各々の特徴が平滑化され適切な学習ができないと考えられるからである．また評価データにおける(A)文内と(B)文間の内訳は表のようになっており，(A)と(B)で組合わせ総数に対する意味的関係のある組の割合が極端に異なることからも(A)と(B)を分けて学習することが考えられる．</subsection>
  <subsection title="実験結果と考察">テキストにおける固有表現間の関係性判定実験において，提案した文脈的素性を用いることによりどの程度解析性能が向上するかを調査するために，次の5つの手法を比較評価した．なお，固有表現の間の単語とその品詞，係り受けに基づく素性や文脈的素性の抽出は，既存の形態素解析器・固有表現抽出器・係り受け解析器で得られた結果を利用した．実験結果として，全組合わせの再現率—精度曲線を図に示す．この曲線は，分類器の出力した識別関数の値を動かして描いた．ただし，WDでは，単語距離nを変化させて再現率—精度曲線を描いた．なお精度と再現率は次式の通りである．精度=システムが出力した正解関係あり数システムが出力した関係あり数[0.5zw]再現率=システムが出力した正解関係あり数正解関係あり数gather*図において``DEP''と``DEP+SRL-T''，``DEP+SRL-S''，``DEP+SRL-T+SRL-S''を比較すると，文脈的素性を用いた提案手法が関係性判定に有効であることがわかる．分類器の出力した識別関数の値が0における各手法の精度と再現率は，``DEP''が精度0.691，再現率0.508，``DEP+SRL-T''が精度0.762，再現率0.603，``DEP+SRL-S''が精度0.749，再現率0.590，``DEP+SRL-T+SRL-S''が精度0.804，再現率0.650と提案手法によって，精度が約0.113，再現率が約0.142向上することが確認できた．ここで，``DEP+SRL-T''と``DEP+SRL-S''を比較すると，精度，再現率の数値に大きな差は見られないが，これらを導入することにより正しく判定できるようになった事例をみると，``DEP+SRL-T''は主題になり易い人名と組織名が先に出現する組に，``DEP+SRL-S''は主題になりにくい地名が先に出現する組に有効であることが確認できた．また，これらを組み合わせた``DEP+SRL-T+SRL-S''では，この両組が正しく判定できるようになっており，2つの文脈的素性が補いあうことで更に精度・再現率が向上したことが確認できた．次に，提案手法が，文間の精度と再現率の向上にどの程度寄与したかを調査した．実験結果として，表に全組合わせの(A)文内と(B)文間に対する各手法の精度と再現率を示す．表からわかるように，提案手法``DEP+SRL-T+SRL-S''は，``DEP''に比べ，文間の場合，精度が約0.220，再現率が約0.223向上したことが確認できた．最後に，今回対象にした［人名⇔地名］，［人名⇔組織名］，［組織名⇔地名］，［人名⇔人名］，［組織名⇔組織名］，［地名⇔地名］の各組合わせに対して提案手法が有効かを調査した．実験結果として，表と表に各組合わせに対する各手法の精度と再現率を示す．これらの結果から，提案手法は全ての組合わせで精度，再現率が向上していることが確認できる．またもっとも効果があったのは，［組織名⇔組織名］に対してで精度が約0.166，再現率が約0.190向上することがわかった．</subsection>
  <subsection title="誤り分析">テキストにおける固有表現間の関係性判定の評価実験おいて，提案手法が，誤って意味的関係を有すると判定した3,853事例と意味的関係を有すると判定できなかった8,504事例の計12,357事例のうち分類器の出力する識別関数の絶対値が大きいものから1,000事例（但し，前処理の係り受け解析が誤っている事例は除く）を分析した結果，次の2つ誤りが約80％の誤りをカバーすることがわかった．文間に出現する固有表現の組の誤りとして，首相や社長といった役職を示す一般名詞が出現することによって，異なる文に出現する固有表現の組が意味的関係を有すると人なら判断できるものが多い．例えば，次の例3のようなテキストにおいて，首相という一般名詞が2文目にあることで，1文目の福田首相と2文目のアメリカが意味的関係を有するとなる．これは，首相や社長といった役職を示す一般名詞が，代名詞と同様に先行詞を持つことが原因と考えられる．同様に，同社や同県などのように「同…」といった名詞による照応も存在する．これに対処するには，どの一般名詞が先行詞を持つか，またその先行詞は何かを見つける必要があると考えられる．（例3）明日、福田首相は中国を訪れ、胡錦濤国家と会談する。（例3）その後、首相はアメリカに渡りブッシュ大統領と会談を予定している。文間に出現する固有表現の組の誤りとして，ブログ記事で頻繁に見られる，ひとつの記事に複数の話題について記述されている場合の誤りが多かった．例えば，ある記事の前半には「サッカー」について記述されており，その後「選挙」について記述されているものなどがある．これらの記事において，異なる話題に出現する固有表現の組は，ほとんどの場合は意味的関係はない．これに対処するには，入力テキストの話題の区切りを適切に見つける必要があると考えられる．</subsection>
  <section title="おわりに">本論文では，テキストにおける固有表現間の関係性判定に取り組み，従来の係り受けなどの文に閉じた素性だけでなく，複数の文をまたぐSalientReferentListに基づいた文脈的素性を導入した機械学習に基づく手法を提案した．［人名⇔地名］，［人名⇔組織名］，［組織名⇔地名］，［人名⇔人名］，［組織名⇔組織名］，［地名⇔地名］の固有表現の組に対する評価実験では，提案手法は精度80.4％，再現率65.0％と，従来研究より精度が約11.3％，再現率が約14.2％向上したことがわかり，提案手法の有効性が確認できた．また提案手法は，実験した全ての固有表現の組に対して効果があることも確認できた．今後は，固有表現間の関係性判定の更なる精度向上を目指し，上記の考察で述べた問題に取り組むとともに，次のステップである(b)固有表現の組の関係ラベルを同定する技術にも取り組む予定である．document</section>
</root>
