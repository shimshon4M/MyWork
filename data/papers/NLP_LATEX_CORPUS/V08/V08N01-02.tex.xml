<?xml version="1.0" ?>
<root>
  <addtolength>-0.5</addtolength>
  <title/>
  <author/>
  <jkeywords/>
  <section title="Introduction">Thispaperdescribesanagent-basedparallelHPSGparser.Itsefficiencyissufficientforpracticaluseinthatitcananalyzereal-worldcorporabyusingawide-coveragegrammaranditworksefficientlyintermsofbothanalysistimeandspeed-up.TheHPSGformalismisthemostwidelyacceptedunification-basedgrammartheoryintheareaofcomputationallinguistics.Itisgaininggroundasanon-transformationalalternativetotheChomskyangrammartheory,aformalandtheoreticallyproperlinguistictheory.IthasattractedmuchinterestamongNLPresearchers,mainlybecauseitismathematicallywell-definedandisjustifiedbydetailedlinguisticexplanations,i.e.,onbothmathematicandlinguisticgrounds.Duetoitsbeingmathematicallywelldefined,theHPSGformalismissuitableforcomputer-based,algorithmicprocessingusedtodevelopefficientsystems.Duetoitsbeinglinguisticallyjustified,systemsbasedonitproducein-depthsyntacticandsemanticanalyses,makingthemsuitableforuseoverawiderangeofNLPdomains,particularlywherepreciseandaccurateinterpretationisimportant.StudiesoverthepastdecadeofHPSG-basedprocessingtechnologybyvariousNLPresearchershaveledtodrasticimprovementsinHPSG-basedsystemsintermsofefficiency,accuracy,coverage,anddepthofsyntacticandsemanticanalyses.Forexample,HPSG-basedparsingsystemsdevelopedbyourgrouphaveimprovedtheefficiency,coverage,andaccuracyofHPSG-basedsystemstothepointwheretheycanparsetheEDRJapanesecorpusinlessthan500msecpersentencewith98.7%coverageand88.6%bunsetsu-dependencyaccuracy.OthergroupshaveshownthatHPSG-baseddialog-translationsystemscanpreciselyinterpretasentencebyusingsemanticrepresentations.ThesystemdevelopedbytheDFKIgroupprovidedcorrectsyntacticandsemanticanalysesfor83%of8,520well-formedEnglishutterancesfoundinthetranscriptionsof175person-to-persondialogs.FurtheradvancesinHPSG-basedsystemsrequireadvancesintheefficiencyofparsingtechniques.Ifwecoulddevelopamoreefficientparser,wewouldbeabletoapplymoresophisticatedtechniquestotheHPSGframeworkandachievehigheraccuracy,widercoverage,anddeepersyntacticandsemanticanalyses,therebyacquiringmorepreciseinterpretations.ThoughseveralefficientHPSG-basedsystemshavealreadybeendeveloped,muchmoreefficientparsersareneeded.ThegoalofthisarticleistoachieveanefficientparallelHPSGparser.Recentimprovementsinshared-memoryparallelmachineshavebeendrastic,andsuchmachineswillbecomestandardincomputingenvironments.Byexploitingthisparallelismforparsingsystems,wewillbeabletoapplymoresophisticatedtechniquestotheHPSGframework.Wehavetakentwostepsinthisdirection.Wehavedesignedanagent-basedparallelprogrammingenvironment.Wehavedesignedaparallelparsingalgorithm.Weproposeanefficientprogrammingenvironmentimplementedonshared-memoryparallelmachinesfordevelopingparallelNLPsystemsbasedontypedfeaturestructures(TFSs;theTFSisabasicunitoftheHPSGformalism).Wecallitthe``parallelsubstrateforTFS(PSTFS)''environment.Ithasmanycomputationalagentsrunningondifferentprocessorsinparallel;theseagentscommunicatewitheachotherusingmessages.Thesystemtaskssuchasparsingandsemanticprocessingaredividedintoseveralpieces,whicharesimultaneouslycomputedbyseveralagents.Weuseanagent-basedarchitecturesothatwecandevelopanefficientparallelHPSGparserwithease.Usingthisarchitecture,wecandividethedevelopmentofaparallelHPSGparserintotheparsingalgorithmitselfandtheprocessingoftheTFSs.AnotherwaytodevelopparallelNLPsystemswithTFSsistouseafullyconcurrentlogicprogramminglanguage.However,wehavenotedthatparallelismshouldbecontrolledinaflexiblewaywithdeepanalysesandconsiderationtoachievehighperformance.(Thefixedconcurrencyinlogicprogrammingdoesnotprovidesufficientflexibility.)ThePSTFSenvironmentissuitableforachievingsuchflexibility.AsthebasisofourparallelHPSGparsingalgorithm,wechosetheCKYalgorithm.AparallelCKYalgorithmisdesirablefromtheviewpointsofspeed-up,datadistribution,andmemoryefficiency.Severalparallelparsingalgorithmshavebeendeveloped,butmostofthemareneitherefficientnorpracticalenough.Theefficiencyofouralgorithmwasshownthroughexperiments.WedescribehowtowriteprogramsinthePSTFSenvironmentandthemechanismusedtoachieveefficiencyinSection2.Section3describesourCKY-styleparallelHPSGparsingalgorithm,anditsperformanceisshowninSection4throughaseriesofexperiments.TheperformanceandtimecomplexityofourparserisdiscussedinSection5.</section>
  <section title="Parallel Substrate for Typed Feature Structures (PSTFS)">ThePSTFSisanefficientparallelsubstrateforTFSprocessingandprovidesanagent-basedprogrammingenvironment.Anagentisaunitofparallelism,encapsulation,datadistribution,andmutualexclusion.Eachagentrunsinparallelandsynchronizesitselfwithotheragentsbysendingandreceivingmessages.Fromtheprogrammer'sviewpoint,PSTFShastwotypesofagents:0.5ptplus0.5ptminus0.5ptconstraintsolveragents(CSAs).controlagents(CAs)TheCSAsarecarefullydesignedtoattainefficientcommunicationforpassingmessagescontainingTFSsandefficientprocessingfortheTFSs.TheCAshaveoverallcontrolofasystem,includingcontrolofparallelism,andtheybehaveasmastersoftheCSAs(seeFigure~).WhenaCAneedstoprocessTFSs,theTFSsaretransferredtoCSAsbysendingmessagescontainingtheTFSs,andthentheCSAsprocessthemaccordingtothemessages.NotethattheCAscanneithermodifynorgenerateTFSsbythemselves.SupposethatoneistryingtoimplementaparsingsystembasedonPSTFS.TheCAscorrespondtoanabstractedparsingalgorithm,andtheCSAscorrespondtotheapplicationofphrasestructurerules.By``abstractedparsingalgorithm''wemeanahigh-leveldescriptionofaparsingalgorithminwhichtheapplicationofphrasestructurerulesisregardedasanatomicoperationorasubroutine.ThekeystoachievingefficiencyforprocessingandpassingTFSsarei)havingtheCSAsworkindependentlyinparallel,ii)transferringtheTFSsasIDsandactuallytransferringtheactualimagesoftheTFSsonlyaftertheIDshavereachedtheCSAsrequiringtheTFSs,andiii)transferringtheTFSsviashared-memory.ProgramminginthePSTFSenvironmentisdescribedinSection2.1,andthePSTFSarchitectureisdescribedinSection2.2.</section>
  <subsection title="Programming in PSTFS environment">TheprogramminglanguageforPSTFSisquitesimpleandnatural;itwascarefullydesignedtoprovidebothhigh-performanceandeaseofprogramming.0.5mmPSTFSwasimplementedbycombiningtwoexistingprogramminglanguages:theactor-basedconcurrentprogramminglanguageABCL/andtheTFS-basedsequentialprogramminglanguageLiLFeS.DescriptionsofCAsarewritteninABCL/,whiledescriptionsofCSAsaremainlywritteninLiLFeS.Figures~andshowexamplesofPSTFScoding.Thetaskistoconcatenatethefirstandlastnamesinagivenlist.TheCAinthisexample(Figure.~)iscalledaname-concatenator.ItgatherspairsoffirstandlastnamesbysendingaCSAthemessage``|name()''(See(A)inFigure~).WhentheCSAreceivesthismessage,itregardsitasaProlog-likequeryinLiLFeS,andprocessitaccordingtothecodeofaCSA(Figure~).Thereareseveralfactswiththepredicate'name'.Whenthemessage``|name()''isprocessedbyaCSA,allpossibleanswersdefinedbythesefactsarereturned.TheobtainedpairsarestoredinvariableFinthename-concatenator(Figure~).Thename-concatenatoragentnextsendsthemessage_namewithaTFStoCSAs(See(B)inFigure~).ThemessagecontainsoneoftheTFSsinF.EachCSAconcatenatesthevalueofFIRSTwiththevalueofLASTinthereceivedTFSbyusingthedefiniteclauseconcatenate_namegiveninFigure~.TheCSAscanbasicallyperformconcatenationinparallelandindependently.Theresultisreturnedtothename-concatenatorthatrequestedthejob.The-concatenatorplacesthereturnedvaluesintovariableR.TheCAname-concatenatorcontrolstheoverallprocess.Itcontrolsparallelismbysendingthemessages.TheoperationsontheTFSsareperformedbytheCSAswhenaskedtodosobyaCA.ThisdistinctionbetweenCAsandCSAsisaminorfactorofwritingasequentialparser,butithasamajorimpactinaparallelenvironment.Forinstance,supposethatseveraldistinctagentsevokeapplicationsofphrasestructurerulesagainstidenticaldatasimultaneously,andtheapplicationsperformdestructiveoperationsonthedata.Thiscancauseananomalybecausetheagentswillmodifytheoriginaldatainanunpredictableorder,sothereisnowaytomaintainconsistency.Toavoidthisproblem,onehastodeterminewhatisanatomicoperationandhowtoprovideamethodtopreventanomalieswhenatomicoperationsareevokedbyseveralagents.Inourframework,anyactiontakenbyaCSAisviewedasanatomicoperation,sonoanomalycanoccur,evenifCSAsconcurrentlyperformoperationsonidenticaldata.ThisisdonebycopyingtheTFSs,whichdoesnotrequireanydestructiveoperation.ThedetailsaredescribedinSection2.2.TheotherimplicationofthedistinctionbetweenCAsandCSAsisthatagentscanefficientlycommunicateinanaturalway.DuringparsinginHPSG,TFSswithhundredsofnodescanbegenerated.EncodingsuchTFSsinamessageandsendingthemefficientlyarenottrivialoperations.PSTFSprovidesacommunicationschemethatenablesefficientsendingandreceivingofsuchTFSs.Thisismadepossiblebythedistinctionbetweenagents.Moreprecisely,sinceCAscannotmodifyaTFS,theydonothavetohaveanactualimageofaTFS.WhenaCSAreturnstheresultstotheCA,itonlyhastosendtheIDsoftheTFSs.OnlywhentheIDistransferredtootherCSAsandtheytrytomodifytheTFSwiththeID,doestheactualtransferoftheTFS'sactualimageoccur.SincethetransferiscarriedoutonlybetweenCSAs,itcanbedirectlyandefficientlyperformedbyusingalow-levelrepresentationoftheTFSsusedintheCSAs.NotethatifCAsmodifiedTFSsdirectly,thiscommunicationschemecouldnotbeused.</subsection>
  <subsection title="Constraint Solver Agent: PSTFS Architecture">ThissectionexplainsthearchitectureofPSTFS,focusingontheexecutionmechanismofCSAs.ACSAisimplementedbymodifyingtheLiLFeSabstractmachine(LiAM),whichisanabstractmachineforTFSs,originallydesignedforexecutingLiLFeSprograms.TheimportantconstraintindesigningthearchitectureofPSTFSisthatTFSsgeneratedbyCSAsmustbepreservedunmodified.Thisisbecausetheyareusedbyseveralagentssimultaneously.IfaTFSweremodifiedbyaCSAandifotheragentsdidnotknowthis,theexpectedresultswouldnotbeenobtained.Notethatunification,whichisamajoroperationonTFSs,isadestructiveoperation.IfmanyagentstrytounifyidenticalTFSssimultaneouslywithoutanymechanism,themodificationswouldoccursimultaneously.OurexecutionmechanismsolvesthisproblembylettingCSAscopytheTFSseachtimetheytrytomodifytheTFSs.Thoughthismaynotlookefficientatfirst,itisperformedefficientlybyusingshared-memorymechanismsandourcopyingmethods.ACSAusestwodifferenttypesofmemoryareasasitsheap(Figure~):0ptplus0ptminus0ptLocalheapSharedheapThelocalheapisusedfortemporaryoperationsduringcomputationinsidetheCSA.ACSAcanneitherreadnorwritetothelocalheapsofotherCSAs.ThesharedheapisusedasamediumofcommunicationbetweenCSAs,anditisimplementedonsharedmemoryinsideparallelmachines.WhenaCSAcompletesacomputationonaTFS,itwritestheresulttothesharedheap.SincethesharedheapcanbereadbyanyCSA,eachCSAcanreadtheresultsofoperationsbyotherCSAs.However,welimittheportionofthesharedheaptowhichtheCSAcanwrite.OtherCSAscannotwritetothatportion.Next,welookatthestepsperformedbyaCSAwhenitreceivesamessagefromaCA.NotethatthemessagecontainsonlytheIDsoftheTFSsasdescribedinSection2.1.TheIDsaregivenaspointersonthesharedheap.SeeFigure~.ACAsendsamessagetoaCSA.TheCSAcopiestheTFSstowhichtheIDsinthemessagepointfromthesharedheaptothelocalheapoftheCSA.TheCSAprocessesaProlog-likequerybyusingLiAMonthelocalheap.Ifthequeryreceivesananswer,theansweriscopiedtotheportionofthesharedheapwritablebytheCSA.TheCSAevokesbacktrackinginLiAM,keepingtheIDsofthecopiedTFSs,andgoestoStep(iii).Ifthereisnoanswer,itgoestoStep(v).TheCSAsendsamessagewiththeIDsoftheresultingTFSsbacktotherequestingCA.NotethattheresultsofthecomputationbecomereadablebyotherCSAsafterstep(v).Tosumup,thisprocedurehasthefollowingdesirablefeatures.Withefficientdatatransferinshared-memorymachines,thesefeaturesreducetheoverheadofparallelization.ThePSTFSmechanismseemstorequirealotofmemoryspaceonthesharedheapbecausetheTFSstobeprocessedinparallelmustbecopiedtothesharedheapfirst.However,inmanycasesofdevelopingNLPsystems,suchaproblemdoesn'tarisebecausewehavetokeeptheresultingTFSstosupportnon-determinismeveninthesequentialNLPsystems.Forinstance,inachartparsingforaunification-basedgrammar,intermediateparsetreesmustbepreserveduntouched.InthecaseofourparallelHPSGparser,theheapsizerequiredbytheparallelparserandthatrequiredbythesequentialparserarethesame.Ingeneral,destructiveoperationsontheresultsaredoneaftercopyingthem.ThecopyingofTFSsintheabovestepsachievessuchmechanismsnaturally,thoughitwasoriginallydesignedforefficientsupportofdatasharinganddestructiveoperationsonsharedheaps.</subsection>
  <section title="Parsing Algorithms">InthissectionwedescribeourparallelHPSGparsingalgorithmbyusingCAsandCSAs,i.e.,wedescribeouralgorithminaPSTFScode.First,weexplainasequentialCKY-styleHPSGparsingalgorithm,whichourparallelHPSGparsingalgorithmisbasedon.Ouragent-basedparallelHPSGparsingalgorithmisdescribedusingmainlyCAsbecausetheparallelismofCSAsiscontrolledbyCAs.</section>
  <subsection title="CKY-style Sequential Parsing Algorithm for HPSG">Tosimplifyourdiscussion,weassumethatanHPSGgrammarconsistsofaLexiconandaRuleSchemata.ALexiconisafinitesetoflexicalentriesintheform(w),whereisaTFSandwisaword.ARuleSchemataisafinitesetofRuleSchema,whichcorrespondtoarewritingruleinCFGandrepresentsthestructuralrelationandconstraintsbetweenamotherandherdaughtersinaparsetree.OurparsingalgorithmforHPSGisbasedontheCKYalgorithmforCFG.InaCKY-stylealgorithm,RuleSchemaisgivenintheform[=[	]],whereisaTFS,thevaluefollowedbythefeatureMOTHERcorrespondstoamother,andthevalue,followedbythefeatureDTRScorrespondstoherdaughters(correspondstoaleftdaughter,andcorrespondstoarightdaughter).Givenw_1w_2w_nasasentenceandi,j(0i&lt;jn),wedefineS_i,jasfollows:[]Intuitively,S_i,jcorrespondstothesetofthesub-parse-treeswhoseleavesarew_i+1,,w_j.AsequentialversionofthisalgorithmisshowninFigure~.``ruleschema(,,)''returnsallpossiblecomputedbyunifyingwithandwithfor=[].Conventionally,S_i,jisrepresentedasamemberofatwo-dimensionaltablecalledaCKYtable.IntheexampleshowninFigure~,thenumbersi,jineachcellcorrespondtoi,jofS_i,j.ThetablecorrespondstoaparsetreewhoserootisanelementofS_0,n.S_i,jforall0i&lt;jncanbecomputedinabottom-upmannertowardthearrows.ParsingcompleteswhencomputationofS_0,ncompletes.</subsection>
  <subsection title="CKY-style Parallel Parsing Algorithm for HPSG">WedescribeourCKY-styleparallelHPSGparsingalgorithminanagent-basedprogramminglanguagestyle.ThealgorithmisshowninFigure~andFigure~.Inouralgorithm,allS_i,jarecomputedinparallel.ParsingstartsbycreatingaCAcalledPARSER.PARSERcreatesCAs,whichwecallcell-agents,anddistributesthemtoprocessorsonparallelmachines(Figure~).Forconvenienceofexplanation,wetranscribecell-agentsasC_i,j(0i&lt;jn).EachC_i,jcomputesS_i,jinparallel.Tobemoreprecise,C_i,j(j-i=1)looksupthewordinLexiconandobtainslexicalentries.C_i,j(j-i&gt;1)waitsforthemessagescontainingS_i,kandS_k,jforallk(i&lt;k&lt;j)fromothercell-agents.WhenC_i,jreceivesS_i,kandS_k,jforanarbitraryk,itcomputesTFSsbyapplyingruleschematatoeachpairofmembersofS_i,kandS_k,j.ThecomputedTFSsareconsideredtobemothersofmembersofS_i,kandS_k,j,andtheyareaddedtoS_i,j.NotethattheseapplicationsofruleschemataaredoneinparallelbyseveralCSAsaskstheCSAonarandomlyselectedprocessortoapplyruleschemata..Finally,whenthecomputationofS_i,j(byusingS_i,kandS_k,jforallk(i&lt;k&lt;j))completes,C_i,jdistributesS_i,jtootheragentswaitingforS_i,j.ParsingcompleteswhenthecomputationofS_0,ncompletes.Toperformthisparallelization,wemustsynchronizethecomputationofS_i,j.Inouralgorithm,thefollowingDependencyalwaysholds.AslongasDependencyholds,eachS_i,jcanbecomputedinparallelinanyorderimmediatelyafteroneofthemembersofS_i,kandoneofthemembersofS_k,jarecomputed.Butanalgorithmthatfollowssuchadependencyconditiongreatlyincreasesthenumberofmessagespassed.Thisincreasestheoverheadformessagepassing,socomplexdata-flowcontrolisrequired..Inouralgorithm,Dependencyalwaysholdsbecausei)eachcell-agentcomputesT_i,k,jafterthearrivalofbothS_i,kandS_k,j,asillustratedinFigure~(A),andii)eachcell-agentdistributesS_i,jtotheagentsrequestingS_i,jaftercompletingthecomputationofS_i,j.Wecalltheloopsfromtheoutermostlooptotheinnermostloop``loopA,B,C,D,E,F''inFigure~.TheparallelizationofouralgorithmcorrespondstotheparallelizationofloopsA,B,DandE,andtheinsideofloopCisprocessedintheorderthatcomputationofbothS_i,kandS_k,jcompletes.OurparallelparsingalgorithmisanHPSGversionoftheparallelCKYparsingalgorithmforCFG.Thedifferencesbetweenthesetwoalgorithmsareasfollows.1)TheparallelHPSGparsingalgorithmdealswiththeTFSs,buttheparallelCFGparsingalgorithmdealswiththenonterminals.OwingtothePSTFSenvironment,wecanneglectthedifferencebetweenTFSsandnonterminalsinthedescriptionoftheparsingalgorithm.2)Thesetwoalgorithmsaredifferentinthenumberofloopswhichareparallelized.Weparallelizedfourloops(loopA,B,DandEinFigure~)intheparallelHPSGparsingalgorithm,butintheparallelCFGparsingalgorithm,onlytwoloops(loopAandB)areparallelized.Ingeneral,parallelprocessingoftoomuchfine-grainedtasksdecreasesthesystemperformancebecausetheratioof``theoverheadcausedbytheparallelprocessingofeachtask''to``theexecutiontimeofeachtask''increases.Thekeytoachievingtheefficiencyinparallelprocessingistofindagoodparallelismwheretheoverheadandtheexecutiontimeofeachtaskarebalanced.IntheparallelCFGparsingalgorithm,theexecutiontimefortheCFGruleapplicationisextremelyshort,andhenceitisdifficulttoparallelize2moreloops(loopDandE)becausetheratiooftheoverheadincreasesgreaterthanthebalancedratio.IntheparallelHPSGparsingalgorithm,parallelizationoftwoloopswasinsufficientbecausetheexecutiontimeoftheHPSGruleapplicationislongerthanthatoftheCFGruleapplication.Wehaveimplementedandexperimentedparallelizationoftwoloops(loopAandB),fourloops(loopA,B,DandE)andfiveloops(loopA,B,D,EandF)intheparallelHPSGparsingalgorithm,andweobservedthattheparallelizationoffourloopswasthemostefficient.AnotherparallelCKYalgorithmwasproposedbyNijholt.Themostsignificantdifferencesbetweenoursandhisareasfollows.1)Nijholt'salgorithmisbasedondata-flowcomputation,andtheoutputofS_i,jispassedonlyfromonecelltotheadjacentcellsinthetwo-dimensionaltable,i.e.,S_i,jispassedtotheprocessorthatcomputesS_i-1,jandtotheprocessorthatcomputesS_i,j+1,whereasinouralgorithm,S_i,jispasseddirectlytoS_i,k(j&lt;kn)andS_k,j(0k&lt;i).2)InNijholt'salgorithm,S_i,jispassedandreceivedinastaticallypredictedorder,whereasinouralgorithm,S_i,kispassedwhenitscomputationcompletes,andT_i,k,jisprocessedassoonascomputationofS_k,jiscompleted.Fromtheseviewpoints,ouralgorithmismoreefficientthanNijholt's.</subsection>
  <section title="Performance Evaluation">WetestedourCKY-styleparallelHPSGparseronashared-memoryparallelmachine,aSUNUltraEnterprise10000consistingof64nodes(eachnodeisa250-MHzUltraSparcprocessor)and8-GBsharedmemory.ThegrammarweusedisanunderspecifiedJapaneseHPSGgrammardevelopedinSeptember1998.Itconsistsof6ID-schemataand39lexicalentries(mostofthemarefunctionalwords)and41lexical-entry-templates(assignedtopartsofspeech).Thisgrammarhaswidecoverageandhighaccuracyforreal-worldtexts.Thecorpusconsistsofrandomlyselected881sentencesfromtheEDRJapanesecorpus(theaveragesentencelengthis20.8).Tableshowstheaverageparsingtime,alongwiththatforaparserwritteninLiLFeS.AsshowninFigure~,themaximumspeed-upreached13.2.Theaverageparsingtimewas78msecpersentence.Theparsingtimeofourparserreachedthelevelrequiredbyreal-timeapplications,thoughweusedcomputationallyexpensivegrammarformalisms,i.e.,HPSGwithreasonablecoverageandaccuracy.ThisshowsthefeasibilityofourparallelHPSGparserandPSTFS.Inaddition,ourparallelHPSGparserwasconsiderablymoreefficientthanthesequentialHPSGparserwritteninLiLFeS.AsMakinoetal.reported,asequentialparserwritteninLiLFeSismoreefficientthanotherexistingparsers;wecanthussaythatourparserismoreefficientthanotherexistingparsers.However,asshowninFigure~,speed-upwasnotproportionaltothenumberofprocessors.Wethinkthisisbecauseparallelismisnotfullyextractedinourparsingalgorithm.Figure~showsprocessorstatusduringparsingofaJapanesesentencebyourparallelparser.Theblacklinesindicatebusyperiods.Onecanseethatmanyprocessorswerefrequentlyidle.ThisidletimedoesnotsuggestthatparallelNLPsystemsareinefficient.Instead,itsuggeststhatparallelNLPsystemshavemanypossibilities.Ifweintroducesemanticprocessing,forinstance,overallprocessingtimemaynotchangebecausetheidletimecanbeusedforthesemanticprocessing.AnotherpossibilityistheuseofparallelNLPsystemsasservers.Evenifwefeedseveralsentencesatatime,throughputwillnotchangebecausetheidletimecanbeusedforparsingdifferentsentences.</section>
  <section title="Discussion">WediscusshowourparallelHPSGparserworksfromthefollowingviewpoints,i)theregionwherecell-agentsareworkingintheCKYtableatanygivenmoment,andii)theworst-casetimecomplexity,theoreticallyandempirically.</section>
  <subsection title="Active Region in CKY Table">WeconsidertheregionwhereS_i,jisbeingcomputedinaCKYtableatanygivenmoment.ThestartandcompletetimesofthecomputationofS_i,jhavethefollowingproperties:ForreasonsofsymmetryandindependencyofS_i,j(j-i=C),whicharearrangedonthesamehorizontallineinaCKYtable,computationofS_i,j(j-i=C)willcompleteatthesametimeiftheamountofcomputationforeachS_i,jisequal(anidealcondition).Insuchacondition,fromthecomplete-timeproperty,thecomputationofS_i,jproceedsfromS_i,j(j-i=1)toS_0,n,linebyline,intheCKYtable.ThefirstpairtobeavailableforcomputationofS_i,jisS_i,k~S_k,jwithkcloseto(i+j)/2.TheregionwhereS_i,jisbeingcomputedatanygivenmomentistheshadedportionofFigure~;thewidthoftheshadedportion(thelengthofYinthefigure)isthesameasthewidthoftheportionwhereS_i,jhasbeencomputed(thelengthofXinthefigure).Forthatreason,theshadedportionwidensastheparsingproceeds,sothenumberofprocessesrunninginparallelincreasesastheparsingproceeds.</subsection>
  <subsection title="Theoretical Time Complexity">Inthissection,weexplaintheworst-casetimecomplexityofourHPSGparsingalgorithm.Letf(n)betheworst-casetimecomplexitytocomputeT_i,k,jforasentencewithlengthn.ThetimecomplexityofourparallelHPSGparsingalgorithmislessthan2(n-1)f(n)+D(Disconstant)forasentencewithlengthnunderthefollowingassumptions,whilethatofasequentialalgorithmislessthan16n(n^2-1)f(n)+D6n(n^2-1)C+D=O(n^3)becausef(n)isconstant.InthecaseofHPSG,f(n)isexponential..Thenumberofprocessorsisinfinite.assumptionThereisnooverheadforparallelprocessingordistributingmessages.assumptionS_d		&amp;&amp;S_i,j|j-i=d_i,j(t)	&amp;&amp;,S_k,jforcomputingS_i,juntiltimet._i,j(t)	&amp;&amp;whosecomputationhascompleteduntiltimet._d		&amp;&amp;eqnarray*definitionForallS_i,j(j-i=d,d),[|A_i,j(t_x)|.]lemmaProof~~Whenx&lt;d2anddx,itiseasytoseethatthelemmaaboveholds.Inthecaseofd2x&lt;d,weprovideinductiveproof.ForallS_i,j(j-i=d),[|A_i,j(t_x)|.]lemmaProof~~InthesamewayastheproofofLemma~,wecanprovethat,forallS_i,j(j-i=d,d),|A_i,j(t_x)|&amp;&amp;.&amp;=&amp;.eqnarray*FromLemma~andabove,weprovedLemma~.LetT_gbe2(g-1)f(n)+D.t_gT_g.ForallC_i,j(T_g)s.t.(d=j-i),[|C_i,j(T_g)|.]lemmaProof~~Theworst-casetimecomplexityofparallelparsingforHPSGislessthan2(n-1)f(n)+D,wherenisthesentencelength.lemmaProof~~InLemma~,theparsingprocesscompleteswheng=n.Therefore,t_n&lt;2(n-1)f(n)+D.</subsection>
  <subsection title="Empirical Time Complexity">Unfortunately,theworst-casetimecomplexityofbothg(n)andh(n)istheoreticallyexponential,andhencetheworst-casetimecomplexityofourparallelHPSGparsingalgorithmisalsoexponential.Thoughthetheoreticalworst-casetimecomplexityisexponential,inthissectionweshowthattheempiricalworst-casetimecomplexityoff(n)(=g(n)+h(n))canbeapproximatedbyconstant,andweillustratetheparsingtimeforsentencelengthn.</subsection>
  <section title="Conclusion">WehavedevelopedanefficientparallelHPSGparserthatispracticalintermsofbothanalysistimeandspeed-up.ThekeytoitsefficiencyisinourparsingalgorithmandthearchitectureofthePSTFS,asubstrateforparallelprocessingoftypedfeaturestructures.WeappliedaCKY-styleparsingalgorithmtotheHPSGparser.AparallelCKYalgorithmisdesirablefromtheviewpointsofspeed-up,distributionofdata,andmemoryefficiency.ThemainfeaturesofPSTFSareefficientcommunicationandacopyschemeforTFSs.Thisapproachissimplewithoutanyanomalies,butimposessignificantoverheadforcopyingthehugefeaturestructures.Wethusdevelopedanefficientwaytocommunicateandcopyfeaturestructuresonshared-memoryparallelmachines.TheeffectivenessofourparsingalgorithmandPSTFSwasshownthroughaseriesofexperimentsonparsingJapanesesentencesfromtheEDRcorpus.TheydemonstratedthatourparallelHPSGparserhashighefficiencyintermsofbothanalysistimeandspeed-upandisefficientenoughforpracticaluseevenwhenitisrunningononeprocessor.Inaddition,theoverheadofcopyinginPSTFSisassmallastheoverheadonasequentialmachine,soPSTFSachieveshighefficiencyinaparallelenvironment.Thetimecomplexityofourparsingalgorithmistheoretically2(n-1)f(n)+Dforsentencelengthn;empiricallythistimecomplexitycanbeapproximatedbyCn+D.WeareconsideringtheuseofourHPSGparseronPSTFSforaspeech-recognitionsystem,anaturallanguageinterface,andaspeechmachinetranslationsystem.areindebtedtoDr.KenjiroTauraforlettingususehisparallelprogramminglanguageABCL/fandforhisdetaileddiscussionontheparsingalgorithm.WethankMr.TakakiMakinoforlettingususehisfeature-structuremanipulatingsystemLiLFeS.ThisresearchwaspartiallyfundedbyaJSPSproject(JSPS-RFTF96P00502),andwasalsofundedbyJSPSResearchFellowshipsforYoungScientists.document</section>
</root>
