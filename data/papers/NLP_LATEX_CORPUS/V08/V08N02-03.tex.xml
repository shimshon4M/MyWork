<?xml version="1.0" ?>
<root>
  <title>常識的判断のための概念間の関連度評価モデル</title>
  <author>渡部広一河岡司</author>
  <jabstract>コンピュータに人間のような常識的判断を行わせるための主要素は，概念ベースおよび概念間の関連性に基づく概念連鎖機能であると考えられる．概念ベースは，自動学習などにより恒常的に拡張・精錬を行わなければならないために，その構造はできるだけ単純なものが望ましい．本論文では，概念間の関連度を評価するための新しい手法を提案している．従来の手法では，概念はその１次属性のベクトルモデルとして表現され，関連度はベクトル間の内積により求められている．そのような従来手法では，各１次属性をカテゴリーに変換しなければならないためシソーラスなどのカテゴリーデータベースが必要となる．提案手法では，関連度をカテゴリーを利用せず概念連鎖により求めている．約４万の概念よりなる概念ベースを用いた実験により，提案手法はベクトル内積を用いる方法に比べ正解率の面でやや優れる上に，概念知識の追加/変更が容易で利用を通じての質の向上が図れることを示した．</jabstract>
  <jkeywords>関連度，概念ベース，常識，概念連鎖</jkeywords>
  <section title="はじめに">人間はあいまいな情報を受け取り適宜に解釈して適切に会話を進めることができる．これは，人間が長年にわたって蓄積してきた，言語やその基本となる語概念に関する「常識」を持っているからである．すなわち，ある単語から概念を想起し，さらに，その概念に関係のある様々な概念を連想できる能力が重要な役割を果たしていると考えられる．本研究の前提とする「常識的判断」とは，「女性−婦人」，「山−丘」などは同義・類義の関係，「山−川」，「夕焼け−赤い」などは密な関係，「山−机」，「電車−空」などは疎な関係であると判断するなど，語と語の意味的関係について，コンピュータにも人間の常識的な感覚に近い判断をさせることをねらうものである．このような常識的判断を可能とするメカニズムは，利用者の意図を汲み取ることのできる人間的な情報処理システムの開発基盤として役立つと考えている．我々が開発を進めている常識的判断システム全体は，日常的な事項，すなわち，大きさ，重さ，速さ，時間，場所等に関する基本的な知識と感覚や感情に関する知識で構成する判断知識ベースサブシステムと本論文で対象とする語概念間の関連度を評価する概念連鎖メカニズムで構成している．判断知識ベースを構成する知識は少数（約５千語）の代表的な語（代表語）の間の常識的な関係（事物の大小関係，夕焼け−赤いなど）を定義したものである．常識的判断システムに入力される多くの語は代表語ではなく，知識ベースには陽に表現されていない未知語となるため概念連鎖メカニズムは，これらの未知語について，意味的関係やその強さの度合いを評価し，最も関連の強い代表語を決定する．本稿では，この概念連鎖メカニズムの基盤となる概念ベースの構造，すなわち，語とその意味を表す属性（関連の強い語）の集合の構成とそれを用いた概念間の関連度の定量化方式について提案している．従来は一般に，概念間の類似性に重点が置かれ類似度として評価されているが，本稿では類似性のみならず「山と川」，「電車と駅」，「川と水」など概念間の幅広い関係の評価を対象とするため関連度として評価している．例えば，類似性の評価において「車と馬」は乗り物という観点において類似しているという考え方がとられているが，本稿の関連度評価では，両者の概念は乗り物という共通の属性をもっているに過ぎないと考え，全体としての関連度はかなり低いものとなる．当然，観点として乗り物が設定された場合の関連度は高くなる．観点となる概念のもつ属性の範囲に限定した関連度を評価することにより，類似や相対，反意などにも対応可能である．概念間の類似度に関するテーマについては，幾つかの研究成果が報告されているが，多くは，連想に関する理論，あるいは，自然言語処理における類似語の処理などの研究であり，本研究で対象とするような常識的判断のための概念ベースや概念関連度とは異なる．概念ベースの構造や必要とされる正確さは目的により異なったものとなる．我々の対象とする常識的判断システムの概念ベースは自動学習や利用者の教示による継続的な改善（成長）が前提となる．常識的判断の適切さは概念ベースの内容と関連度計算方式に左右されるため，利用を通じた概念ベースの恒常的な成長の容易性は極めて重要な評価要因となる．では，概念構造の定義と概念ベースの機械構築および概念類似度の計算方式について興味深い報告がなされている．そこでは，一つの概念を，「意味特徴を表す属性」と「概念と属性の関連の深さを表す重み」で表現されたm次元ベクトルとして取り扱い，２つの概念間の類似度は正規化された２ベクトルの内積として計算している．このベクトル空間モデルでは，約４万の概念を約3千の独立性の高い属性で表現することによりベクトル表現のための直交性の問題に対処しているが，必ずしも直交性が保証されているとは言えない．また，属性の重みの問題として，出現頻度に基づき重みが付与されているが，属性の追加／修正が発生した時，新しい属性の重みをどのように決定するのか，既に存在する属性の重みはどのように変更するのか，という問題が生じ，概念ベースの継続的な成長を前提とすることは難しい．本稿では，これらの問題を考慮した上で，継続的な成長を容易とするような新たな概念ベースを構築し，常識的判断として適切な関連度を計算できるような関連度評価方式を提案し，実験により評価する．以下，2章で，まず，概念連鎖メカニズムの実現に必要となる概念ベースの構造について述べ,より単純な構造の概念ベースを提案する．3章では，本稿の主題である概念関連度の定量化の問題を定式化し，概念のn次属性までの論理関係を考慮する新方式の提案を行う．4章では，2,3章で提案した概念ベースと概念関連度計算方式の各組合わせについて評価実験を行い，人間の常識的判断により近いかという観点と，概念ベースの継続的な成長の容易性の観点において従来法との比較検討を行う．</section>
  <section title="概念ベースの構造"/>
  <subsection title="概念ベース">本研究ではで抽出された約４万の概念の利用を前提としており概念の定義は以下とする．概念の定義：概念Aはその属性a_iと重みw_iの対の集合とする．A&amp;=&amp;(a_1,w_1),(a_2,w_2),,(a_m,w_m)eqnarrayここで，属性の直交性が仮定できるならば任意の概念は形式的にm次元属性空間のベクトルとして表現できる（ベクトルの大きさは1に正規化する）．A&amp;=&amp;(w_1,w_2,,w_m)&amp;&amp;0w_i1&amp;&amp;_i=1^mw_i^2=1eqnarrayただし，mはすべての概念を定義するために必要な属性数である．概念ベースはそれら概念の集合である．以下に評価の前提とする３種の概念ベースについて述べる．これらの３種の概念ベースは以下の特性を有している．機械構築しているため概念の属性には少なからぬ雑音（属性としてふさわしくない単語）が含まれている．属性の重みは概念の語義文内での自立語の出現頻度に基づいており，概念と属性の意味的関連の強さを正しく表しているとは言えない．概念により，その属性数は異なっており属性数の不充分な概念も多々ある．</subsection>
  <subsection title="概念ベースの利用形態">３種の概念ベースのもつこれらの特性を考慮して，本研究では以下のような利用形態を評価する．	基本概念ベースでは属性の直交性を仮定できないので概念をベクトルとして表現することができず，関連度を２つの概念ベクトルの内積として定義できない．そのため，２つの概念の関連の強さを属性集合の近さ（一致する要素の数）で評価する．	約3千種の属性と重みで表現された圧縮概念ベースの場合には，カテゴリー圧縮により属性間の独立性がある程度高められていることから，各概念を約3千次元のベクトルとして扱うことができ，関連度は２つの概念ベクトルの内積として定義する．	概念の属性数を30個以下に縮小した縮小概念ベースにおいても属性の直交性を仮定できないので，２つの概念の関連の強さを集合としての近さで評価する．概念をベクトルとして取り扱う方式では，属性の重みは極めて重要な役割を果たすことから，新しい概念の追加や，既存の概念への属性の追加，修正に伴う重みの変更は困難となる．また，属性圧縮により基本属性がもっていた詳細な意味情報が失われ，十分な評価精度が得られない恐れがある．概念間の関連の度合いを属性集合の近さで評価する方式では，本稿で提案するような重みを使用しない評価方式や属性も概念としてとらえ，概念を属性の連鎖的関係で定義する方式も可能となる．属性の重みを使用しない方式では，当然ながら，概念に対する新たな属性の追加時に重みの付与は不必要であり，また，明らかに不適切と思われる属性の削除も極めて容易となる．</subsection>
  <subsection title="概念の連鎖的定義">概念ベースにおける各概念は，ある単語の表記によってラベル付けできる．また，基本概念ベースおよび縮小概念ベースでは，属性a_iもある単語表記である．したがって，概念ベース中の任意の属性の単語表記が同じ概念ベース中の概念の単語表記中に存在すると仮定すると，属性a_iをその単語表記に対応する概念とみなすことで，属性の属性を取り出すことができる．基本概念ベースと縮小概念ベースはこの条件を満たしているが，圧縮概念ベースはこの条件を満たしていない．いま，単語表記をWord_i，概念の属性をa_iと表現すると，ある概念Aは次式で定義される．ただし，本節では重みは省略して記述する．A&amp;=&amp;Word_A&amp;=&amp;a_1,a_2,,a_i,,a_N&amp;=&amp;Word_1,Word_2,,Word_Neqnarrayここで，属性a_iを概念Aの１次属性と呼ぶ．Word_iはある概念と見なせるので，a_i&amp;=&amp;WORD_i&amp;=&amp;a_i1,a_i2,,a_ij,,a_iMeqnarrayこれらの属性a_ij（１次属性の１次属性）を概念Aの２次属性と呼ぶ．概念Aを２次属性までの概念連鎖で定義すると以下のようにマトリックス状になる．&amp;&amp;()	&amp;=&amp;	[]	eqnarrayただし，式では，a_ijは概念Aの２次属性であり，概念Aの各１次属性の１次属性数は一定(M)としている．さらに，概念の2次属性もその1次属性の集合で表現でき，同様に概念Aのn次属性まで定義可能である．したがって，基本概念ベースおよび縮小概念ベースでは，概念Aはn次までの属性の連鎖で定義されていることになる．</subsection>
  <section title="概念関連度の評価モデル"/>
  <subsection title="概念の属性ベクトル空間モデル">従来，概念関連度の評価は，２つの正規化された概念ベクトルの内積により行われている.すなわち，式のように表現された概念ベクトル間の内積により計算できる．しかし，この方式では各属性間の直交性を仮定しており，直交属性を選ぶことは容易ではなく，また，適切な重みを設定することも非常に困難であると思われる．ではALT-J/Eシソーラスの約3千種の概念カテゴリーを属性として利用し，各属性の重みは，基本的には出現頻度により与えているが，十分な直交性を有しているか，また，適切な重みになっているか，あるいは，そのような適切な性質を持つような概念ベースへと自動的に精錬を行えるかが問題となる．</subsection>
  <subsection title="概念の属性集合モデル">で示したように，本稿で提案する概念の定義では，任意の概念Aはその属性の集合として定義されている．また，各属性はある概念であるため，結果として任意の概念Aはn次までの属性の連鎖で定義されている．このような概念定義に対する関連度評価モデルを以下に述べる．</subsection>
  <subsubsection title="1次属性集合の一致度">各概念の属性には，その概念に関連する概念が並んでいるものと考えられるので，一致する属性数が多い程関連が強いと考えられる．したがって，2つの概念A，Bの関連度は，それぞれの1次属性同士の一致単語数を0から1の範囲に正規化したものとする．すなわち，2つの概念A,Bを１次属性a_i,b_jとその重みu_i,v_jを用いて，A&amp;=&amp;(a_i,u_i)|i=1L	&amp;=&amp;(b_j,v_j)|j=1M	eqnarrayと表現し，a_i=b_jなるa_iの個数をs個とするとき，概念Aと概念Bの一致度Match(A,B)を次式で定義する．Match(A,B)&amp;=&amp;(s/L+s/M)/2	eqnarrayこの式は，概念Aから見たときの属性の一致割合s/Lと概念Bから見たときの一致割合s/Mの平均を表しており，重み情報は無視している．また，L=M=N（属性数が等しい）のとき，式は，Match(A,B)&amp;=&amp;s/N	eqnarrayとなる．また，重み情報を利用する場合の一致度MatchW(A,B)を以下のように定義する．	MatchW(A,B)&amp;=&amp;(s_A/n_A+s_B/n_B)/2		s_A&amp;=&amp;_a_i=b_ju_i	s_B&amp;=&amp;_a_i=b_jv_j	n_A&amp;=&amp;_i=1^Lu_i	n_B&amp;=&amp;_j=1^Mv_jeqnarrayこの式は，概念Aから見たときの一致している属性の重みの割合s_A/n_Aと概念Bから見たときの一致している属性の重みの割合s_B/n_Bの平均を表している．</subsubsection>
  <subsubsection title="概念連鎖による関連度">1次属性同士を比較する際に，単語の完全一致ではなく，その単語が表している概念としての一致度を利用することができる．すなわち，1次属性同士の概念としての一致度は，それぞれの2次属性同士の一致単語数から導き，1次属性同士が単語としては一致していなくても，その一致度合いを見積もれるようにする方法である．一致度を利用することにより，2つの概念間の関連度はそれぞれの1次属性同士の一致度の平均として定義できる．ただし，一致度は0から1の範囲の実数であるため1次属性同士の対応関係が問題になってくる．いま，ある1次属性a_iと相手のすべての1次属性b_j(j=1,,M)との一致度を計算したとき，a_iは一致度が最大のb_jに対応させるべきである．しかし，同じことが他のすべてのa_i(i=1,,L)にも言えるため，問題は複雑になる．これは，1次属性同士を並べるときに，対応する1次属性間の一致度の合計が最大になるように並べ替える問題である．このような並べ替え問題は，組み合わせ最適化問題の一種であり，要素数が多くなると組み合わせ爆発を起こすため，真の最適解を求めることはそれほど容易ではない．しかし，で提案している「単純法」のように，単純な方法でも比較的最適解に近い値がでることから，本稿で行う実験では並び替え問題の部分には単純法を利用している．単純法とは，最適化手法の欲張り法の一種で，一致度が最大のものを順に選択していく方法であり，その結果が最適解である保証はないが，比較的良好な解が得られるので，ここでの適用には十分であると判断している．なお，より正確に一致度の合計が最大になるように並び替えたい場合は，遺伝的アルゴリズムなどを用いることができる．以上の考察より，概念Aと概念Bとの２次属性までの概念連鎖による関連度Chain(A,B)は以下に示すアルゴリズム(CNW)により評価する．概念連鎖による関連度評価アルゴリズム（CNW）1次属性数の少ない方の概念を概念Aとし（LM），概念Aの1次属性の並びを固定する．		A&amp;=&amp;(a_1,a_2,,a_L)	eqnarray概念Bの各1次属性を対応する概念Aの各1次属性との一致度(Match)の合計が最大になるように並べ替える．ただし，対応にあふれた概念Bの1次属性（b_x_j,j=L+1,,M)は無視する．		B_x&amp;=&amp;(b_x_1,b_x_2,,b_x_L)	eqnarray概念Aと概念Bとの関連度Chain(A,B)は，		Chain(A,B)&amp;=&amp;(s/L+s/M)/2	s&amp;=&amp;_i=1^LMatch(a_i,b_x_i)	eqnarrayである．また，1次属性数が同じ場合（L=M=N）の関連度は，		Chain(A,B)&amp;=&amp;s/N	eqnarrayとなる．アルゴリズムCNWでは重み情報を利用していない．重み情報を利用した概念連鎖による関連度評価アルゴリズム(CW)は以下のようになる．重み付き概念連鎖による関連度評価アルゴリズム（CW）1次属性数の少ない方の概念を概念Aとし（LM），概念Aの1次属性の並びを固定する．		A&amp;=&amp;((a_1,u_1),(a_2,u_2),,(a_L,u_L))	eqnarray概念Bの各1次属性を対応する概念Aの各1次属性との重み付き一致度(MatchW)の合計が最大になるように並べ替える．ただし，対応にあふれた概念Bの1次属性（b_x_j,j=L+1,,M)は無視する．		B_x&amp;=&amp;((b_x_1,v_x_1),(b_x_2,v_x_2),	,(b_x_L,v_x_L))	eqnarray概念Aと概念Bとの関連度ChainW(A,B)は，	&amp;&amp;	ChainW(A,B)=(s_A/n_A+s_B/n_B)/2	&amp;&amp;*1cms_A=_i=1^Lu_iMatchW(a_i,b_x_i)&amp;&amp;*1cms_B=_i=1^Lv_x_iMatchW(a_i,b_x_i)&amp;&amp;*1cmn_A=_i=1^Lu_i&amp;&amp;*1cmn_B=_j=1^Mv_j	eqnarrayである．ただし，u_i,v_jは，それぞれ属性a_i,b_jの重みである．アルゴリズムCWは，流れとしてはアルゴリズムCNWと同様であるが，1次属性同士の一致度の計算に重み付き一致度を用いる点と得られた一致度に重みを掛け合わせる点が異なる．図に重みを利用しない場合の概念連鎖による関連度(CNW)の計算例を示す．比較する対象概念を「机」と「椅子」とし，属性数を３個とした場合のそれぞれの(a)１次属性，および，１次属性の１次属性，すなわち，(b)２次属性の例である．(c)一致度マトリックスは，概念「机」の各１次属性と概念「椅子」の各１次属性とのそれぞれの１次属性集合の一致度である．たとえば，「学校」と「教室」の一致度は，「生徒」と「大学」が一致するので３個中２つが一致し，一致度は2/3である．この一致度マトリックスから最大値を順に選んでいくと，太字で示した1,2/3，0となり，「椅子」の１次属性の並びは(教室,勉強,木)となる．したがって，一致度の合計は5/3となるので，関連度は5/9である．</subsubsection>
  <section title="評価実験と考察">関連度の性能は，使用する概念ベースと関連度計算方式の両方に左右されるが，本稿では概念ベース３通り（基本概念ベース，圧縮概念ベース，縮小概念ベース）に対して，以下に示す５通りの関連度計算方式の各組合せについて検討する．ただし，使用する概念ベースによって利用できる関連度計算方式が限られてくるので，実際には表に示す９通りについて評価する．この中で，圧縮概念ベースに対するベクトル内積(Vector)が従来方式である．</section>
  <subsection title="評価法">まず，以下のような４つの概念の組（サンプル概念）を準備する．ここで，概念Xは任意の概念（対象概念）であり，概念Aは概念Xと同義か類義の概念，概念Bは概念Xに密に関係する概念，概念Cは概念Xに疎な関係の概念である．密な関係とは反意関係・対関係・上位下位関係・全体部分関係・兄弟関係など具体的な関係を定義できるものを指し，疎な関係とは具体的な関係を定義できないものを指す．すなわち，対象概念Xに対してAが非常に関連が強く，Bが関連があり，Cはほとんど関連がない概念である．r_Aを概念Xと概念Aとの関連度，r_Bを概念Xと概念Bとの関連度，r_Cを概念Xと概念Cとの関連度とすると，のとき，その関連度計算結果は正解であり，それ以外は不正解である．次に，そのようなサンプル概念をどのように作成するのかが問題となるが，本研究では，人間の常識的判断に近いものほど良いと考えているので，サンプル概念の作成は人手によるものとした．すなわち，被験者約30名に対して，サンプル概念(X,A,B,C)を20組以上作成してもらい，さらに，サンプル概念作成者以外の２人により各サンプル概念が正しいかどうか判断してもらい，１人でも正しいとは言えないと答えたサンプル概念は削除した．したがって，３人中３人とも同じと判断したサンプル概念を抽出した．以上のような過程を経て，合計559組のサンプル概念(da33-559)を準備した．表に，準備したサンプル概念の一部を示す．関連度評価方式の評価点は，全サンプル概念(559組)に対する正解率，すなわち，サンプル概念100組あたりのA,B,Cの順序正解個数とする．</subsection>
  <subsection title="評価結果と考察">以上で準備したサンプル概念を用いて，表に示した９通りの方式（概念ベースと関連度計算方式）に対して，評価実験を行った．実験結果を表に示す．実験結果から，ChainW，Chain方式の正解率が従来のVector方式より高いことが分かる．その中でも，基本概念ベースよりも縮小概念ベースを用いた方がより高い．これは，基本概念ベースには多くの雑音（不適切な属性）が含まれているため，属性数を重みの大きい順に30個で打ち切ることにより，雑音をある程度除去できたことによる効果であると思われる．ただし，MatchW，Match方式では，逆に，縮小概念ベースよりも基本概念ベースを用いた方が正解率が高い．MatchW，Match方式は，１次属性のみしか用いないために，属性同士の一致確率が極めて低く，さらに属性数を30個に打ち切ってしまう縮小概念ベースでは，雑音の抑制効果よりも，属性同士の一致確率の減少がまさってしまうため，このような結果となったものと考えられる．この点においても，概念を連鎖的に利用することにより，属性同士が完全に一致していなくても概念としての一致度を利用できるChainW，Chain方式が有効であることが確認できる．圧縮概念ベースを用いたVector方式でも，属性数を30個で打ち切ると正解率が落ちる（正解率76.0%）が，その落ちかたはMatchW，Match方式に比べて小さい．これは，基本概念ベースおよび縮小概念ベースでは属性種別が約４万であるのに対し，圧縮概念ベースでは属性種別が約３千と少ないため属性同士の一致確率が比較的高いことによる効果と考えられる．しかし，ChainW，Chain方式よりは劣っており，また，ChainW，Chain方式では縮小概念ベースを用いた方がより正解率が上がる．したがって，関連度計算方式としてChainW，Chainを採用すれば，よりコンパクトな概念ベース（縮小概念ベース）で，より良い関連度を計算できることが分かる．属性の重みを関連度計算に利用する場合と利用しない場合とを比較してみると，重みを利用した方がよりよい結果となっている．このことは，辞書での出現頻度を基に付与した重み情報が，どの程度正しいかは不明ではあるが，有効であることを示している．しかし，概念ベースを成長させて行くには，人間からの直接教示，電子新聞・書籍，インターネットを利用した文書収集などを通じて，概念や属性の追加・修正・削除を行っていく必要があり，その場合の適切な重み情報の付与は非常に困難である．したがって，重み情報を利用しない計算方式であるChainの正解率が，ChainWに比べてそれほど劣っていないことは，注目に値する．すなわち，単純に雑音的な属性は削除し良い属性は追加していくことで，概念ベースおよび関連度計算結果がより良いものになっていくであろうことが期待できる．もちろん，適切な重み情報を付与することが可能ならば，ChainWによりより精度の高い関連度を求めることができる．PentiumII400MHzのパーソナルコンピュータで実行した場合，サンプル概念559組（1677回の関連度計算）に対する計算時間は，圧縮のVector，縮小のMatchおよびMatchWでは約12秒，縮小のChainおよびChainWでは約23秒である．ChainやChainWでは，やや複雑な計算を行っているにもかかわらず倍程度の計算時間で済んでいる．これは，関連度計算を行うためには，概念表記（単語）を基にその概念を概念ベースから検索する必要があり，概念ベースの概念数が約４万と多いために，概念の検索処理に多くの計算時間がかかるためである．純粋な関連度計算の時間では，Vector,Match,MatchWの計算時間を１とすると，Chain，ChainWの計算時間は，縮小概念ベースの場合で30×30=900であるが，実際の利用においては検索処理は省略できないので，関連度計算時間は倍程度で済むようである．</subsection>
  <subsection title="概念ベースへの属性追加実験">従来の関連度計算方式Vectorでは，概念ベースを構築・拡張・精錬する際には，シソーラスなどの概念カテゴリーデータベースが必要であるのに対し，提案した関連度計算方式ChainW，Chainでは，シソーラスなどは不要である．そのため，概念ベースの構造は単純なものとなり，拡張・精錬，すなわち概念ベースの成長が容易に行えるであろうことが予想される．さらに，Chain方式では重み情報が不要なため，特に属性の追加は容易に行える．そこでここでは，縮小概念ベース＋Chainに対して，概念への人手による適切な属性の追加実験を行い，概念ベースの成長の容易性と関連度性能の向上可能性を示す．実験手順および結果は以下の通りである．	評価実験で用いたサンプル概念559組(da33-559)から，100組を抽出し(da33-100)評価実験を行う．	その結果，正解率86%，すなわち，不正解数は14であった．	不正解のサンプル概念組の各概念の関連度を見て，不当に低い概念に適切と思われる属性を人手により２〜６個追加する．	属性追加を行った概念ベースを用いて，サンプル概念100組(da33-100)に対して，評価実験を行う．	その結果，正解率98%となった．	(属性追加を行っても正解とはならなかったサンプル概念が14組中２組あった．)	属性追加を行った概念ベースを用いて，サンプル概念559組(da33-559)に対して，評価実験を行う．	その結果，正解率85.0%となった．	属性追加を行う前の概念ベースでは正解率82.6%であり，正解数にすると462である．	正解率85.0%を正解数に換算すると475であり，正解数が13増えたことになる．Chain方式は，重みを計算には使用せずに概念の２次属性までを連鎖的に利用する方式である．したがって，一つの概念Xの属性を修正すると，概念Xを属性として持つ多くの概念に影響がおよぶ可能性がある．しかし，上の実験結果からは，そのような影響はプラス側にやや見られた程度であり，ほぼプラスマイナスゼロとみなせる．以上，単純な属性追加実験によって，概念ベースを容易に成長させることが可能であることが分かった．</subsection>
  <section title="おわりに">コンピュータに常識的な判断能力をもたせるための第一歩として，本稿では，語と語の意味的関係の強さの評価に関し人間の常識的感覚による判断とできるだけ近い判断のできる概念連鎖メカニズムの実現手段を提案した．具体的には，学習や利用者の教示により常に概念を更新できることを前提とする概念ベースの適切な構造とそれを用いた概念間の関連度の定量化方式を提案した．従来の関連度定量化方式は，概念を属性の重みベクトルで表現し，概念の関連度は２つの重みベクトルの正規化されたベクトル内積により評価している．ただし，ここでの属性はシソーラスなどを用いて，概念カテゴリーに置き換えておく必要があった．本稿では，この従来方式と概念の関連度合いを属性集合の近さとして評価する提案方式を実験により比較した．提案方式では，概念をその属性集合の２次元の連鎖的な集合（マトリックスで表現される）とみなし，２つの概念の対応する１次属性間での２次属性の一致度合いで評価している．また，属性を概念カテゴリーに置き換える操作は不要であり，より単純な構造の概念ベースとなる．実験は，機械構築した約4万語の概念ベースと複数の人間がそれぞれの常識的感覚に基づき作成した559組の評価サンプル概念を用いて行った．結果として，提案方式は判断の的確性の点で，従来のベクトル方式よりも優れていることを示した．また，提案方式で属性の重みを概念ベースの縮小化にだけ使い関連度計算では重みを使わない場合には，属性の追加・削減が容易となり，属性が学習や利用者の教示により継続的に改善され，判断の正確性は一層高いものとなることが期待できる．これらの理由から，提案方式は常識的判断のための概念連鎖メカニズムの実現に適した方式であると言える．</section>
</root>
