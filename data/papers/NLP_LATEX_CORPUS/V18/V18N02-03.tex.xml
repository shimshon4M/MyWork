<?xml version="1.0" ?>
<root>
  <jtitle>文書量に不変な定数—YuleのK,GolcherのVM</jtitle>
  <jauthor>木村大翼田中久美子</jauthor>
  <jabstract>本稿では，文書量に不変な定数を考える．このような定数には，言語や文書の複雑さや冗長性を定量化して捉える計算言語学上の意義がある．これらの指標は既存研究でさまざまなものが提案されてきたが，ほとんどの場合英語を中心とする小規模な文書を対象としてきた．本研究では英語以外のさまざまな言語や，大規模な文書も対象として扱い，主に先行研究において値が文長に依らないとされる3つの指標K,Z,VM</jabstract>
  <jkeywords>定数，多言語の文書，言語モデル，複雑さ，冗長性</jkeywords>
  <subsubsection title="">*Yuleの指標K指標Kは文書の語彙の豊富さを示す指標として1944年に統計学者のYuleによって提案された~．今，文書の総単語数（単語数で計測した際の文書長）をN,単語の種類をVとし，文書中にm回出現する単語の種類をV(m,N)とすると，Kはで定義される．ここでCはKの値が小さくなりすぎないようにするための係数であり，YuleはC=10^4とした．このCの値に本質的な意味はない．また，Yuleは文書の生成モデルにつぼモデルと呼ばれる文書中の単語はランダムに出現するものとしたモデルを仮定している．このモデルにおいてNが十分大きい時には，このKの期待値が一定となることを数学的に証明することができる~．Kが語彙の豊富さを表すことを以下簡単に説明する．今，文書中からランダムに単語を一つ選ぶことを考える．すると式()において(mN)は文書中m回出現する単語が選択される確率を表す．よって(mN)^2はそのような単語が連続で選択される確率である．ここで同じ単語が連続で選択される確率が大きい場合は文書の語彙が乏しい場合，逆に確率が小さい場合は語彙が豊富な場合と見なすことができる．式()より前者の場合はKの値は大きくなり，後者の場合はKの値は小さくなることがわかる．このようにKは同じ単語が連続で出現する確率に基づいた語彙の豊富さを表す指標である．</subsubsection>
  <section title="はじめに">本稿は，文書，あるいはある観点で集められた文書群が与えられたとき，それについて文書量に依存しない定数—これを本稿では文書定数と定義する—を計算する方式に関する報告である．文書定数は，古くは文書の著者判定を主たる目的として探究された．最も古い代表的なものとして，1940年代に提案されたYuleのKがある．現在では，著者判定に対しては，言語モデルや機械学習に基づく方法など，代替となる手法が数多く提案されている．このため，何も文書や文書群をあえて定数という一つの数値に還元して判定を行う必要はない．しかし，文書あるいは文書群がある一貫した特質を持つのであれば，その特質を定数に還元しようとすること自体は，工学上の個別の応用を超えて，より広く計算言語学上の興味深いテーマであると筆者らは考える．文書あるいは文書群に通底する一貫性の種類には，内容や，難易度などさまざまなものが考えられ，言語処理分野では文書分類や，難易度判定としてそれを捉える工学的方法が考案されてきた．文書定数の場合には，もともとの研究の発端が著者判定にあったために著者の語彙量，語彙の偏り度合，あるいは個別文書の複雑さなど，語彙の複雑さを計測し数値化する問題として考えられてきた．一般に，文書の大きさが増すほど，文書の複雑さは増大するが，一方で，漱石の「坊っちゃん」の一部分にはその全体にも通底する固有の特質があると捉えることもできよう．これを定数として表そうとすることは，記号列としての文書に一貫する複雑さのある側面を考えることにつながると考えられる．そして，対象としうる文書は個別作品だけではない．特定の内容の文書群や，特定の言語の文書群でこれらの定数を考えることは，自然言語の記号列の有する特質に光を当てることにはならないか．文書定数を考えることは，本稿でも報告するように，易しい問題ではない．その一つの理由は，自然言語の文書においてhapaxlegomena—頻度が1回きりの単語—が語彙に対して占める割合が比較的大きいことにあろう．たとえば，サイコロであれば，各目の出る確率を推定するのに必要な施行回数は推定することができる．一方で，文書の場合には，さまざまな統計的推定には文書量が常に不十分な状態のままである~．すなわち，文書定数を考えることは，確かな言語モデルが不在のまま，量が常に足りていない状態のままで定数を考える，という問題として位置付けられよう．次節でまとめるが，文書定数に関する研究は，すでにさまざまなものがあり，単語に注目するものと文字列に注目するものに大別される．近年の研究では，それらのほとんどが文書長に応じて単調変化してしまうことが報告され，その中で，文書定数となる指標は，筆者らの知る範囲では，現在のところ2つしかない．この現状の中で，本稿の意義は以下の4点にまとめることができる．第一に，過去の研究で定数とされているものうちの一つが定数ではないと実験的に示したことである．第二に，過去の提案に加え，近年研究されている言語の大域的特性を捉える複雑系ネットワークや言語エントロピーといった数理的枠組みから，文書の特性を大域的に捉える指標を新たに吟味し，これらがやはり文書定数とならないことを示すことである．以上の意味で，本稿では，新しい文書定数を提案するものではなく，文書定数としては依然として，既に提案されていたもののうち2つのみである，という結論となる．第三に，文書定数に関する研究は，英語を中心として展開し，やや広くても印欧語族についてのみの報告しかない．本稿では，日本語や中国語に関しても実験を行い，過去に提案されてきた文書定数が非印欧語族に対しても定数として成り立つかどうかを論じる．第四に，過去の研究の大半では，短い個別文書に関して定数となるかどうかが調べられてきた．本稿では，数百MBにわたる文書群での実験結果も報告する．</section>
  <section title="関連研究">過去の研究には単語に基づくものと，文字列に基づくものの二種類のものが提案されている．単語ユニグラムに基づく文書定数を得ようとしたもっとも古い学者の一人は前述のようにYuleである~．Yuleの目的は，著者判定にあり，単語ユニグラムに基づく指標Kを提案した．これを受け，Herdanが60年代に独自の式を提案している~．その後は，個別の提案が続き，近年，TweedieとBaayenが，単語ユニグラムのみに基づく指標に関し，網羅的な研究を行っている~．彼らは単語ユニグラムに基づく既存の12の指標に関し，実際に定数となるかどうかを調べた．対象とした文書は，「不思議の国のアリス」など英語の複数の短い個別文書である．彼らの実験では，12の指標が文書中の単語はランダムに発生するという仮定のもとで提案されていることを受け，文書中の単語を出現順にそのまま扱うものではなく，文書全体の単語をランダムに入れ替えてシャッフルすることを行った上で，指標を計測した．その上で，12の指標の中でKとZについては小規模な英語文書では文長によらず値がほぼ一定となるが，そのほかの指標は一定とはならないことが報告されている．さらに，TweedieとBaayenは，指標が文書の著者判別に用いることができるかを探究した．各文書をK-Z空間で表し，クラスター分析などの別手法と比較した結果，KとZの二つの特徴量だけで著者を表すことができると結論づけた．本稿では，単語ユニグラムに関して，TweedieとBaayenの報告とは異なる見解を実験を根拠に示す．それは指標KとZのうち，Zは文書定数を構成しないというものである．Zは，次節で詳しく説明するが，Zipfの法則を背景とする点で複雑系ネットワークとの関係が深い．この点で，言語の大域的特性を表す言語のべき乗則から単純に考えられる定数rを考えることができるが，それも定数とはならないことを合わせて示す．また，TweedieとBaayenは，英語の短い文書のみを対象としたが，本稿では，日本語や中国語も対象とする．文書定数としては，言語エントロピーにまつわる一連の研究を考える必要がある．Shannonによって提案されて以来，言語エントロピーを計算する方法が，文字列に基づく方法，nグラムに基づく方法の両方で考えられてきた~．言語エントロピーは，文字列の冗長性を特徴付ける以上，文書においてもある下限値に収束する定数として計測されうることが期待される．言語処理の分野でも~が単語nグラムに基づく言語エントロピーのupperboundを計測する方法を示しているが，データ量に対して，推定量がどのように推移するかについての考察は述べられていない．また，がエントロピーレート（一文字あたりのエントロピー）が定数である，という仮説を示している．しかし，論文の内容は，エントロピーレートに関わる計算式のある項が増大することを理由とする間接的なものに基づき，エントロピーレートが本当に定数を為すといえるかは何ともいえない．また，nグラムに基づく方法は，スムージングと関連してパラメータ推定を要する点が文書定数を求める上では，難しい．このような中，筆者らは，文字列に基づくエントロピーの計算方法として，パラメータ推定を要せず，収束性が数学的に示されているFarachらの計算方法~を用いHを計算し，その文長依存性を本稿では考える．最後に，近年Golcherが文字列の繰り返しに基づく画期的な指標VMを提案した~．詳細は後述するが，Golcherは接尾辞木の内部ノード数を文長で割った値が，文書定数であることを示したばかりでなく，20の印欧語族は0.5付近で同じ値となることを示した．またプログラミング言語やランダムテキストについては文長に対して値が変化し，自然言語の場合と変化の様子がかなり異なるという結果が報告されている．たとえば，図は，Golcherの見解に沿って，筆者らが生成した図であるが，n文字がランダムに出現する場合のVMは，横軸を文字数の対数，縦軸をVMとして，振動することがわかる．Golcherの実験でもわれわれの結果でも，言語の文書はVMは文長に依らず定数となる．GolcherはなぜVMが一定になるのかについての理論的な考察は展開しておらず，それは将来の課題としている．Golcherは印欧語族に対してのみ結果を示しているが，本稿では，日本語や中国語についてもGolcherの値が定数となることを示す．</section>
  <section title="指標">前節で説明したように，本稿では単語に基づく指標として，K,Z,r,また，文字列に基づく指標としてVMとHを用いた．以下，各指標を順に説明する．</section>
  <subsection title="単語に基づいた指標"/>
  <subsection title="文字列に基づいた指標"/>
  <section title="実験">本研究では個別文書と，数十MB〜200~MBの自然言語やプログラミング言語の文書を用いて章で説明したK,Z,r,VM,Hの各指標の文長に対する値の変化を調べる実験を行った．以下節で実験データや実行環境を説明した後に，節で小規模文書での実験結果，節で大規模文書に対する結果を図とともに述べる．</section>
  <subsection title="実験データおよび実験環境"/>
  <subsubsection title="実験データ">今回の実験で用いた文書は表の通りである．個別文書に関しては，とは異なり，英語だけではなく，日本語，フランス語，スペイン語の文章も対象とした．用いたデータは表の第一ブロックに示した．らの研究を概観すると，定数になるかどうかを吟味するには，小規模な個別文書では長さが不十分であることもよくある．そこで，日本語，英語，中国語の新聞コーパスについても定数となるかどうかを調べる．また，得られる定数が言語の特徴量を表すかどうかを吟味するため，比較対象としてプログラミング言語のデータも用いる．このためには，Java,RubyとLispのソースを用いた．ここで日本語と中国語についてはVMとHの値を計算する際には日本語（ローマ字），中国語(pinyin)の文書を用いた場合，ならびに，元のテキストを用いた場合の両方を報告する．その他の言語に関してはいずれの指標の場合も表にある各言語の文書を用いて実験を行った．また，プログラミングにおける単語は以下のように定義した．まず，JavaとRubyについてはソースを記号で分割し，分割された各要素を単語とした．例えば`if(i&lt;5)break;'であれば`if',`(',`i',`&lt;',`5',`)',`break`,`;'の8つの要素が単語である．Lispの場合はこれらの要素から`('と`)'の2つを除いたものを単語とした．</subsubsection>
  <subsubsection title="実験で用いたプログラム">今回の実験においてはいくつかの外部プログラムを利用した．ここでそれらのプログラムについて記載する．まず単語に基づいた指標K,Z,rの値を計算するために文書を単語に分割する必要がある．日本語の場合は形態素解析ソフトMecabを，中国語については，ICTCLASを用いて単語に分割した．文字列に基づいた指標H,VMについては，日本語，中国語に関しては，ローマ字，pinyin変換したものについても計算した．中国語に関してはあらかじめpinyin表記で書かれた別の文書を用いたが，日本語の場合はKAKASIを用いてローマ字に変換した．各指標の計算方法は，節で示したとおりである．</subsubsection>
  <subsection title="個別文書に対する結果">個別文書に関する結果を図--について示す．英語の文書のみならず，他の印欧語族や日本語といった文書については，K,VMについては一定となる一方で，Z,r,Hについては大域的には単調変化する結果となった．の結果では，Zが一定となることが示されていた．しかし，実験では一貫してZが一定とはならないことが示されている．同様に，類似の複雑系の指標としてのrもやはり一定とはならなかった．</subsection>
  <subsection title="大規模文書に対する結果">文長に対する各指標の値と，参考のためにシャッフル後の結果について述べる．ここで文書をシャッフルするとは，各文書ごとに文書中の単語の順番をランダムに入れ替えることを言い，シャッフル後の結果とは，この操作を20回繰り返した際の指標の平均値である．このように単語順序をランダムに入れ替えるのは，もともとTweedieとBaayen~が行っていた方法で，数式上の仮定を満たすためであり，文書定数を考える上で前処理としての妥当性は疑問である．とはいえ，文書には確かに局所的な揺れやぶれがあるので，大域的特性を概観し，元文書に対する指標の推移を比較検討するために示すものである．このシャッフルは先行研究との対比のためKとZの2つの指標に対してのみ結果を示す．以下の図では，横軸は文書の単語数の対数をとったものであり，縦軸は指標の値である．図は各文書に対するKであり，図はシャッフル後の結果である．まずKについては自然言語の場合，いずれの言語においても文書の単語数の対数に対して値はほぼ一定となった．プログラミング言語の場合は自然言語と比べて若干の変化が見られたが，単語数が10万を超えると同様に値はほぼ一定となった．文書中の単語の順番をランダムに入れ替えた場合ではいずれの言語の場合でも文書の単語数の対数に対してほぼ完全に一定となった．シャッフル前と後でKの値はほとんど変化していないことから，Kは文書中の単語がランダムに出現するという仮定が背後にある指標にも拘わらず，ランダム性が崩れた実際の文書においても値がほとんど変わらずほぼ一定となったということが興味深い．また，プログラミング言語のKの値は自然言語の値と比べてかなり大きくなり，両言語間のKの値に大きな差が出る結果となった．VMについては日中をアルファベットに変換した場合の結果をまず吟味する．図は各文書に対するVMであり，図は図を拡大したものである．日本語の場合に値が英語，中国語と比較してわずかに大きくなっているが，いずれも文書量の対数に対して値はほぼ一定でおよそ0.5の値をとった．プログラミング言語の場合は自然言語の場合よりも変化が見られるが，単調に変化する傾向はみられない．プログラミング言語に関するVMの値は自然言語よりも大きく，およそ0.65の値をとり，両言語間で値に大きな差が表れた．これは，自然言語の冗長性が，プログラミング言語のそれよりも一律に小さいことを示しているだろう．次にアルファベットに変換しない場合の日本語，中国語の文字列をそのまま用いた場合のVMの結果を図と図に示す．これらの図には比較のため，アルファベットに変換した場合の日本語，中国語の結果も含まれている．まずVMの値は，アルファベットに変換しない場合の日本語，中国語の文字列をそのまま用いた場合でも，アルファベットに変換した場合と同様に文書量の対数に対して値はほぼ一定となることがわかる．しかしVMの値の大きさに注目すると，その値は日本語，中国語のいずれの場合もおよそ0.35であり，アルファベットに変換した場合の0.5という値より小さくなっている．これは日本語，中国語の原文におけるアルファベットサイズが変換後のそれよりも遥かに大きいため，文書中で繰り返し出現する文字列の種類が減少し，接尾辞木の内部節点の数が少なくなったからだと考えられる．その他の3つの指標Z,r,Hについて述べる．図--はそれぞれ各文書に対するZ,r,Hの結果である．まず複雑系に関連した指標であるZとrはZにおけるLispを除いて文長に対して値が単調に増加する結果となった．LispはZにおいて値が微増するにとどまり，ほぼ一定となった．Zやrは，言語に内在する大域的な構造を一挙に捉えるものであるが，それは一般的には一定値にはならないということである．また，文字列のエントロピーHは文長に対して値が単調に減少する結果となった．なお，ここで示すHは日中についてはアルファベット表記に変換した結果である．さらに，Zについてはシャッフル後も同様にLispを除いて値が一定とはならなかった．他の言語においては全く一定にならなかったZがLispに限り，値が微増するにとどまったという結果は大変興味深い．以上の実験に加えてVMとHの2つの指標については，文書の文字列を逆順にしたものに対しても実験を行ったので，その結果を簡単に述べる．これはVMとHが本研究で検討している指標の中で文字列の順序に依存する指標であるからであり，文書の文字列を逆順にすることによって，文字列の前から後ろへの依存性だけではなく，後ろから前への依存性を調査した．結果としては，文字列を逆順にしても，VMとHの値は文長が増加するにつれて文字列の順序を変えない場合の値とほぼ同じになった．</subsection>
  <section title="考察">まず，文長に依存せず指標が一定となるかどうかの観点から考察する．前章での実験の結果から自然言語，プログラミング言語において文長に依らず値がほぼ一定となる指標は本研究の範囲では，KとVMの2つの指標であることが示された．VMについては非印欧語族である日本語，中国語においてもアルファベット表記ならば値がおよそ0.5となった．これはアルファベット—あるいは荒い近似としての音—という限られた言語要素を用いて行う言語表現中に内在する冗長性の度合を表しているものと考えられる．また日本語，中国語の本来の表記を用いて同様にVMの値を計算すれば，用いる文字の種類がアルファベットの場合より大きいことから文字列の繰り返しは少なくなり，値は0.5より小さくなることが示された．すなわち，用いることができる言語上の要素数が大きくなると，冗長性は小さくて済むことを表している．いずれにせよ，節で示したように，要素がランダムに生起する場合には振動する指標が，言語では一定となることは実に興味深い．次に値が一定とならなかった指標について論じる．ZはTweedieらの先行研究において小規模な英語文書において値が文長によらず一定となるという結果であったが，個別文書においても，大規模文書においてはLispを除いたいずれの言語においても一定とはならずに文長に対して単調に変化した．ここでLispについては微増との結果となった．このように，過去に提案されてきた指標は，言語によっては一定となる場合もある．本稿では，「さまざまな文書において普遍に一定量となる指標」に焦点を当てているので，Zはそれには該当しない．しかし，どの指標がどのような特性を持つ言語に対して一定となるのかについては，今後の課題といえよう．Zと同様に複雑系に関連したrについてはZと同じように値が文長に対して変化する結果となった．エントロピーHについては，厳密な推定が難しい言語の確率モデルに依存しない計算方法を用いても，やはり一定とはならなかった．ここでHはnグラムから計算することができ，またVMの定義に用いられる接尾辞木は，潜在的なnグラム確率から作られると考えることができる．このことから，HとVMは値の収束性において同じ性質を持つと予想されたが，本研究の範囲では異なる性質を示した．最後に指標の判別力という観点から考察する．判別は，個別文書（作品別），著者（著者判別），より広くある一定の内容で集められた文書群（新聞の文書分類など），言語（英語が日本語かなど），語族（印欧語族とシナ・チベット語族など），自然言語vs.プログラミング言語など異なる解像度で行うことが考えられる．本研究の結果では，KとVMは，自然言語とプログラミング言語間において値に有意な差が見られた．この傾向はKとVMほどではないが他の指標にも見られた．このことは2つの言語間に本質的な複雑さの差があることを示していると考えられ，特にKとVMはその差をはっきりと捉えていると考えられる．より高い解像度での判別問題は，語族や言語の判別については，少なくともVMについては，表記システムで用いるアルファベットの大きさに依存する．KとZで，個別文書の判別が可能であると~では述べられてはいるが，その問題については，今日ではより高性能な機械学習手法の方が手法として妥当であると考えられる．すなわち，文書定数が自然言語の冗長性を反映していると見られることが，文書定数の計算言語学上の一つの意義であると考えられる．</section>
  <section title="まとめ">本研究では既存の指標K,Z,VMと新たに試みた指標r,Hの5つの指標に対して自然言語とプログラミング言語の文書を複数用いて文長に依らずにその値が一定になるかを吟味した．YuleのKは文書中の語彙の豊かさを表す古典的な指標であるのに対し，OlrovのZとrは複雑系に基づく指標である．VMは接尾辞木に基づく文書の繰り返しを表す指標であり，Hは文書のエントロピーである．文書定数の文脈ではrとHは今回新たに試みた指標である．実験では個別文書，ならびに大規模な自然言語とプログラミング言語の文書を用いて，各指標の文長に対する値の変化の様子を網羅的に調べた．その結果KとVMの2つの指標のみ文長によらず値がほぼ一定となった．さらにこの2つの指標は自然言語とプログラミング言語間において値に有意な差が見られた．またその他のZ,r,Hについては文長に対して値が単調に変化する結果となった．以上の結果から，Tweedieらの小規模な英語文書においてKとZは一定となるという先行研究結果については，Kに関してはいえるものの，Zに関しては大規模文書において一定とならないことがわかった．またGolcherの先行研究結果との対比においては，本研究の結果では，アルファベット表記を用いると，日本語，中国語といった非印欧語族の言語においてもVMは印欧語族同様，ほぼ一定の0.5の値となることがわかった．</section>
</root>
