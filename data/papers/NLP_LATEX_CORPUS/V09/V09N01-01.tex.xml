<?xml version="1.0" ?>
<root>
  <title>用言と直前の格要素の組を単位とする格フレームの自動構築</title>
  <author>河原大輔黒橋禎夫</author>
  <jabstract>本稿では，生コーパスから格フレームを自動的に構築する手法を提案する．格フレームの自動構築における最大の問題は，用言の用法の多様性をどのように扱うかということである．本研究では，用言と直前の格要素の組を単位としてコーパスから格要素と用言の用例を収集することにより，用言の用法の多様性を扱う．さらに，用法に違いはないが，直前の単語が異なるために別の格フレームになっているもののクラスタリングを行う．得られた格フレームを用いて格解析実験を行い，その結果を考察する．</jabstract>
  <jkeywords>格フレーム,生コーパス,クラスタリング,格解析</jkeywords>
  <subsubsection title="">*格の設定収集する格要素の格として，日本語の基本的な格すべてを対象とする．対象とした格を以下に示す．*1ex*1exこれらに加えて，次のものも格として扱う．</subsubsection>
  <section title="はじめに">日本語には語順の入れ替わり，格要素の省略，表層格の非表示などの問題があり，単純な係り受け解析を行っただけでは文の解析として十分とはいえない．例えば，「ドイツ語も話す先生」という文の場合，係り受け構造を解析しただけでは，「ドイツ語」と「話す」，「先生」と「話す」の関係はわからない．このような問題を解決するためには，用言と格要素の関係，例えば，「話す」のガ格やヲ格にどのような単語がくるかを記述した格フレームが必要である．このような格フレームは文脈処理(照応処理，省略処理)においても必須の知識源となる．これまで，重要な用言の典型的な格フレームについては，人手で辞書をつくるということも試みられてきた．しかし，格と同じ振る舞いをする「によって」，「として」などの複合辞があること，「〜が〜に人気だ」のように名詞+判定詞にも格フレームが必要なこと，専門分野ごとに用言に特別な用法があることなどから，カバレージの大きな実用的な辞書をつくるということは大変なことであり，人手による方法には限界がある．そこで，格フレーム辞書をコーパスから自動学習する方法を考える必要がある．しかし，格フレームの学習には膨大なデータが必要となり，現存するタグ付きコーパスはこのような目的からは量的に不十分である．そこで，本論文では，格フレーム辞書をタグ情報が付与されていない大規模コーパス(生コーパス)から自動的に構築する手法を提案する．格フレーム辞書を生コーパスから学習するためには，まず，生コーパスを構文解析しなければならないが，ここで解析誤りが問題となる．しかし，この問題はある程度確信度が高い係り受けだけを学習に用いることでほぼ対処することができる．むしろ問題となるのは用言の用法の多様性である(これはタグ付きコーパスから学習する場合にも問題となる)．つまり，同じ表記の用言でも複数の意味，格要素のパターン(用法)をとり，とりうる格や体言が違うことがあるので，用言の用法ごとに格フレームを作成することが必要である．本論文では，これに対処するために，用言とその直前の格要素の組を単位として用例を収集し，それらのクラスタリングを行うという方法を考案した．用言とその直前の格要素の組を単位とするというのは，「なる」や「積む」ではなく，「友達になる」「病気になる」，「荷物を積む」「経験を積む」を単位として収集するということである．用言とその直前の格要素の組を単位として考えると，用言の用法はほとんど一意に決定される．この組み合わせは膨大になるので充分な量のコーパスが必要であるが，本研究では生コーパスから収集するので問題にならない．クラスタリングは，用法に違いはないが，用言の直前の単語が異なるために別の格フレームになってしまう用例をマージする処理である．</section>
  <section title="格フレーム構築の種々の方法">[t]figure*我々の提案する格フレーム辞書の自動構築の過程は以下のとおりである(図の点線で囲まれた部分)．コーパスのテキストに対して，KNPを用いて構文解析を行い，その結果から，ある程度信頼できる用言・格要素間の関係を取り出す．ここで取り出すデータを用例と呼ぶ．抽出した関係を用言と直前の格要素の組ごとにまとめる．このようにして作成したデータを用例パターンと呼ぶ．シソーラスを用いて，用例パターンのクラスタリングを行う．この結果できたものを用例格フレームと呼び，本研究ではこれが最終的に得られるものである．以下では「荷物」，「物資」，「経験」などの格要素になる単語を格用例，用例格フレームにおけるある格の格用例の集合，例えば「積む」の1つめの用例格フレームのヲ格の格用例集合「荷物」,「物資」を格用例群と呼ぶ．格要素は格用例と格の組である．次に，格フレームに関連するさまざまなデータ処理を図に沿って議論する．まず，図のIの用例をそのまま個別に使うことが考えられるが，この場合データスパースネスが問題になる．*1ex*1ex例えば，この2つの用例がコーパスにあったとしても，「車に物資を積む」という表現が妥当であるかどうかはわからない．一方，用例を二項関係に分割すると，図のIIのような共起データを作ることができる．これは統計パーサによって用いられているデータ形式であり，データスパースネスの問題を回避することができる．しかし，その副作用として用言の用法の多様性の問題が生じる．*1ex*1ex例えば，この2つの用例から「車に積む」，「荷物を積む」，「経験を積む」という共起データが得られるが，これらのデータだけでは「車に経験を積む」のような間違った表現を許すことになる．また，図のIIIのように用例を単純にまとめたものも，もっている情報は共起データと同じであり，やはり用言の用法の多様性が問題となる．これに対して，本手法で得られる用例格フレームでは，用言とその直前の格要素を組にして扱うという方法で，用法の多様性の問題を解決しつつ，データスパースネスにも対処している．一方，用例を直接クラスタリングすることによって用例格フレームを作成する方法も考えられる(図のIV)．この方法でも，用言の用法ごとに分かれた用例格フレームが得られるので，我々の作成する用例格フレームに近いといえる．しかし，この方法ですべての格要素を等しく扱うと，用言の用法にあまり関係しない格要素(用言の直前ではない格要素)が類似していることによって，用言の用法の異なる用例がひとつの用例格フレームにマージされてしまうことがある．*1ex*1ex例えば，この2つの用例は，用法が異なっているが，ガ格の「従業員」が同じであるためにマージされる可能性がある．このような問題があるため，用例を直接クラスタリングする方法では，必ずしもよい精度の格フレームにはならないと思われる．格フレームは辞書として利用されるものであり，精度は非常に高いものが要求されるため，この方法は格フレームの作成には適当ではないと考えられる．</section>
  <section title="関連研究">英語を対象として，生コーパスから格フレームを学習する方法はいくつか研究されてきた．英語は格要素が省略されることがなく，問題となるのは格要素が用言にとって必須であるか任意であるかの判定である．この判定は，統計情報を利用して用言と格フレームの関連度を計算することによって行われている．学習する格フレームは用例格フレームのようなものではなく，動詞が名詞句と前置詞句をとるといったパターンである．つまり，用言の用法そのものを収集していると考えられるので，用言の用法の多様性は問題にならない．日本語では，格フレームを構文情報付きコーパスから学習する方法が提案されている．これらの手法は，学習に構文情報付きコーパスを用いているためカバレージの点で問題がある．春野は，意味素を要素とする格フレームをコーパスから学習する方法を提案している．11個の動詞を対象とし，新聞1年分から人手で抽出した用例を用いているのでカバレージの点では問題ないが，動詞数を増やして実用的な格フレームを作成するのは難しいと思われる．これらの手法で得られる格フレームは，格要素を汎化した意味素を格フレームの個々の要素としたものであり，この点では本研究と異なる．用言の用法の多様性は，それぞれ次のようにして扱っている．東らはEDRコーパスを用いており，動詞についている動詞概念ごとに格フレームを作成している．宇津呂らと春野の手法は，それぞれ機械学習，情報圧縮の手法を用いて意味素の汎化レベルを決定することによって，用例を直接クラスタリングするものである．しかし，前節で述べたように，これらの方法は精度の面で格フレームの作成には適当ではないと考えられる．</section>
  <section title="用例の収集">コーパスを構文解析した結果から，図に示したような用例の収集を行う．質の高い用例を収集するために，コーパスの解析結果から確信度の高い係り受けを抽出する．</section>
  <subsection title="格要素の条件">用例を収集するときに，格，格用例，格要素に以下の条件を設定する．</subsection>
  <subsection title="用言の条件">収集する用言は動詞，形容詞，名詞+判定詞とする．名詞+判定詞として収集する用言には体言止めの名詞も含む．ただし，以下のような用言は収集に用いない．用言が受身，使役，「〜もらう」，「〜たい」，「〜ほしい」，「〜できる」の形であれば，格の交替が起こり，格と格要素の関係が通常の場合と異なるので収集に用いない．「〜で」は，判定詞かデ格かの自動判定が難しいので，KNPが判定詞と認識しても，用言として収集に用いない．	例:&amp;彼は京都で，試験を受け…(助詞)	&amp;彼が好きな町は京都で，…(判定詞)exn形態素解析において，活用形から原形が一意に決まらない用言は収集に用いない．	例:&amp;あった:ある,あう	&amp;いった:いる,いうexn用言として用いられているサ変名詞の直後に読点か句点がある場合，そのサ変名詞が受身か能動であるのかを区別することは難しいので，これは収集に用いない．	例:&amp;世界選手権は約１２００人が出場して福井県鯖江市で開催．exn</subsection>
  <subsection title="確信度の高い係り受けの抽出">コーパスを構文解析した結果から用例を収集するときに問題となるのは，解析結果に誤りが含まれていることである．そこで，誤りの影響を軽減するために，解析の精度が低い係り受けは捨てて，ある程度確信度が高い係り受けを格フレームの収集に用いる．KNPでは，次のような優先規則によって文節の係り先を決定している．*2ex*2ex用例の収集では，Rule1は信頼し，Rule2とRule3は信頼しない(多くの場合正しいが，誤っていることもある)こととする．つまり，Rule1で候補がひとつになり決定される係り受けは用例の収集に用い，Rule2やRule3の処理が適用された係り受けは収集に用いない．*1ex*1exこの例では，「〜ので」はKNPによって強い区切りであると認識され，「英語を」の係り先の候補は「勉強した」の1つしかないので，この用例が取り出される．「スコアが」の係り先の候補は，「大きく」がRule2によって除外されており，「上がった」の1つだけであるが，この用例は取り出されない．「アドバイスに」の係り先の候補は「従って」，「勉強した」の2つであり，Rule3の優先規則により係り先は「従って」に決定されるが，この用例は取り出されない．上の例ではルールがすべて正しく働いていたが，Rule2によって係り先の候補から除外した用言は，場合によっては係り先になる可能性があるので，このときの用例は収集しないことにしている．例えば，次の例のように，形容詞「早い」の直後に「救う」のような強い用言がある場合，このような形容詞は格要素の係り先になりにくいために，係り先の候補から除外される．*1ex*1exこの例では，「回りが」は形容詞「早く」に係るのが正解であるが，「早く」は係り先の候補から除外されており解析が誤っている．また，Rule3の処理の例を次に示す．*1ex*1exは，「質問に」の係り先の候補として，「切って」，「答えた」の2つの可能性を考慮する．この場合，``より近くに係る''という優先規則に従って係り先は「切って」に決定されるが，この解析は誤りである．この例のように，係り先の候補が複数存在すると，係り先に曖昧性があり確信度が低いので，このような用例は収集しない．京都大学テキストコーパスから確信度の高い係り受けを抽出して，その精度の評価を行った．対象としている格をもつ格要素の係り受けの精度は90.9%であるのに対し，抽出した確信度の高い係り受けの精度は97.2%であった．抽出した係り受けは，対象としている格をもつ係り受け全体の44.0%であった．これより，この処理はかなり効果的であることがわかる．</subsection>
  <section title="用例格フレームの作成">章の例文で示したように，用言の用法の異なる用例をひとつの格フレームとしてまとめてしまうと，誤った表現を許す格フレームを作ってしまう．従って，格パターンの異なる格フレームは別々に作成する必要がある．用言の用法を決定する重要な格要素は用言の直前にくることが多い．また，用言とその直前の格要素をペアにして考えると，用言の用法はほとんど一意に決定される．そこで，用例を，用言とその直前の格要素の組を単位としてまとめるという処理を行い，用例パターン(図)を作る．用例パターンの用言の直前の格要素を直前格要素，直前格要素の格を直前格と呼ぶ．用例パターンは，ひとつの用言について，直前格要素の数だけ存在している．そのため，次の例のように，用法がほとんど同じパターンまで個別に扱われている．*1ex*1exそこで，ほとんど用法が同じ用例パターンをマージするために，用例パターンのクラスタリングを行う．以下では，このクラスタリングの詳細について述べる．</section>
  <subsection title="用例パターン間の類似度">用例パターンのクラスタリングは，用例パターン間の類似度を用いて行う．用例パターン間の類似度は，格の一致度と格用例群間の類似度の積とする(図に類似度の計算の例を示す)．まず，単語e_1,e_2間の類似度sim_e(e_1,e_2)を，日本語語彙大系のシソーラスを利用して以下のように定義する．[sim_e(e_1,e_2)=max_xs_1,ys_2,sim(x,y)][sim(x,y)=2Ll_x+l_y]ここで，x,yは意味属性であり，s_1,s_2はそれぞれe_1,e_2の日本語語彙大系における意味属性の集合である(日本語語彙大系では，単語に複数の意味属性が与えられている場合が多い)．sim(x,y)は意味属性x,y間の類似度であり，l_x,l_yはx,yのシソーラスの根からの階層の深さ，Lはxとyの意味属性で一致している階層の深さを表す．類似度sim(x,y)は0から1の値をとる．用例パターンP_1,P_2の格の一致度csは，P_1,P_2に含まれるすべての格用例に対する，P_1,P_2の共通格に含まれている格用例の割合とし，cs=_i=1^n|E_1cc_i|+_i=1^n|E_2cc_i|_i=1^l|E_1c1_i|+_i=1^m|E_2c2_i|eqnarray*と定義する．ただし，用例パターンP_1中の格をc1_1,c1_2,,c1_l，用例パターンP_2中の格をc2_1,c2_2,,c2_m，P_1とP_2間の共通格をcc_1,cc_2,,cc_nとする．また，E_1cc_iはP_1内の格cc_iに含まれる格用例群であり，E_2cc_i,E_1c1_i,E_2c2_iも同様である．|E_1cc_i|などの絶対値記号は頻度を表す．用例パターンP_1,P_2の共通格に含まれる格用例群間の類似度sim_E(P_1,P_2)は，格用例の類似度の和を正規化したもので，sim_E(P_1,P_2)[5pt]&amp;=_i=1^n_e_1E_1cc_i_e_2E_2cc_i|e_1||e_2|,sim_e(e_1,e_2)_i=1^n_e_1E_1cc_i_e_2E_2cc_i|e_1||e_2|eqnarray*とする．用例パターンP_1,P_2間の類似度は，格の一致度csとP_1,P_2の共通格の格用例群間の類似度の積とし，次のようにして計算する．[=cssim_E(P_1,P_2)]</subsection>
  <subsection title="クラスタリングの手順">用例パターンのクラスタリングの手順を以下に示す．まず，直前の格要素の出現頻度がある閾値以上あるという条件で足切りを行う．これは，直前の格以外にも格用例がある程度の回数以上出現しているような安定した用例パターンだけを対象にするためである．この閾値は5に設定した．直前格が同じ用例パターンのクラスタリング	あらゆる2つ組の用例パターンの類似度を計算し，用例パターン	の意味属性を固定する．これらの処理は，節で述べるように繰り返す．	用例パターン間の類似度が閾値を越える組について，用例パター	ンのマージを行う．直前格を限定しない用例パターンのクラスタリング直前格が同じ用例パターンのクラスタリングでは，次の例のように，格パターンが同じで用言の用法もほとんど同じ用例パターンであっても，直前格が異なっていれば別の用例パターンとなってしまう．*1ex*1exこのように，直前格が異なっていても格パターンがほとんど同じ格フレームをマージする必要がある．行う処理は，の処理で得られた用例パターンのクラスタリングである．類似度，閾値ともと同じものを用いる．と異なる点は用例パターンの意味属性の固定を行わないことである．残りの用例パターンのふりわけ頻度の閾値を越えない用例パターン(残りの用例パターン)をこれまでの処理で作成された用例パターンにふりわける．これまでと同様に用例パターン間の類似度を計算し，類似度が閾値を越え，もっとも類似している用例パターンにマージする．クラスタリング結果に対象としている用言の格フレームがないときは，残りの用例をひとつの格パターンとしてまとめる．</subsection>
  <subsection title="用例パターンの意味属性の固定">用例パターン間の類似度は，用例パターンの直前格要素の意味属性が大きく影響する．そのため，用例パターンの直前格要素に多義性があるときに問題がある．例えば，「合わせる」の用例パターンのクラスタリングにおいて，用例パターンの組(手,顔)と(手,焦点)がそれぞれマージされる．(手,顔)は意味属性＜動物（部分）＞，(手,焦点)は意味属性＜論理・意味等＞を共通にもつためである．この2つの用例パターンの組から結果的に(手,顔,焦点)という意味的におかしい組が作られてしまう．この問題は，「手」が複数の意味属性＜動物（部分）＞，＜論理・意味等＞をもち，多義であるにもかかわらず，その多義性をまったく考慮せずに単純にクラスタリングしていることに起因している．この問題に対処するために，もっとも類似度が高い用例パターンの組から意味属性を固定する処理，すなわち用例パターンの意味の曖昧性解消を行う．この処理は，用例パターンの直前格要素の意味属性を固定することによって，次のような手順で行う．類似度が高い用例パターンの組(p,q)から順に，両方の用例パターンの直前格要素n_p,n_qの意味属性を固定する．固定する意味属性は，n_p,n_q間の類似度を最大にする意味属性s_p,s_qとする．ここで扱う用例パターンは，直前格が同じものに限定する．p,qに関係する用例パターンの類似度を再計算する．閾値を越える用例パターンの組がなくなるまで，この2つの処理を繰り返す．次に，この処理の例を示す．用言「飛ぶ」について，直前格の単語が「声」，「怒声」，「機」，「質問」であり，用例パターン間の類似度がクラスタリングの閾値(ここでは0.65とする)を越える組み合わせが以下の4通りであったとする．*1ex*1exこの表より，もっとも類似度が高い用例パターンの組は(a)であり，「声」を直前格とする用例パターンと「怒声」を直前格とする用例パターンの類似度が0.90となっている．このとき，「声」の意味属性が＜声＞で，「怒声」の意味属性も＜声＞のときに，「声」，「怒声」という単語間の類似度，そしてこの用例パターン間の類似度が最大になっている．ここで，「声」の意味素を＜声＞，「怒声」の意味属性も＜声＞に固定する．「声」と「怒声」の意味属性が限定されたので，それらの用例パターンに関係する類似度(b)，(c)，(d)の再計算を行う．再計算の結果，(c)，(d)の類似度は変わらないが，(b)は，*1ex*1exとなり，類似度0.29は閾値を下回り，結局この用例パターン間のクラスタリングは行われない．</subsection>
  <section title="必須格の選択">クラスタリングを行った結果得られる用例格フレームについて，格用例の頻度が少ない格は除く．これは，ひとつには構文解析結果の誤りへの対策であり，また頻度の少ない格はその用言と関係が希薄であると考えられるからである．ただし，ガ格についてはすべての用言がとると考え，頻度が少なくても削除せず，逆にガ格の格用例がない場合には，意味属性＜主体＞を補うことにした．頻度の閾値は，現在のところ経験的に2mfと定めている．ただし，mfはその用言においてもっとも多く出現した格の延べ格用例数である．例えば，ある用言について，もっとも多く出現した格がヲ格で，mf=100であり，ニ格の格用例数が16であったすると，このニ格は頻度が20未満なので捨てられることになる．</section>
  <section title="作成した格フレーム辞書">毎日新聞約9年分の460万文から実際に格フレーム辞書を構築した．クラスタリングの閾値は0.80に設定した．これは，格パターンが違ったり，意味が違う格フレームが同じ格フレームにならないという基準で設定したものである．従って，格フレームは基本的にはばらばらで，意味がほとんど同じ格フレームを最小限まとめたものになっている．格フレームの例を表に示す．この表では，＜主体＞，＜場所＞の意味属性をもつ格用例を【主体】，【場所】という意味属性でまとめて表示している．71,000個の用言について格フレームが構築され，用言あたりの平均格フレーム数は1.9個，格フレームあたりの格の平均数は1.7個，格あたりの平均異なり格用例数は4.3個であった．また，クラスタリングによって用例格フレーム数は用例パターン数の53%になった．構築した格フレーム辞書をみると，「賛成」のような名詞+判定詞の格フレームや，「ただす」の「について」のような複合辞の格についても得られている．また，「告知する」は，語順の問題への対処が有効に働いて，次の2つの分割する必要のない用例格フレームが1つにマージされている．[tbp]table*</section>
  <section title="解析実験">得られた格フレーム辞書の静的な評価は難しいので，それを用いた格解析を通して評価する．毎日新聞の記事200文をテストセットとし，これに対して格解析を行った．格解析はの方法を用いた．格解析結果の評価は，提題と被連体修飾詞の格を正しく認識できるかどうかで行う．格解析の評価を表に示す．ベースラインは，格フレーム辞書を用いずに，対象の用言がもっていない格をガ格，ヲ格，ニ格の順番に探して最初にみつかった格に決定するという処理を行ったものである．表において，格解析の精度をみるために係り受けの誤りを除いて考えると，本手法では提題が94%，被連体修飾詞が78%，ベースラインでは提題が90%，被連体修飾詞が67%という精度であり，本手法はベースラインの精度を大きく上回っている．解析結果の例を表に示す．誤りの大きな原因は，「〜を与える役割」のような外の関係，「業界は〜という特徴がある」といったガガ構文である．この問題の対処は今後の課題である．</section>
  <section title="おわりに">本論文では，用言とその直前の格要素の組を単位として，生コーパスから用例を収集し，それらのクラスタリングを行うことによって，格フレーム辞書を自動的に構築する手法を提案した．得られた辞書を用いて実際に格解析を行った結果，提題，連体修飾の格の解釈をかなり高い精度で行うことができた．従って，実用レベルの格フレーム辞書を構築できたと考えられる．今後，この格フレーム辞書を用いて文脈解析を行う予定である．document</section>
</root>
