<?xml version="1.0" ?>
<root>
  <title>格フレームの対応付けに基づく用言の言い換え</title>
  <author>鍜治伸裕河原大輔黒橋禎夫佐藤理史</author>
  <jabstract>本稿では，国語辞典の見出し語を定義文の主辞で置き換えることによって用言の言い換えを行う方法を提案する．この際，見出し語の多義性解消，定義文中で主辞とともに言い換えに含むべき項の決定，用言の言い換えに伴う格パターンの変換などを行う必要があり，これらを国語辞典の情報だけで行うことは不可能である．そこで，大規模コーパスから格フレームを学習し，見出し語と定義文主辞の格フレームの対応付けを行うことにより，これらの問題を解決する方法を考案した．220文に対する実験の結果，77,%の精度で日本語として妥当な用言の言い換えが可能であることがわかった．</jabstract>
  <jkeywords>言い換え，国語辞典，格フレーム，多義性解消</jkeywords>
  <subsection title="">*評価方法システムの評価を行うためには，言い換え結果が正しい言い換えであるかどうかを判定する必要がある．ここでは，筆者らが，多義性解消・同等句の抽出・表層格の変換が適切に実現されているかをチェックし，三つの処理全てが実現されていれば，その言い換え結果は正しい言い換えであると判定した．コーパスから言い換えを自動抽出するような研究では，抽出された二つの表現が言い換えになっているかどうかは，それらの文脈に強く依存していることが多い．そのため客観的な評価が難しく，複数の人間が評価を行うケースが多い．これに対して，本研究で扱う国語辞典による言い換えはより基本的な処理であり，その言い換えの結果が日本語として妥当であるかどうかについて，判断が迷うようなケースはほとんど無かった．</subsection>
  <section title="はじめに">自然言語には一つの意味内容を指し示すのに様々な表現を用いることができるという特徴がある．これは同義異表記の問題と呼ばれ，多くのアプリケーションの高精度化を妨げる原因の一つである．例えば情報検索や質疑応答といったアプリケーションでは，検索質問と文書が異なる表現を用いて記述されている場合，それらが同じ意味内容を表しているかどうかを判定する必要がある．また，計算機上で正しく推論を行うためには，推論ルールと実際の文の間の表現の違いを吸収しなくてはならない．そこで，言い換えという「同じ意味内容を表す複数の表現を結びつける変換」を自然言語処理の基礎技術として使い，この問題を解決しようとする考え方が現われてきた．このような背景から，近年では言い換え処理の重要性が認識されはじめ，さかんに研究が行われている．テキストを平易に言い換えてユーザの読解補助を行うアプリケーションが注目を集めていることも，言い換え研究が盛んに行われている一つの理由である．近年の計算機やネットワークの発達によって，我々は膨大な電子テキストにアクセスすることが可能となったが，一方で年少者やノンネイティブなど，その恩恵を十分に受けることができないユーザが存在している．そのため，このようなアプリケーションへのニーズは今後増加し，言い換え処理の重要性も高まると考えられる．</section>
  <section title="国語辞典による言い換え">本研究では，国語辞典を使った用言(動詞，形容詞，形容動詞，サ変名詞)の言い換え手法を提案する．これは定義文から見出し語の同等句を取り出して言い換えを行うというものである．例えば，見出し語「要求」を言い換える場合，その同等句は「強く求める」であるので，()のように言い換えることができる．以下では，()のように，「見出し語が用言であれば，その定義文は用言を主辞とする形で記述されており，なおかつ主辞は定義文の末尾に位置する」と仮定して議論を行う．また，定義文の主辞となる用言のことを定義文主辞と呼ぶ．要求強く求めること工事の中止を要求した工事の中止を強く求めた</section>
  <subsection title="特徴">国語辞典の定義文は，少数の平易な語彙を使って記述されている．そのため国語辞典を使って言い換えを行うことによって，以下のことが期待できる．テキストで使用される語彙のサイズを減らし，冒頭で述べたような同義異表記問題の解決に寄与できる．ノンネイティブなどの話者でも理解できる語のみを使った表現へと言い換える，テキスト平易化アプリケーションの開発につながる．例えば「激怒」と「立腹」は類似する意味内容を表しているが，計算機がそれらの意味の同値性を判定することは難しい．しかし下に示すように，定義文はいずれも「怒る」という語を使って記述されているため，これを利用すれば意味の同値性を判定することも可能である．激怒激しく怒ること立腹怒ることまた下に示すのは，国語辞典による言い換えがテキストを平易化し，ユーザの読解支援につながるような例である．言い換え前の文「渡航費用を支給する」には「渡航」「支給」という語が含まれているが，すべての年少者やノンネイティブがこれらの語を知っているとは限らない．そのため，この文は彼らにとって理解しにくい可能性がある．しかし「渡航」「支給」という語を，下に示す定義文を使って言い換えると「外国へ行くのに必要な費用をわたす」となる．この文に含まれる「行く」「わたす」という語は，年少者やノンネイティブにとっても理解しやすい表現であると考えられる．渡航船や飛行機で海をこえて，外国へ行くこと支給お金や品物をわたすこと渡航費用を支給する外国へ行く費用をわたす</subsection>
  <subsection title="用言の言い換えの難しさ">国語辞典を使って用言を言い換える場合，技術的な問題となるのは以下の三つの処理である．多義性の解消多義語を言い換える場合，その語義の曖昧性解消が必要となる．例えば「しのぐ」は下のような二つの定義文を持っているので，()のように言い換えるには「苦境をしのぐ」の「しのぐ」が，どちらの意味を持つか判別しなくてはならない．しのぐ耐え忍ぶこと優れていること苦境をしのぐ苦境を耐え忍ぶ同等句の決定先に示した例文(1)のように，見出し語の同等句は「定義文主辞とそれに副詞的にかかる語」であることが多い．しかし，定義文主辞にかかる「体言＋格助詞」(以下では「体言＋格助詞」のことを項と呼び，そこに含まれる体言を格要素と呼ぶ)も同等句に含めなくてはならない場合も存在する．例えば「体得」の同等句は「つける」ではなく「身につける」である．体得知識やわざを身につけること技術を体得する技術を身につける格助詞の変換用言を言い換える時，()のように格助詞が変化する現象にも対応しなくてはならない．下回るある数や量より，少なくなる前年を下回る前年より少なくなる</subsection>
  <subsection title="格フレームの対応付けに基づく用言の言い換え">[t]figure*国語辞典だけを利用していたのでは，前節で述べたような問題を克服するのは困難である．当然のことであるが，国語辞典には見出し語がとる項についての記述はない．また定義文主辞がとる項の情報も，日本語では項の省略が頻繁に行われるため，定義文に記述されているとは限らない．下の例のように，完全に項が省略されている定義文も珍しくない．このような現象は，国語辞典に限らず，既存の語彙知識を言い換えに利用しようとする際，つねに起こりうる問題である．しのぐ耐え忍ぶこと優れていることそのため本研究では，格フレーム辞書をあらかじめ大規模コーパスから自動構築して，見出し語と定義文主辞がもつ格フレームの対応付けを学習し，それを利用した言い換え手法を提案する．言い換えの流れは次のようになる(図)．次章以降では，1，2の処理について詳しく述べる．格フレーム辞書の自動構築\\まず大規模コーパスから用言の格フレーム辞書を自動構築する．複数の意味を持つ用言には，複数の格フレームが学習される．格フレームの対応付け\\国語辞典から「見出し語と定義文主辞」の対を抽出して，見出し語が持つ格フレームと定義文主辞が持つ格フレーム(見出し語格フレーム，主辞格フレームと呼ぶ)の対応付けを学習する．図の場合では「組織，ガメーカー，社，ヲしのぐ」という格フレームは「&lt;主体&gt;ガ他社ヨリ優れている」という格フレームと対応付けられる．言い換え処理\\入力文と類似する見出し語格フレームを一つ選択して，その格フレームの対応付け情報を使って言い換える．図の場合では，「しのぐ」の格フレームの中から，入力文「他社をしのぐ」と最も類似する「組織ガメーカー，社ヲしのぐ」という格フレームが選択される．そして，2の処理で学習した格フレームの対応付けを利用して言い換える．</subsection>
  <section title="格フレーム辞書の自動構築">提案手法を実現するためには，大規模で高精度な格フレーム辞書が必要である．本研究では，河原らの手法を用いて作成した大規模な格フレーム辞書を用いる．</section>
  <subsection title="概要">格フレーム辞書をコーパスから自動学習する際に最も問題となるのは，用言の多義性である．つまり表記が同じ用言でも，その意味が違えば別の格フレームを持つ．そのため，コーパスから自動収集した用言の係り受けデータを，意味ごとにクラスタリングする処理が必要となる．用言の直前に現れる項(直前項と呼ぶ)は用言の意味に強い影響を与えているので，直前項が決まれば用言の語義もほとんど一意に決まる．ではこの考え方を使って，自動収集した係り受けデータを次のような二段階の処理でクラスタリングする手法を提案している(図)．同じ直前項をもつ係り受けデータをまとめる．このようにして作成されたデータを用例パターンと呼ぶ．以下では「荷物」「物資」など，用例パターンの項に含まれる各単語を用例と呼ぶ．用例パターン間に類似度を設定して，類似度の高いものをクラスタリングする．ここで設定されている用例パターンの類似度は，この次のステップの「格フレームの対応付け」で非常に重要な役割を果たしている．そのため本章では，で提案されている用例パターンの類似度の計算方法について説明を行う．</subsection>
  <subsection title="用例パターンの類似度">用例パターンF_1,F_2の類似度は次のように定める．以下では，この類似度計算について詳しく述べる．ただし説明の中では，二つの用例パターンF_1,F_2は，下のように，それぞれ項C_11,C_12,C_1mとC_21,C_22,C_2nを持っていて，C_11とC_21,C_12とC_22,C_1lとC_2lが，それぞれ同じ格助詞をもっているものとする．なお，同じ格助詞をもつ項を共通項と呼ぶ．</subsection>
  <subsubsection title="用例の類似度">用例群間の類似度を定義するためには，まず二つの用例e_1,e_2間の類似度ExSim(e_1,e_2)を定義する必要がある．ExSim(e_1,e_2)は，日本語語彙大系を利用して，以下のように計算する．ExSim(e_1,e_2)=max_xs_1,ys_2sim(x,y)[10pt]sim(x,y)=2DD_x+D_y[10pt]D=maxD_z|xz,yzeqnarray*日本語語彙大系は，用例に意味属性を与えるために使う．日本語語彙大系から与えられる意味属性には，二つの特徴がある．まず，用例が多義である場合は，一つの用例に複数の意味属性が与えられている．そして，意味属性は階層構造を持っている．s_1,s_2は，用例e_1,e_2が日本語語彙大系の中で持っている意味属性集合で，x,yはそれらの中の一つである．D_x,D_y,D_zは意味属性x,y,zの階層の深さである．xzは，zがxの上位に位置する意味属性であることを表している．sim(x,y)の計算式で分子が2Dとなっているのは，用例間の類似度を1に正規化するためである．</subsubsection>
  <subsubsection title="共通項に含まれる用例の類似度">つぎに，共通項C_1i,C_2iに含まれる用例の類似度ArgSim(C_1i,C_2i)を定義する．類似度は，C_1i,C_2iに含まれる用例間の類似度を，それらの出現頻度で重み付けして平均したものとする．計算式は以下のようになる．ArgSim(C_1i,C_2i)=_e_1C_1i_e_1C_2i|e_1||e_2|ExSim(e_1,e_2)_e_1C_1i_e_1C_2i|e_1||e_2|eqnarray*ここで，e_1,e_2は，C_1i,C_2iに含まれる用例を表す．また，|e_1|,|e_2|は，用例e_1,e_2の用例パターンF_1,F_2における出現頻度とする．</subsubsection>
  <subsubsection title="用例パターンに含まれる用例の類似度">用例パターンに含まれる用例の類似度Sim(F_1,F_2)は，各共通項のArgSim(C_1i,C_2i)の重み付け平均とする．重みは，C_1i,C_2iに含まれる用例の出現総数の積の平方根とする．したがって，Sim(F_1,F_2)は以下のように計算される．Sim(F_1,F_2)=_i=1^l|C_1i||C_2i|ArgSim(C_1i,C_2i)_i=1^l|C_1i||C_2i|eqnarray*|C_1i|,|C_2i|は，C_1i,C_2iに含まれる用例の延べ数を表す．</subsubsection>
  <subsubsection title="項の一致度">用例パターンF_1,F_2の項の一致度は、それぞれの用例パターンについて「すべての項に含まれる用例の出現総数」に対する「共通項に含まれる用例の出現総数」の割合を求めて，それらの積の平方根をとったものとする．項の一致度Correspondの計算式は以下のようになる．Correspond(F_1,F_2)=_i=1^l|C_1i|_i=1^m|C_1i|_i=1^l|C_2i|_i=1^n|C_2i|eqnarray*</subsubsection>
  <section title="格フレームの対応付け">次に，構築された格フレーム辞書を利用して，国語辞典の見出し語の各格フレームに対して，それを言い換える上で最も適切な主辞格フレームを選択する．ここでは，見出し語の各格フレームと主辞格フレームの間に類似度を定義して，それに基づいて対応先を決定するという方法をとる．ただし，定義文やそれに付与されている例文が有効に利用できる場合には，あらかじめ対応付ける格フレームの候補を絞り込む処理を行う．すなわち格フレームの対応付けは以下の三つのステップで行う．定義文を用いて，見出し語格フレームの対応先候補となる主辞格フレームを絞り込んでおく．例文を用いて，それぞれの見出し語格フレームの語義を絞り込む．見出し語格フレームと主辞格フレームの間の類似度計算に基づいて，見出し語格フレームに最も類似する主辞格フレームを選択する．図に「本部，幹部ガ外部，専門家ニ教えヲ仰ぐ」という格フレームに対応する主辞格フレームを決定する過程を示す．figure*</section>
  <subsection title="定義文を用いた主辞格フレームの絞り込み">図の「米国，団体ガ国，日本ニ公開，解除ヲもとめる」のように，主辞格フレームの一部は，定義文主辞と異なる意味を持っている．このような主辞格フレームと見出し語格フレームの間に対応関係が存在することはありえない．そのため定義文を使って，これらの主辞格フレームを取り除き，見出し語格フレームの対応付け候補となる主辞格フレームを絞り込む．絞り込みを行うための手掛かりとして，定義文中に現れる定義文主辞の項を用いる．とくに定義文主辞の直前に現れる項(主辞直前項と呼ぶ)がガ格，ヲ格，ニ格のときは，主辞直前項だけを使って絞り込みを行う．このような場合には，主辞直前項が定義文主辞の用法に与える影響は非常に大きいと考えられるからである．すなわち絞り込み方法は，主辞直前項がガ格，ヲ格，ニ格のいずれかであるときと，それ以外のときの二通りを用意することになる．ただし，定義文主辞が項をとらない場合は，定義文を用いた絞り込みは行わない．主辞直前項がガ格，ヲ格，ニ格の場合直前項の格助詞が主辞直前項と同じで，なおかつ直前項の格要素が表の制約を満たすような主辞格フレームのみを対応付け候補とする．格要素への制約は主辞直前項のタイプによって三つに分かれている．ただし，一般概念語とは「人々」「場所」などのように一般的な概念を表す単語のことである．図の場合では，主辞直前項のタイプは表の「格要素が並列構造」である．それゆえ，主辞直前項の格要素(教え，さしず)と類似度が0.8以上の用例を持った主辞格フレームが対応先候補となる．主辞直前項がガ格，ヲ格，ニ格でない場合この場合は主辞直前項のみを使った絞り込みは難しい．そのため，主辞格フレームと定義文に共通して現れるガ格・ヲ格・ニ格の項の類似度の平均をもとめ，それが0.8以上の格フレームだけを対応付け候補とした．なお，主辞格フレーム・定義文間の項の類似度は，以下のように定義した．項の類似度=maxExSim(e_def,e)|eCeqnarray*ここでe_defは定義文主辞がとる格要素であり，eは主辞格フレームの項Cに含まれる用例である．またExSim(e_1,e_2)は日本語語彙大系に基づいて計算した用例e_1,e_2の類似度で，節で定義した計算方法と同様である．</subsection>
  <subsection title="例文を用いた語義の絞り込み">上記のように対応付け候補となる主辞格フレームを絞り込んだ後，定義文に与えられた例文を用いて，それぞれの見出し語格フレームの語義を絞り込む．例えば図に示した，点線で囲まれた「仰ぐ」の格フレームは，語義2に与えられた例文(先生の教えを仰ぐ)と類似している．そのため，この見出し語格フレームの対応先を，語義2の定義文主辞「もとめる」の格フレームに絞り込むことができる．例文と見出し語格フレームの類似度は，例文と見出し語格フレームに共通して現れるガ格・ヲ格・ニ格の項の類似度の平均とする．項の類似度は前述と同様のものを用いた．そして，類似度が0.8以上である見出し語格フレームは，その語義を絞り込んだ．この処理は，定義文に例文が与えられていない場合や，見出し語格フレームと類似する例文が見つからない場合には行わない．</subsection>
  <subsection title="類似度計算による対応付け">以上のようにして対応先を絞り込んだ後，見出し語格フレームと主辞格フレームの間に設定した類似度に基づき，各見出し語格フレームに対して最も類似する主辞格フレームを一つ選択する．類似度計算は節で説明した用例パターン間の類似度計算方法に，若干の修正を加えたものを使う．以下では，見出し語格フレームF_1と主辞格フレームF_2において，C_11C_1lとC_21C_2lが共通項で，F_2のC_2n+1は見出し語の同等句に含まれるとする．</subsection>
  <subsubsection title="同等句に含まれる項の決定">どの項が同等句に含まれているかは，見出し語格フレームと主辞格フレームの類似度計算を通して決定する．つまり，ある項が同等句に含まれると仮定して求められた類似度が，含まれないと仮定した場合の類似度より高ければ，その項は同等句に含まれると判定する．ただし，対応付けの処理を補助するために，次に述べる仮定に基づいて同等句に含まれる可能性がある項を絞り込む．まず，同等句に含められる可能性がある項は，主辞直前項だけであると仮定する．さらに，主辞直前項が以下のいずれかの場合にあてはまれば，それが同等句に含まれる可能性はないと仮定する．主辞直前項の格要素が一般概念語である場合並列構造になっている場合格助詞がガ格，ヲ格，ニ格以外の場合つまり，表の「格要素が単語一つ」に分類される主辞直前項だけが，同等句に含まれる可能性を考慮する対象となる．</subsubsection>
  <subsubsection title="共通項の決定">節では，同じ格助詞をもつ項が二つの格フレームの共通項であると定義していた．しかし，この定義は異なる用言の格フレームを対象とした場合には適切ではない．なぜなら，異なる格助詞をもつ項でも共通項になることができる，同等句に含まれる項は共通項になることができない，といった現象が起こりうるからである．共通項の決定は，同等句に含まれる項を決定する作業と同様に，見出し語格フレームと主辞格フレームの類似度計算を通して行う．ただし，任意的な項は用言が変わっても格助詞が変わらないことが多いので，任意的な項は，異なる格助詞をもつ項と共通項にならないと仮定する．ここでは任意的な項とは「格フレーム中で，その項に含まれる用例出現頻度が低いもの」又は「ガ格，ヲ格，ニ格，ト格，ヨリ格，カラ格，マデ格以外の項」とした．</subsubsection>
  <subsubsection title="項の一致度の修正">節においては項の一致度は，それぞれの格フレームについて「すべての項に含まれる用例数の出現総数」に対する「共通項に含まれている用例の出現総数」の割合を求めて，それらの積の平方根をとったものとしていた．しかし「すべての項に含まれる用例数の出現総数」を数えるときに，同等句に含まれる項の用例は数えない．</subsubsection>
  <subsubsection title="共通項に含まれる用例の類似度の修正">見出し語格フレームF_1と主辞格フレームF_2の共通項C_1i,C_2i間の類似度ArgSim(C_1i,C_2i)を以下のように新しく定義する．節では，項に含まれるすべての用例の組合せについて類似度を計算し，その類似度の重み付け平均を共通項に含まれる用例の類似度としていた．ここでは見出し語格フレームに出現する一つの用例に対して，主辞格フレームに出現する用例の中から類似度が最大となるものを一つ選び，その類似度の重み付け平均をArgSim(C_1i,C_2i)としている．この修正の理由は，一般に定義文主辞の方が見出し語よりも広い意味をカバーしていることが多く，そこに現われる用例も多様なためである．ArgSim(C_1i,C_2i)=_e_1C_1i|e_1|maxExSim(e_1,e_2)|e_2C_2i_e_1C_1i|e_1|eqnarray*</subsubsection>
  <section title="実験">例解小学国語辞典と，毎日新聞と日経新聞の計20年分から自動構築した格フレーム辞書を用いて格フレームの対応付けを行い，新明解国語辞典に記載されている例文(220文)に含まれる用言を言い換える実験を行った．ただし「使う」「作る」などの基本的な用言は，定義文を使って言い換えることが難しい．また，それらの用言は十分に平易なので，工学的な立場からみれば，言い換え処理を行うメリットが少ない．そこで例解小学国語辞典の定義文に頻出する形態素の上位2000に含まれる用言はこのような基本的な用言であると考え，実験対象から外した．</section>
  <section title="考察">言い換えを誤った主な原因は，格フレームの用例不足であった．本実験では，20年分の新聞記事という大量のコーパスから学習した格フレーム辞書を利用したが，一部の表現には対応できていなかった．例えば「夢中になる」の格フレームは，次のようなものが集まっている．しかし，「研究に夢中になる」という表現と類似する格フレームは一つもなかった．また定義文には，下に示すような，独特の不自然な表現が存在する．新聞記事から学習した格フレームには，このような表現に対応できる用例は集まっておらず，不適切な対応付けが行われた．ぶら下がるぶらりと下がる格フレームの不適切なクラスタリングが原因で，言い換えを誤った例も見られた．クラスタリングの際に用いる類似度計算方法は，対応付けの際に用いる類似度計算と同様に，改良の余地があると考えられる．我々の提案した言い換え手法は，多義性解消の手法と見ることも出来る．表に示したように，先頭の定義文の語義を選択するというベースライン手法の精度は52,%であった．これに対して我々の手法の精度は71,%であり，有効に働いたといえる．多義性解消に関する研究の多くは，語義のタグが付与されたコーパスを利用する，教師有りの手法を用いている．このような手法では，各語がどのような語義を持っているかという，タスク設定が変わるとコーパスの再利用が難しくなる．また，コーパスの作成にコストがかかるという問題もある．それゆえ今後は，我々の手法のような，教師無しの手法による多義性解消が重要になると考えている．</section>
  <section title="先行研究">高橋らは不完全な構文変換規則とそれを修正する規則を人手で作成し，読解支援のための言い換えを行うシステムを開発している．近藤らは，動詞を受身形や使役形に言い換える際に必要な，格助詞の変換規則を人手で作成している．また近藤らは，既存の辞書を利用して動詞句を言い換える手法も提案している．この他，のようにコーパスから言い換えを抽出しようとする研究も多い．学習対象のコーパスも完全な生コーパスからパラレルコーパスまで様々である．「同等句の抽出」「格助詞の変換」は，用言の言い換えにおいて非常に重要な処理であるにも関わらず，十分な議論を行った研究はこれまでにほとんどない．は格助詞の変換を扱っているが，「態の変化に伴う格助詞の変化だけを扱っている」「人手で規則を記述するというアプローチである」という二つの理由から，カバレージのある手法とはいえず問題が残っていた．これに対してわれわれの手法は，広いカバレージをもって上記の処理を実現できる枠組をはじめて提案したといえる．</section>
  <section title="まとめ">本研究では，言い換えのタスクの一つとして国語辞典による用言の言い換えを取り上げた．この言い換えを実現するには，語義の曖昧性解消，定義文からの同等句抽出，格助詞の変換などの処理が必要である．しかし，定義文にはこれらの処理を実現させるために必要な情報が，十分に記述されているとは限らないため実現が難しく，従来研究でもこれらの処理は十分に扱われていなかった．これに対して本研究では，格フレームの自動学習・対応付けに基づいて用言を言い換える手法を提案し，実験によってその有効性を示した．今後は，提案手法を用いて，読解補助やテキスト検索といったアプリケーションの品質向上に取り組む予定である．document</section>
</root>
