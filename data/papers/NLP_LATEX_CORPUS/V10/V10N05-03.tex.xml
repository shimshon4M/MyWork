<?xml version="1.0" ?>
<root>
  <title>1次元自己組織化マップを用いた高次元データの高速近傍検索</title>
  <author>北研二獅々堀正幹</author>
  <jabstract>高次元空間における最近傍検索(nearestneighborsearch)は，マルチメディア・コンテンツ検索，データ・マイニング，パターン認識等の分野における重要な研究課題の1つである．高次元空間では，ある点の最近点と最遠点との間に距離的な差が生じなくなるという現象が起こるため，効率的な多次元インデキシング手法を設計することが極度に困難となる．本稿では，1次元自己組織化マップを用いた近似的最近傍検索の手法を提案し，提案した手法の有効性を類似画像検索と文書検索の2種類の実験により評価する．自己組織化マップを用いて，高次元空間での近傍関係をできる限り保ちつつ，高次元データを1次元空間へ配置し，1次元マップから得られる情報で探索範囲を限定することにより，きわめて高速な最近傍検索が可能となる．</jabstract>
  <jkeywords>最近傍検索，多次元インデキシング，マルチメディア・コンテンツ検索，自己組織化マップ</jkeywords>
  <section title="はじめに">empty計算機の高性能化や記憶容量の大容量化および低価格化にともない，情報のマルチメディア化が急速に進行しており，このような背景のもと，マルチメディア・コンテンツに対する情報検索技術の必要性がますます大きくなってきている．マルチメディア・コンテンツ検索では，マルチメディア情報そのものから得られる特徴量に基づき類似検索を行なうという内容型検索(content-basedretrieval)が近年の主流であるが，多くの場合，複数の特徴量を多次元ベクトルで表現し，ベクトル間の距離によりコンテンツ間の類似性を判定している．たとえば，文書検索の場合には，索引語の重みベクトルで文書や検索質問を表現することができるし，画像の類似検索の場合には，カラーヒストグラム，テクスチャ特徴量，形状特徴量などから成る特徴量ベクトルにより画像コンテンツを表現する．特徴量ベクトルに基づくコンテンツの類似検索は，検索質問として与えられたベクトルと距離的に近いコンテンツ・データベース中のベクトルを見つけるという最近傍検索(nearestneighborsearch)の問題に帰着することができる．データベース中のベクトルと逐次的に比較する線形探索では，データベースの規模に比例した計算量が必要となるため，データベースが大規模化した際の検索システムの処理効率に深刻な影響を及ぼすことになる．したがって，最近傍検索を効率的に行なうための多次元インデキシング技術の開発が重要な課題として，従来より活発に研究されてきた．ユークリッド空間における多次元インデキシング手法には，R-tree,SS-tree,SR-treeなどが提案されており，また，より一般の距離空間を対象にしたインデキシング手法としては，VP-tree,MVP-tree,M-treeなどが提案されている．これらのインデキシング手法は，多次元空間を階層的に分割することにより，探索範囲を限定することを基本としている．しかし，高次元空間では，ある点の最近点と最遠点との間に距離的な差が生じなくなるという現象が起こるため，探索する領域を限定することができず，線形探索に近い計算量が必要になってしまうという問題点がある．高次元空間における上記の問題点に対処するために，近似的な最近傍検索についても研究が進められている．たとえば，ハッシュ法に基づく近似検索手法や空間充填曲線(space-fillingcurve)を用いて高次元空間の点を索引付けする手法などが提案されている．我々は，現在，テキストと画像のクロスメディア情報検索に関する研究の一環として，類似画像検索システムを開発しているが，クロスメディア情報検索では，ユーザとのインタラクションを通じて所望の検索結果を得ることが多々あるため，特徴量ベクトルに基づく最近傍検索の実行回数が必然的に多くなってしまう．このような場合，完全な最近傍検索は必要ではなく，むしろ高速な近似的最近傍検索のほうが望ましい．本稿では，1次元自己組織化マップを用いた，高速な近似的最近傍検索の手法を提案し，提案した手法の有効性を類似画像検索と文書検索という2種類の実験により評価する．最近傍検索を行なう際の一番のボトルネックは，2次記憶上のデータへのアクセスであるが，提案する手法は，次元数がきわめて多い場合でも効率的にディスク・アクセスを行なうことができるという利点を持っている．</section>
  <section title="自己組織化マップを用いた最近傍検索"/>
  <subsection title="自己組織化マップ">自己組織化マップ(self-organizingmap;SOM)は，教師なし競合学習により，高次元データを低次元データに写像する2階層型のニューラルネットワークである．自己組織化マップでは，高次元空間での近傍関係をできる限り保ちつつ，低次元空間へデータを配置するという位相的整列性と呼ばれる特徴を持っている．自己組織化マップの典型的な適用例は，多次元データの可視化であり，この場合には高次元データを2次元平面上に配置するということを行なう．図~は，n次元の入力データを2次元平面上に配置する自己組織化ネットワークの例を示している．ネットワークの入力層は，2次元平面上に格子状に配置されたすべてのユニットと結合されており，各ユニットには，入力層に入力されるデータと同じ次元数の参照ベクトル(referencevector)が対応している．学習の過程では，入力層に入力されたベクトルと最も近い参照ベクトルを持つユニットを探し，このユニットとその近傍にあるユニットの参照ベクトルを入力ベクトルに近づけるという操作を繰り返す．このようにして，同じような位相的特徴を持ったユニットが近傍領域に集まり，結果的に入力データの位相的特徴を反映した自己組織化マップが作られることになる．自己組織化マップの学習アルゴリズムをまとめると，以下のようになる．	参照ベクトルm_iをランダムな値で初期化する．	入力ベクトルxに最も近い参照ベクトルm_cを持つユニットcを見つける．	ユニットcおよびcの近傍領域の参照ベクトルm_iを次式により更新する．ここで，h_ciはユニットcから離れるにつれ，小さな値になるように設定する．また，h_ciは学習が進むにつれ，単調に減少するようにする．	ステップ2より繰り返す．[t]figure*</subsection>
  <subsection title="自己組織化マップを用いた最近傍検索手法">上で述べたように，自己組織化マップでは，高次元空間での近傍関係をできる限り保ちつつ，入力データを低次元空間へ配置することができるという特徴を持っている．この特徴を用いると，高次元空間での最近傍検索を低次元空間での最近傍検索問題に置き換えることができると考えられる．しかし，自己組織化マップの学習には誤差がともなううえ，低次元のマップ上では，高次元空間での距離が保存されていないため，低次元マップだけを用いて最近傍検索を行なうことは不可能である．我々は，自己組織化マップにより得られた低次元空間での近傍関係から，最近傍検索の探索範囲を限定し，限定されたデータに関してだけ，元の高次元空間上で距離を計算するという方法を考えた．また，探索範囲の限定を効率的に行なうことができるように，1次元の自己組織化マップを用いることにした．以下に，1次元自己組織化マップを用いた最近傍検索手法をまとめる(図~参照)．*2mm多次元インデキシングの作成	自己組織化マップの学習アルゴリズムにより，多次元データを1次元上に配置する．ユニット数をkとすると，データはk個のクラスタに分割されることになる．	各クラスタに属するデータを，2次記憶上の連続した領域に格納する．また，この際，1次元マップ上の各ユニットに2次記憶領域へのポインタを持たせる．なお，2次記憶領域には，元の多次元データを格納する．最近傍検索	与えられた検索質問ベクトルに最も近い参照ベクトルを持つユニットcを見つける．	ユニットcの近傍ユニットに配置されたデータに対してのみ，検索質問との距離計算を行なう．距離計算の際には，2次記憶上に格納されている多次元データを用いる．	上記で計算された結果を，距離の小さい順にソートし，これを最近傍検索の結果として出力する．*2mm検索質問ベクトルと距離計算の行なわれるデータは，2次記憶上の連続した領域に格納しているため，2次記憶へのアクセスはきわめて効率的に行なうことが可能である．3節で実験結果を述べるが，1次元マップ上の各ユニットに割り当てられるデータ数が大きく偏ることはなく，概ね平均化している．したがって，2次記憶へのアクセス回数は数回程度である．なお上記では，1次元の自己組織化マップを用いたが，2次元の自己組織化マップを用いることも可能である．ただし，2次元自己組織化マップを用いる場合には，近傍ユニットに属するデータを必ずしも2次記憶上の連続した領域に格納できるとは限らないため，最近傍検索の手続きが多少複雑になる．上記で提案した多次元インデキシング手法の本質は，多次元データのクラスタリングに1次元自己組織化マップを用いている点であり，クラスタ(あるいは近傍クラスタ)内の検索は基本的に線形探索によって行われている．自己組織化マップ以外にも，他のクラスタリング手法を用いて同様のインデキシングを行うことも考えられる．たとえば，主成分分析を用いて第1主成分により1次元上にデータをマッピングすることもできるが，主成分分析はデータの分布が正規分布に近い場合には有効であるが，そうでない場合には自己組織化マップを用いたほうが近似の精度が高いという利点がある．また，ベクトル量子化は，ユニット中のセントロイド(コードブック)により入力データを近似するという点で自己組織化マップに類似しているが，ベクトル量子化では高次元空間での近傍関係を保つという位相的整列性を特別に考慮していない．提案した最近傍検索手法では，検索の際に近傍ユニットを探索することから，位相的整列性を備えた自己組織化マップを用いた手法のほうが良いと考えられる．</subsection>
  <section title="実験結果">自己組織化マップを用いた最近傍検索手法の有効性を調べるために，類似画像検索実験と文書検索実験を行なった．以下で実験の概要および実験結果について述べる．</section>
  <subsection title="類似画像検索実験">類似画像検索実験では，Corelデータベースから抽出した42,381件のカラー写真画像を用いた．また，このうち，424件(全体の1,%)の画像データをランダムに抽出し，検索画像とした．これらの画像データから，表~に示すような，次元数の異なる4種類の特徴量ベクトルを作成した．[t]table*自己組織化マップを用いた最近傍検索の精度を調べるためには，検索された画像のうち，どれが正解であるかという情報が必要である．このため，各検索画像と全画像データとの間のユークリッド距離を線形探索により求め，距離の小さい400件を正解データとした．与えられた検索画像から，自己組織化マップを用いた最近傍検索により，上位400件の検索結果を出力し，これを正解データと比較することにより適合率を算出した．自己組織化マップを用いた最近傍検索では，検索条件によって適合率は変化する．適合率が変化する主な要因は，1次元マップ上の総ユニット数，および，検索の際に用いる近傍数である．ここで，近傍数とは，探索候補の絞り込みの際にいくつのユニットを参照したかを意味しており，具体的には，検索質問の属するユニットに加え，その近傍のユニットをいくつ参照したかを示す．以下では，検索質問の属するユニットのみを参照したときは近傍数1，検索質問の属するユニットに加え，その左右両側のユニットを参照したときは近傍数3というように表すことにする．なお，近傍数3の際，検索質問が1次元マップ上の左端(あるいは右端)のユニットに属している場合には，そのユニットの右側(あるいは左側)しか参照しない．図~は，ユニット数が10あるいは20，近傍数3のときの適合率曲線を示している．横軸方向は検索結果数を，縦軸方向は平均適合率を表しており，グラフは上位n件の結果が検索された時点での平均適合率をプロットしたものである．図から分かるように，検索結果数が増えるに連れ平均適合率は単調に減少しており，次元数が大きほど適合率が減少する度合が大きくなっている．しかし，ユニット数10，近傍数3およびユニット20，近傍数3のいずれの条件下でも，上位100件程度の近傍検索では，近似解の精度がほぼ100,%に達している．一方，従来の近似検索手法での実験結果では，最も次元数が高い256次元のデータから近傍検索数10件の検索を行うのに，全データ数の約1割程度の距離計算回数を費やすことで約90,%の近似解の精度が得られたと報告している．このことから，他の近似検索手法と比べ，提案手法による検索精度の高さが分かる．また，表~は，さまざまな条件のもとでの平均R適合率と検索質問1件当たりの平均距離計算回数を示している．表~から分かるように，同じ検索条件のもとでは，適合率は次元数が大きくなるにつれ低下する傾向にあるが，距離計算回数は次元数によらずにほぼ一定である．したがって，本手法は，次元数が増大した場合にも高速性が失われることはない．なお，距離計算回数が次元数によらず一定である理由は，各ユニットに割り当てられるデータ数が概ね平均化しているためである．図~に，ユニット数20の際に各ユニットに割り当てられたデータ数を示すが，1次元マップ上の各ユニットに割り当てられるデータ数が極端にばらついていないことを読み取ることができる．また，特徴量ベクトルから1次元自己組織化マップに基づく多次元インデキシングを行うのに要したCPU時間は，ユニット数10の場合，RGB-48に対しては525秒，HSI-192,HAAR-256,HSI-432に対してはいずれも1000秒程度であり，次元数の増加にともないインデキシング時間が極端に増加するということはなかった．なお，今回実験を行ったマシンのOSはLinux，CPUはIntelXeon2.4GHz，主記憶容量は1,024Kバイトである．参考のために，各画像特徴量に対するSR-treeの平均距離計算回数を表~に示す．SR-treeでは，検索対象データに対する多次元インデクスを作成する際に多次元空間を木構造を用いて階層的に分割しているが，検索時には木構造の内部ノードとの距離計算も行うため，検索対象データ数よりも多くの距離計算が行われることがある．表~では，検索対象データとの平均距離計算回数を括弧内に示している．表~から分かるように，SR-treeの場合には，与えられた検索質問に距離的に近い検索結果を上位何件求めるかにより距離計算回数が異なるが，検索件数が増えるに従い距離計算回数は単調に増加する傾向にある．上位1件のみを求める場合には距離計算回数はきわめて少ないが，それ以外の場合にはいずれの特徴量においても自己組織化マップを用いた検索よりも計算回数が多くなっている．実際に類似検索を行う際には，上位1件のみの検索結果だけが必要であることは稀であると考えられるため，この場合には自己組織化マップを用いた提案手法のほうが高速な検索を行うことが可能である．figure*table*figure*figure*</subsection>
  <subsection title="文書検索実験">において，類似画像検索を対象にした実験結果を示した．画像特徴量の次元数は，数10数100次元程度であるが，これよりも次元数が大きい場合の手法の有効性を調べるために，ベクトル空間モデル(vectorspacemodel;VSM)に基づく文書検索を対象とした実験を行なった．なお，文書検索では通常，検索質問中の索引語が現われる文書しか対象にしないため，転置ファイルに基づく方法が用いられ，この場合には高速な検索を行うことが可能である．ここでの実験は，次元数が大きい場合にも提案手法が有効かどうかを検証することを主な目的として行ったものである．ベクトル空間モデルでは，文書中から索引語を抽出し，文書を索引語の出現頻度に基づくベクトルで表現する．文書ベクトルの次元数は，文書集合全体にわたる索引語の総数と等しいため，次元数はきわめて大きくなる．本実験では，情報検索評価用のテストコレクションであるMEDLINEを用いた．MEDLINEは，検索対象文書1,033文書，検索質問30文書から成る小規模なコレクションであり，各検索質問には，どの文書が適合しているかという適合情報が用意されている．なお，各検索質問に対する平均適合文書数は23.2文書である．まず前処理として，MEDLINEコレクションから``a''や``about''などの不要語439単語，および全文書中に1回しか出現しなかった単語を削除した．その後，ポーター・アルゴリズム(Porteralgorithm)によるステミングを行なった結果，4,329個の索引語が得られた．以上の処理により得られた索引語から4,329次元の文書ベクトルを構成した．この際，索引語の重み付けとして，局所的重み付けには対数化索引語頻度を，大域的重み付けにはエントロピーを，文書正規化にはコサイン正規化を用いた．文書検索の評価では，通常のベクトル空間モデルに基づく最近傍検索(線形探索)と自己組織化マップを用いた最近傍検索の両者とも30件の検索結果を出力し，出力結果をMEDLINEの適合情報と比較することにより適合率を求めた．この際，自己組織化マップを用いた最近傍検索では，ユニット数20，近傍数3の条件で検索を行なった．図~に，文書検索の適合率曲線を示すが，自己組織化マップを用いた検索のほうがわずかながら良い結果を与えている．なお，ベクトル空間モデルに基づく検索のR適合率は0.53であり，自己組織化マップを用いた検索のR適合率は0.58であった．また，自己組織化マップを用いた最近傍検索の平均距離計算回数は1検索質問当たり141回であり，これは線形探索の約1/7に相当する．以上はMEDLINEコレクションの適合情報に対する評価であるが，次に，自己組織化マップによる最近傍検索の近似誤差について述べる．ベクトル空間モデルの検索結果を正解とみなした場合，自己組織化マップを用いた検索結果のR適合率は0.68であった．したがって，上位30件までの検索では32,%の近似誤差が生じていることになる．しかし，近似誤差があるにもかかわらず，MEDLINEの適合情報に対する評価では，通常のベクトル空間モデルよりも適合率が高くなっている．潜在的意味インデキシング(latentsemanticindexing;LSI)などによる検索では，次元数を削減すると検索精度が逆に向上することなどから，高次元空間そのものにおける検索が質的に良い検索結果を与えるとは限らない．我々の提案した手法の近似の程度と検索精度の関係等を調査することは，今後の課題である．</subsection>
  <section title="おわりに">本稿では，1次元自己組織化マップを用いた高次元データの近似的な最近傍検索手法を提案した．提案した手法では，自己組織化マップを用いて，高次元空間での近傍関係をできる限り保ちつつ，高次元データを1次元マップ上に配置することにより，最近傍検索の探索範囲を大きく削減することができる．また，本手法では，実際に距離計算の行なわれるデータは，2次記憶上の連続した領域に格納できるため，2次記憶へのアクセスを効率的に行なうことができるという大きな利点を持っている．このため，大規模なデータ集合に対しても，きわめて高速な最近傍検索を行なうことが可能である．従来のSR-tree等の正確な最近傍検索では，高次元の場合に線形探索に近い計算量が必要となってしまうという問題点があるため，現実的，応用的な場面においては，本手法のような高速な近似的最近傍検索のほうが望ましいと考えられる．</section>
</root>
