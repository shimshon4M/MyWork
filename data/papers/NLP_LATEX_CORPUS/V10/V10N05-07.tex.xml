<?xml version="1.0" ?>
<root>
  <title>初期質問文から蓄積された質問応答への効果的マッチング法</title>
  <author>松井くにお田中穂積</author>
  <jabstract>カスタマサービスとして，ユーザから製品の使用方法等についての質問を受けるコールセンターの需要が増している．ユーザからの質問に的確に応答するためには，次々に開発される新製品の知識が必要となる．応対するオペレータは，過酷な業務のため定着率が低く，企業にとってもレベルの高い人材を継続して維持することは，人件費や教育などのコストがかかり，問題となっている．本研究は，ユーザが自ら問題解決できるような，対話的ナビゲーションシステムを実現する基礎技術を開発することにより，コールセンターのオペレータ業務の負荷を軽減することを目的とする．Web上での質問応答システムにおいてユーザが初期に入力する自然言語による状況説明や質問文を分析したところ，20文字以下の質問文が7割を占めていた．一方，コールセンターでは，オペレータが，過去のユーザとのやり取りの結果を，質問と応答の要約文として蓄積している．そこで，本研究では，ユーザが初期に入力する20文字前後の比較的短い質問文を対象とし，その質問文から，コールセンターで蓄積した過去の質問の要約文を引き出し，それに予め付与された応答をそのまま回答する手法を採用する．しかし，ユーザの与える20文字以下の短い質問文と蓄積された要約文との単純なマッチングでは，多数の要約文が引き出されることが多いため，システムからユーザに新たなキータームの入力を促してユーザの意図する適切な要約文に速やかに到達できるような対話的ナビゲーション技術の開発が最も重要な研究課題となっている．対話的ナビゲーションを実現するために，ユーザが初期に入力した質問文中のどのようなタームが最適な要約文の検索に重要であるかを判定する方式として，入力した質問と要約文とのマッチングが成功したものから一定の基準によってタームを変更する方式（サクセスファクタ分析方式と呼ぶ）を開発した．この分析の結果から，主辞を修飾するタームをユーザの質問文に対して対話的に補うことがマッチングの精度に大きく影響し，極めて有効なことを実験的に明らかにした．</jabstract>
  <jkeywords>コールセンター，ナビゲーション，質問応答，初期質問文，サクセスファクタ分析方式</jkeywords>
  <section title="はじめに">カスタマサービスとして，ユーザから製品の使用方法等についての質問を受けるコールセンターの需要が増している．しかし，新製品の開発のサイクルが早くなり，ユーザからの質問の応対に次々に新しい知識が必要となり，応対するオペレータにとっては，複雑な質問へすばやく的確に応答することが困難な状況にある．オペレータは，過酷な業務のため定着率が低く，企業にとっても，レベルの高いオペレータを継続して維持することは，人件費や教育などのコストがかかり，問題となっている．本稿では，ユーザが自ら問題解決できるような，対話的ナビゲーションシステムを実現する基礎技術を開発することにより，コールセンターのオペレータ業務の負荷を軽減することを目的とする．通常のコールセンターでは，オペレータがユーザとのやり取りによって質問応答の要約文をあらかじめ作成しておく（図,(a)）．Web上の質問応答システムでは，これをデータベース化したものをユーザの質問文のマッチング対象に用いる（図,(b)）．ユーザはオペレータの介入なしに質問を入力し，応答を得ることができる．このようなWeb上の質問応答システムを用いて，所望の応答結果を速やかに得るために必要なナビゲーション技術の新しい提案を行なう．パソコン関連の疑問に答える，既存のWeb上の質問応答システムから収集したデータによると，ユーザが入力する質問文（端末からの入力文）は，平均20.8文字と短いため，この質問文を用いて，一度で適切な質問と応答の要約文にマッチングすることは稀である．そこで，必要に応じてシステムがユーザに適切なキータームの追加を促すことで，必要な条件を補いながら質問の要約文とのマッチングを行ない，適切な応答の要約文を引き出す必要がある．しかしながら，このようなナビゲーションにおいては，ユーザに追加を促したキータームがどれだけ有効に機能したかどうかがわからない，といった評価上の問題がある．これらのキータームの補いの問題と，評価上の問題を解決するために，本稿では以下の手法を用いた．まず，34,736件の質問の要約文から300件を無作為に抽出し，ユーザが初期に入力するような質問文（以下，初期質問文と呼ぶ）を人手で作成した．この初期質問文を初期入力として要約文とのマッチングを行なった．次に，システム側がユーザに対して適切なキータームの追加を促し，新たに作成した質問文（以下，二次質問文と呼ぶ）を入力として，再度，要約文とのマッチングを行なった．マッチングの結果，初期質問文を作成する際の元になった質問の要約文が出力結果として得られた場合に，ユーザが問題を解決したとする仮説を立てた．この仮説に基づき，ユーザが問題解決できたか否かという評価を行なった．ユーザにどのようなキータームの追加を促すべきかをシステム側が判定する方式として，サクセスファクタ分析方式を用いた．これは，ユーザの質問文と蓄積している質問の要約文とのマッチングが成功したものから一定の基準によってキータームを変更して結果を評価し，マッチングの精度に大きな影響を及ぼすものをルール化し，質問文にキータームを追加する方式である．本論文の第,章では，Web上の質問応答システムとコールセンターの現状のデータを具体的に例示し，初期質問文作成の意義やその作成方法について述べる．第,章では，従来行なわれてきた質問応答の関連研究を概観し，本研究の位置付けを明確にする．第,章では，実験と評価の方法について述べる．第,章では，サクセスファクタ分析方式の詳細と，それを用いた実験結果を述べ，本方式が対話的ナビゲーションに極めて有効であることを示す．</section>
  <section title="研究概要"/>
  <subsection title="Web上の質問応答システム">パソコンなどの使用法に関する質問応答システム(FMWorld.net)がWeb上で公開されているが，このシステムに対して2003年の1月〜3月までに入力された問い合わせのうち，助詞を含む約24万件の質問文の文字数分布を表,に示す．例,には，これらの助詞を含む質問文の一部を入力のあった頻度とともに例として示す．例,の中で，高頻度の質問文を質問応答システムに入力しても，それに対する応答が50以上もあり，問題を解決する知識にたどり着くには，さらなる絞込みが必要である．[ht]example</subsection>
  <subsection title="コールセンターにおける質問応答の例">Web上の質問応答システムは，ユーザの入力した質問文で過去の事例として蓄積した質問を検索して，その質問と応答の要約文を引き出して問題を解決する知識として提供している．この質問と応答の要約文は，コールセンターにおいてオペレータが電話の応対により解決した問題を質問(subject)と応答(solution)に分けてまとめて記述した記録の集まりである．実際の例を例,に示す．exampleこの記録は富士通株式会社において，約5年間にわたり蓄積した，コールセンターに問い合わせのあったパソコン関係の質問と応答の実例の一部である．これは，ユーザとオペレータの対話のそのままの記録ではなく，ユーザとの幾度かのやり取りによる対話を最後にまとめて書いたものである．本研究では，これらの蓄積した質問と応答を有効に活用してコールセンターのオペレータ業務の負荷を低減させるために，オペレータの介在なくユーザが自ら問題解決できるような，対話的な質問応答システムの実現を目指すことにした．</subsection>
  <subsection title="対話的ナビゲーション">Web上の質問応答システムにおいて，ユーザの問い合わせから，蓄積された質問応答へ導くためには，オペレータがユーザからいろいろな条件を聞き出して正しい解答へと導くのと同様に，計算機上でこれと同等なナビゲーションを実現しなければならない．そのためには，まず，ユーザの問い合わせを受け付け，必要に応じてシステムがユーザに適切なキータームの追加を促すことで，必要な条件を補いながら，質問の要約文とのマッチングを行ない，適切な応答の要約文を引き出す必要がある．今回の実験では，あらかじめ，質問の要約文から初期質問文を人手で作成する．その初期質問文を作成する際の元になった質問の要約文が出力結果として得られた場合に，ユーザが問題を解決できたとする仮説を立て，評価を行なう．ユーザに追加を促したキータームがどれだけ有効に機能したかどうかを測定するために，まず，初期質問文を入力として要約文とのマッチングを行ない，それをベースラインとする．次に，そのマッチングの結果で，元になった質問の要約文が得られなかった初期質問文に対しては，システム側がユーザに適切なキータームの追加を促し，二次質問文を用いて，再度，要約文とのマッチングを行なう（図,）．ここで用いる初期質問文の作成の目安としては，できるだけ一般的なユーザの質問文に近くなるように，実験内容を知らない第三者に以下の指針に沿った作成を依頼した．また，初期質問文の例を例,に示す．[hb]exampleこれらの初期質問文を使って，第,章で述べる実験を行なう．この実験で得られた結果を元に，システムがユーザに新たなキータームの入力を促し，問題の解決となるような対話的なナビゲーションシステムの構築を目指す．</subsection>
  <section title="関連研究">コールセンターのオペレータの代替をコンピュータが行なう理想的な解決方法としては，自然な対話による高精度な質問応答が重要なキーとなる．対話の研究としては，古くはELIZA~があるが，ユーザの問題解決という目的に作られたものではない．対話による情報検索~では，システムがユーザに対していくつかの選択肢を提示して検索を進めるもので，ユーザの意図が反映されにくい．近年，意味や文脈を考慮した対話モデル~が提案されているが，実用レベルには至っていない．一方，質問応答システムでは，ユーザの問い合わせに対して，一般的な情報源から応答を生成する方法がある．これは，TRECのQAタスクで用いられるような精密な検索クエリを作成することによる検索問題に置き換えるもの~と，限定された世界において，その世界モデルとユーザモデルの対応により，ゴールを明確にするプランニングの問題に置き換えるもの~がある．前者は，「米国の第23代大統領の名前は？」というようなピンポイント的な知識を答えとして求めているのに対し，パソコンなどの使用法に関する質問応答は，使用のプロセスのように過去の蓄積した事例を答えとして求めるものが多く，そのアプローチが異なる．後者は応用システムごとに分野知識やモデルの構築が必要で作成コストがかかり過ぎ，変化の激しい現実の問題には向かない，といった問題点がある．また，質問応答システムのもう一つのアプローチとして，蓄積された以前の質問と応答の検索によって，問題を解決する方法がある．この方法は，いくつかのタイプに分けられる．第一のタイプは，ユーザの問い合わせをオペレータが仲介し，そのオペレータが問題を解決する時の支援として用いられるものである．これは，ユーザとシステムの間を人間が仲介することから，システムには完全性は求められず，たとえ不完全であってもオペレータを支援する意味で効果を挙げているもの~もある．第二のタイプは，コンピュータが直接応答を行なうもので，ニュースグループのFAQを対象としたFAQ-Finder~や，これを参考にして作られたらのソフトウェア製品を対象としたヘルプデスク~がある．FAQ-Finderは，ユーザの問い合わせに対して類似したいくつかの質問文をリストとして提示し選択させているが，ユーザとシステムが対話を行ないながら問題を解決していく仕組みはない．ヘルプデスクは，対話の仕組みは取り入れたが，限定された一部の内容の選択にとどまっているのが現状である．本研究は，モデルに沿って構造化したデータを対象にするのではなく，コールセンターのオペレータの応答記録のような質問応答データを活用して，ユーザが自ら問題を解決できるように，蓄積された質問応答データへナビゲーションするための基礎技術の開発を試みるものである．</section>
  <section title="実験方法と評価方法"/>
  <subsection title="実験方法">図,に今回行なった実験の流れを示す．実験の順序は，実験1→実験2→実験3の順にそれぞれの結果を受けて進める．実験1では，初期質問文と質問の要約文のマッチングを行ない，一致した初期質問文と一致しなかった初期質問文に分け，実験2及び実験3へ振り分ける．「一致」，「不一致」の定義は,項で詳述する．実験2では，実験1で一致した初期質問文の成功要因を分析するために，キータームとする条件の変更や文節に含まれるキータームの削除を行なって，再度，質問の要約文とのマッチングを行なう．その結果，実験1では一致していたものが，あるタームを削除することによって不一致となる場合は，削除したタームがマッチングに重要な要素であると考え，マッチングに適切なタームを補うためのルール化を行なう．この方式は，マッチングに成功した要因を分析してルール化を行なうため，サクセスファクタ分析方式と呼び，実験3において検証する．実験3では，実験1で不一致となった初期質問文に対して，実験2から得られたタームの補いのルールと，質問の要約文を統計的に分析して得られたルールを用いてタームを補ってマッチングを行ない，実験1で得られるベースライン及び，単純に質問の要約文の先頭語を補ってマッチングを行なった結果と比較する．</subsection>
  <subsection title="評価方法">質問と応答の要約文へのナビゲーションは，ユーザが満足する結果に導かれれば，そこで問題が解決されるため，一般的な検索で用いる再現率と適合率は評価の尺度として適さない．そこで，初期質問文から作成した検索式を入力として，検索エンジンを用いて質問の要約文とマッチングさせ，元々の質問の要約文(初期質問文を作成する際の元になった質問）が第一位にランキングされたものを「一致」，第二位以下にランキングされたものを「不一致」とした．なお，ランキングは，以下の重み付けを用いた．[R_i=_j=1^k(tf_ijNdf_j)]ここで，全N件中，i番目(1iN)の文書の関連度R_iは，k個の単語のtfidfの総和で表す．tf_ijは，j番目(1jk)のタームのi番目の文書内出現回数であり，df_jは，j番目の単語の全質問の要約文中で出現する質問の要約文の数である．idf_jはN/df_jで計算している．tf_ijおよびdf_jのを取っているのは，突出して出現するタームの影響を減らすためである．また，キータームを補ったり，削ったりすることでマッチングの結果が変わるが，その指標を影響度Iで表す．[I=UU+M]ここでUはマッチングの結果，一致から不一致へ，または不一致から一致へ変化した初期質問文の数で，Mはマッチングの結果が変わらなかった初期質問文の数を表す．</subsection>
  <section title="実験と考察">まず，実験に用いるツールとデータの規模について述べる．初期質問文を質問の要約文とマッチングさせる検索エンジンは，我々の開発した全文検索エンジン~を用いた．初期質問文は，JUMAN~を用いて品詞付きの形態素解析結果を得て，検索に用いるキータームを選定した．キータームとして選定する品詞，及び実験に用いた初期質問文と質問の要約文は，以下の通りである．</section>
  <subsection title="実験1：ベースラインの設定">実験1では，初期質問文と質問の要約文のマッチングを行ない，これをベースラインとする．この実験結果を表,に示す．初期質問文は元々情報量が少ないので，元の質問の要約文と一致する可能性は低い．この状態が，ユーザが普通に質問文を入力した時にシステムが応答する状態である．一致した初期質問文は，問題が解決したものとし，一致／不一致の数を実験2，実験3の結果と比較する．</subsection>
  <subsection title="実験2：重要タームの要因分析">実験2では，実験1において質問の要約文とのマッチングで一致した初期質問文に対して，第一にキータームを削除する条件の変更，第二に文節に含まれるキータームの削除を行なって，再度，質問の要約文とのマッチングを行なう．その結果，不一致となるものを調べ，その要因分析（サクセスファクタ分析）を行なう．第一に，初期質問中のキータームの構文的役割の違いの影響を調べるために，以下の条件でキータームを削除する．この時，削除するキータームの数は同数とする．また，助詞「の」や名詞連続によるタームの比較を行なうため，ここでは，「の」を文節の区切りとしない．名詞と未定義語を併せて名詞類と呼び，文節の最後の名詞類を主辞と呼ぶ．例~,に，初期質問文の形態素解析結果と各条件で削除して残ったキータームの例を示す．[ht]exampleこのように，キータームの種類を変更してマッチングを行なった結果を表~,に示す．ここで，マイナスの影響度とは，実験1でマッチングが一致していたものがキータームの選択によって不一致となった割合を示す．キータームの数を減らすことにより，不一致となる数が増えるが，修飾語削除は，主辞削除に比べ，マイナスの影響度は13.4,%も大きくなり，修飾語はマッチングの精度に重要なキータームであることを示している．第二に，キータームが存在する文節の種類によってどのような影響があるかを調べるために，代表的な格助詞及び係助詞で終わる文節中のキータームを削除して残ったキータームによってマッチングを行なう．削除する文節は，初期質問文中に30個以上出現するものを選び，以下の通りとする．例,では，各文節を削除した場合の残ったキータームの例を示す．[ht]exampleこのように，各文節中を削除して残ったキータームによってマッチングを行なった結果を表,に示す．表,から，「が文節」と「を文節」中のキータームを除去するとその影響は最も顕著に現れ，どちらも70,%以上の影響度がある．その結果，以下の文節の順にマッチングに重要なキーワードが含まれると考えられる．[&gt;&gt;&gt;&gt;]*1cm</subsection>
  <subsection title="実験3：タームの補い">実験3では，実験1において質問の要約文とのマッチングで不一致であった初期質問文に対して，実験2から得られた補いルールと，比較のための単純な補いルールに基づいてキータームを追加して再度質問の要約文とのマッチングを行なう．その結果一致する初期質問文を調べ，その評価を行なう．実験1の結果では，5割以上の初期質問文が不一致であった．これらのマッチング精度を高めるためには，実験2の考察で得られたように，主辞だけをキータームとする検索では，問題を解決する知識（蓄積している応答文）にたどり着くことはできず，主辞の修飾語が重要である．そこで，今回は，主辞の周りにいかに適切なタームを補って詳細化するかというポイントに絞り，蓄積した類似質問にナビゲーションできるかどうかを実験で検証することにした．これを対話により効率的に補うためには，システムからどのような問い掛けをするかがタームの補いの方略となる．そのために，初期質問文中のどのタームに着目したらよいかを決め，さらに，着目したタームをどのように詳細化するかを決める必要がある．そこで，名詞の種類がタームの詳細化の方法を決定する手がかりになり得るかを調べるために，蓄積された34,736個の文を分析し，「の」による修飾・被修飾の出現頻度5以上のものを数え上げた．典型的な語句の例と合計頻度，及びその割合を表,〜,に示す．表,にはサ変名詞と「の」の関係，表,には普通名詞と「の」の関係，表,には固有名詞と「の」の関係を示す．これらの表からわかることは，サ変名詞の場合は，「〜の設定」というように「の」の右側に出現して，サ変名詞自体を意味的に限定するタームの要求が多い．一方，固有名詞の場合は，「富士通の〜」というように，「の」の左側に出現して，固有名詞を詳細化するタームの要求が多い．これまでの分析から，初期質問文中のどのタームに着目するかを決めるルールとして，以下に示す5つのルールを導出できる．文節が一つの場合は，その文節の主辞に着目する．文節が複数の場合は，検索精度に影響を与える文節の順（表,より「が文節&gt;を文節&gt;は文節&gt;に文節&gt;で文節」）に，その文節の主辞となるタームに着目する．着目するタームがサ変名詞ならば，そのサ変名詞が右側に出現するようなタームを補う（表,より）．着目するタームが普通名詞ならば，その普通名詞が右側または左側のどちらかに出現するような両方の可能性を考慮してタームを補う（表,より）．着目するタームが固有名詞ならば，その固有名詞が左側に出現するようなタームを補う（表,より）．着目するターム「B」がすでに「AのB」の形で修飾されている場合には，表,の品詞の組み合わせで着目すべきタームを決定する．例えば，Aがサ変名詞でBが普通名詞の場合，Aは左から修飾される（ルール(2)より）場合があり、Bは左から修飾される場合と、右を修飾する（ルール(3)より）場合がある．ここで，Bは「Aの」によりすでに修飾されているため，左から修飾されることはない．よって着目すべきタームは第一に「A」，第二に「B」となる．ルール(1)〜(5)で定めた着目すべきタームに対して新しいタームを補うために，システムからユーザに問いかける句の生成ルールを表,に示す．これらのルールを用いて，着目するタームとシステムの問い掛けを決定する．その問い掛けへユーザが返す答えに含まれるタームが一次質問文へ補うタームとなる．表,において，上段は適用した着目すべきタームを決定するルールの番号，下段はシステムからの問い掛けを示し，「｜」記号は，どちらの可能性もあることを示す．例えば，ルール(1)で着目する文節が決定されたら，その文節のタームに着目する．そのタームがAのBの形になっていなければ，そのタームをBとして，Bの品詞を表,にあてはめる．もしBがサ変名詞であれば，Aが「ナシ」となり，「どんなB」が導かれる．これにより，システムからユーザに「どんなBですか」という問い掛けを返す．また，もし着目するタームがAのBの形になっていて，Aがサ変名詞，Bが普通名詞なら，表,から「どんなA」｜「Bの何」が導かれる．これにより，システムからの問い掛けは，「どんなAですか？」または「Bの何ですか？」となり，いずれかの新しいタームの要求を行なうことになる．なお，表,では，「の」による修飾の補いが原則であるが，サ変名詞の限定には「どんな〜」を用いた方が自然な問い掛けとなるため，ヒューリスティックなルールとして用いた．このように作成したシステムからの問い掛けに対して，ユーザが返した答えに含まれるキータームを初期質問文に追加して，二次質問文を作成する．例,には，初期質問文に対して表,で示したルールを適用し，システムが対話的にキータームを補い，二次質問文に相当するマッチングのための検索式を生成することを想定した例を示す．ここでは，実験1のベースラインのキータームを利用した検索式を生成する．[ht]example例,で示したような新しい二次質問文から生成される検索式によってマッチングした結果を表,に示す．比較のため，質問の要約文の先頭語を補うという単純な補いルールに基づきキータームの追加を行なってマッチングした結果も表,に併記する．実験の目的は，ユーザが効率的に問題を解決できる知識にたどり着くことであり，対話的にタームを補っていくシステムを想定している．できる限り最適なタームを補うことが，問題解決を早めることに有効に働く．表,では，単純に補った場合も，先頭に来るタームが固有名詞である場合が多いため，ある程度の精度向上は見られるが，これはアドホックな対応である．ルールによって補った結果の影響度が高く，単純にタームを補うよりも効果が得られた．</subsection>
  <section title="おわりに">今回の実験では，ユーザの自然言語による状況説明や質問を表わす初期質問文をトリガーとして，システムからユーザに新たなキータームの入力を促してユーザの意図する適切な質問応答の要約文に速やかに到達できるような対話的ナビゲーション技術を提案した．初期質問文中のどのようなタームが検索式を作成するのに重要であるかを判定する方式として，入力した質問と要約文とのマッチングが成功したものから一定の基準によってタームを変更するサクセスファクタ分析方式を適用した．その結果，主辞を詳細化するタームは，マッチングの精度に極めて大きく影響することが明らかになり，そのタームを検索式に補うことで，質問の要約文の先頭語を補うという単純な補いルールに比べ，マッチング精度を約2倍向上させることができた（これは，初期質問では一致しなかった質問に，システムとユーザとの1回の対話を加えるだけで，5割近くが一致する，ということを示している）．今回実証したタームの補強ルールは，音声の認識・合成技術を用いた音声応答システムに適用していくことが理想的であり，今後の課題である．また，今回の実験では，20文字程度の短い質問文を想定している．実際には，このような短い質問文が7割程度を占めているため，本稿で述べたシステムが実装されれば，オペレータ業務の一部を肩代わりし，労力の軽減につながる．しかし，Web上の質問応答システムにおいては，長い文章の入力もあり，このような文章も解析して対話ができるようにすることが望ましい．これについては，今後の自然言語処理技術の進展に期待したい．</section>
</root>
